//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        // set 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
        GenInfo();            // various settings
        Segments();           // segmentation
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();   // structure type infos
        Patches();            // manual patches
        SegRegs();            // segment register values
        Bytes();              // individual bytes (code,data)
        Functions();          // function definitions
        // clear 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("metapc", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 1);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLG, SCF_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_CMT_INDENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("ms16win");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {

	add_segm_ex(0X10000,0X1F882,0X1000,0,1,2,ADDSEG_NOSREG);
	SegRename(0X10000,"seg000");
	SegClass (0X10000,"CODE");
	SegDefReg(0x10000,"ds",0x328B);
	set_segm_type(0X10000,2);
	add_segm_ex(0X1F882,0X21A79,0X1F88,0,1,2,ADDSEG_NOSREG);
	SegRename(0X1F882,"seg001");
	SegClass (0X1F882,"CODE");
	SegDefReg(0x1F882,"ds",0x328B);
	set_segm_type(0X1F882,2);
	add_segm_ex(0X21A79,0X22746,0X21A7,0,1,2,ADDSEG_NOSREG);
	SegRename(0X21A79,"seg002");
	SegClass (0X21A79,"CODE");
	SegDefReg(0x21A79,"ds",0x328B);
	set_segm_type(0X21A79,2);
	add_segm_ex(0X22746,0X228D0,0X2274,0,1,2,ADDSEG_NOSREG);
	SegRename(0X22746,"seg003");
	SegClass (0X22746,"CODE");
	SegDefReg(0x22746,"ds",0x328B);
	set_segm_type(0X22746,2);
	add_segm_ex(0X228D0,0X328B0,0X228D,0,1,2,ADDSEG_NOSREG);
	SegRename(0X228D0,"seg004");
	SegClass (0X228D0,"DATA");
	SegDefReg(0x228D0,"ds",0x328B);
	set_segm_type(0X228D0,3);
	add_segm_ex(0X328B0,0X3C8D0,0X328B,0,3,2,ADDSEG_NOSREG);
	SegRename(0X328B0,"dseg");
	SegClass (0X328B0,"DATA");
	SegDefReg(0x328B0,"ds",0x328B);
	set_segm_type(0X328B0,3);
	add_segm_ex(0X3C8D0,0X3D0D0,0X3C8D,0,1,5,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X3C8D0,"seg006");
	SegClass (0X3C8D0,"STACK");
	SegDefReg(0x3C8D0,"ds",0x328B);
	set_segm_type(0X3C8D0,9);
	set_inf_attr(INF_LOW_OFF, 0x20);
	set_inf_attr(INF_HIGH_OFF, 0x2D0D0);
}

static Enums_0(id) {

	id = add_enum(-1,"enum_1",0x1100000);
	add_enum_member(id,"DOS_SET_IRQH",	0X25,	-1);
	add_enum_member(id,"PORT_PIT_TIME0",	0X40,	-1);
	add_enum_member(id,"PORT_PIT_CNTRL",	0X43,	-1);
	id = add_enum(-1,"Pointers",0x1100000);
	add_enum_member(id,"COMM_GFXOVL_SEG",	0X1A,	-1);
	add_enum_member(id,"COMM_SNDOVL_SEG",	0X1C,	-1);
	add_enum_member(id,"COMM_MISCOVL_SEG",	0X1E,	-1);
	add_enum_member(id,"COMM_GFXBUF_PTR",	0X20,	-1);
	add_enum_member(id,"COMM_HERC_FLAG",	0X24,	-1);
	add_enum_member(id,"COMM_SETUP_DONE_OFFSET",	0X26,	-1);
	add_enum_member(id,"COMM_SETUP_GFXMODE_OFFSET",	0X30,	-1);
	add_enum_member(id,"COMM_UNK7",	0X38,	-1);
	add_enum_member(id,"COMM_JOYDATA_OFF",	0X48,	-1);
	add_enum_member(id,"COMM_USEJOY_OFF",	0X72,	-1);
	add_enum_member(id,"COMM_GFXMODE_OFFSET",	0X78,	-1);
	add_enum_member(id,"COMM_WORLDBUF",	0X7A,	-1);
	add_enum_member(id,"OFF_IACA_START",	0X4F0,	-1);
	add_enum_member(id,"COMM_GAMEDATA_OFFSET",	0X120E,	-1);
	id = add_enum(-1,"Interrupt",0x1100000);
	add_enum_member(id,"IRQ_CBREAK",	0X1B,	-1);
	id = add_enum(-1,"Game",0x1100000);
	add_enum_member(id,"GAMEDATA_THEATER",	0X38,	-1);
	add_enum_member(id,"GAMEDATA_DIFFICULTY",	0X3E,	-1);
	add_enum_member(id,"GAMEDATA_UNK4",	0X40,	-1);
	id = add_enum(-1,"Misc",0x1100000);
	add_enum_member(id,"WAYPT_PRIMARY",	0X1,	-1);
	add_enum_member(id,"WAYPT_SECONDARY",	0X2,	-1);
	add_enum_member(id,"WAYPT_BASE",	0X3,	-1);
	add_enum_member(id,"IRQ_VIDEO",	0X10,	-1);
	add_enum_member(id,"OVL_HDR_CODESEG",	0X18,	-1);
	add_enum_member(id,"OVL_HDR_FIRSTIDX",	0X1C,	-1);
	add_enum_member(id,"OVL_HDR_SLOTCOUNT",	0X22,	-1);
	add_enum_member(id,"OVL_HDR_FIRSTPTR",	0X24,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("SREGS");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x2), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x6), "unsigned int");
	id = get_struc_id("struc_1");
	id = get_struc_id("struc_2");
	id = get_struc_id("struc_3");
	id = get_struc_id("struc_4");
	id = get_struc_id("Waypoint");
	id = get_struc_id("Missile");
	id = get_struc_id("Sam");
	id = get_struc_id("MissileSpec");
	id = get_struc_id("struc_9");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"SREGS",0);
	id = add_struc(-1,"struc_1",0);
	id = add_struc(-1,"struc_2",0);
	id = add_struc(-1,"struc_3",0);
	id = add_struc(-1,"struc_4",0);
	id = add_struc(-1,"Waypoint",0);
	id = add_struc(-1,"Missile",0);
	id = add_struc(-1,"Sam",0);
	id = add_struc(-1,"MissileSpec",0);
	id = add_struc(-1,"struc_9",0);
	
	id = get_struc_id("SREGS");
	mid = add_struc_member(id,"_es",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_cs",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_ss",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_ds",	0X6,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("struc_1");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("struc_2");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_6",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	8);
	
	id = get_struc_id("struc_3");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6",	0X6,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	26);
	
	id = get_struc_id("struc_4");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_6",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("Waypoint");
	mid = add_struc_member(id,"x",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"y",	0X2,	0x10000400,	-1,	2);
	
	id = get_struc_id("Missile");
	mid = add_struc_member(id,"field_0",	0,	0x50000400,	0,	10);
	mid = add_struc_member(id,"field_A",	0XA,	0x50000400,	0,	12);
	mid = add_struc_member(id,"field_16",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_18",	0X18,	0x10000400,	-1,	2);
	
	id = get_struc_id("Sam");
	mid = add_struc_member(id,"field_0",	0,	0x50000400,	0,	8);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_10",	0X10,	0x10000400,	-1,	2);
	
	id = get_struc_id("MissileSpec");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	
	id = get_struc_id("struc_9");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_6",	0X6,	0x10000400,	-1,	2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X10000,	E_PREV + 0,	"; File Name   : Z:\\ida\\egame.exe");
	update_extra_cmt		(0X10000,	E_PREV + 1,	"; Format      : MS-DOS executable (EXE)");
	update_extra_cmt		(0X10000,	E_PREV + 2,	"; Base Address: 1000h Range: 10000h-3D0D0h Loaded length: 28F70h");
	update_extra_cmt		(0X10000,	E_PREV + 3,	"; Entry Point : 1000:E432");
	update_extra_cmt		(0X10000,	E_PREV + 4,	"; OS type         :  MS DOS");
	update_extra_cmt		(0X10000,	E_PREV + 5,	"; Application type:  Executable 16bit");
	create_byte	(0X10000);
	make_array	(0X10000,	0X10);
	set_name	(0X10000,	"padding");
	create_insn	(0X10010);
	set_name	(0X10010,	"main");
	create_insn	(x=0X10013);
	op_hex		(x,	1);
	create_insn	(x=0X10016);
	op_stkvar	(x,	0);
	create_insn	(x=0X1001B);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	create_insn	(x=0X10020);
	op_stkvar	(x,	1);
	create_insn	(x=0X10035);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	create_insn	(x=0X1003F);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	set_cmt	(0X10043,	"Push GFX Overlay Segment from commData",	0);
	create_insn	(x=0X10046);
	op_hex		(x,	1);
	create_insn	(x=0X1004D);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	set_cmt	(0X10051,	"Push MISC Overlay Segment from commData",	0);
	create_insn	(x=0X10054);
	op_hex		(x,	1);
	create_insn	(x=0X1005B);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	set_cmt	(0X1005F,	"Push Sound Overlay Segment from commData",	0);
	create_insn	(x=0X10062);
	op_hex		(x,	1);
	set_cmt	(0X10069,	"Get Hercules Graphics Flag from commData",	0);
	create_insn	(x=0X10069);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	set_cmt	(0X10070,	"Get GFX Mode from commData",	0);
	create_insn	(x=0X10070);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	set_cmt	(0X10083,	"Get Use Joystick Flag from commData",	0);
	create_insn	(x=0X10083);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	set_name	(0X1008C,	"cond_1008C");
	set_cmt	(0X1008E,	"Get Joystick Data pointer from commData",	0);
	create_insn	(x=0X1008E);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	create_insn	(x=0X10098);
	op_hex		(x,	1);
	create_insn	(0X1009D);
	set_name	(0X1009D,	"else_1009D");
	create_insn	(x=0X1009F);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X100B1);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(x=0X100BA);
	op_hex		(x,	1);
	set_cmt	(0X100C1,	"Get Theater of Operations from gameData",	0);
	create_insn	(x=0X100C1);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X100D1);
	op_hex		(x,	1);
	create_insn	(0X100D6);
	create_insn	(x=0X100DF);
	op_hex		(x,	1);
	set_cmt	(0X100E6,	"Get Graphics Buffer Pointer from commData",	0);
	create_insn	(x=0X100E6);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	create_insn	(x=0X10111);
	op_hex		(x,	1);
	set_cmt	(0X1012C,	"union REGS *",	0);
	set_cmt	(0X10130,	"int",	0);
	set_cmt	(0X10131,	"INT 10h - Video Services",	0);
	create_insn	(x=0X10134);
	op_hex		(x,	1);
	set_cmt	(0X1013C,	"int",	0);
	create_insn	(x=0X10140);
	op_hex		(x,	1);
	set_cmt	(0X10147,	"char *",	0);
	create_insn	(0X10147);
	set_name	(0X10147,	"drawCockpit");
	create_insn	(x=0X10154);
	op_enum		(x,	1,	GetEnum("Game"),0);
	create_insn	(x=0X10158);
	op_hex		(x,	1);
	create_insn	(x=0X1015A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	set_cmt	(0X1015E,	"char *",	0);
	create_insn	(x=0X10165);
	op_hex		(x,	1);
	create_insn	(x=0X10194);
	op_hex		(x,	1);
	create_insn	(x=0X101B1);
	op_hex		(x,	1);
	create_insn	(0X101B6);
	create_insn	(x=0X101C1);
	op_hex		(x,	1);
	create_insn	(x=0X101E4);
	op_hex		(x,	1);
	create_insn	(x=0X1020A);
	op_hex		(x,	1);
	create_insn	(0X10211);
	set_name	(0X10211,	"MainGameLoop");
	set_cmt	(0X10214,	"floppy motor runtime in bda???",	0);
	create_insn	(x=0X10246);
	op_hex		(x,	1);
	create_insn	(x=0X10250);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(x=0X1027B);
	op_hex		(x,	1);
	create_insn	(x=0X10285);
	op_hex		(x,	1);
	create_insn	(0X10294);
	create_insn	(0X10297);
	create_insn	(0X1029A);
	set_name	(0X1029A,	"gfxInit");
	create_insn	(x=0X1029D);
	op_hex		(x,	1);
	create_insn	(x=0X102A8);
	op_hex		(x,	1);
	create_insn	(x=0X102B4);
	op_hex		(x,	1);
	create_insn	(x=0X102B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X102BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X102C6);
	op_hex		(x,	1);
	create_insn	(x=0X102D1);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(x=0X102DA);
	op_hex		(x,	1);
	create_insn	(0X102E1);
	create_insn	(0X102E2);
	set_name	(0X102E2,	"loadF15DgtlBin");
	create_insn	(x=0X102F9);
	op_hex		(x,	1);
	set_cmt	(0X102FB,	"DOS - Allocate Memory",	0);
	create_insn	(x=0X102FB);
	op_hex		(x,	0);
	create_insn	(x=0X1030C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1030F,	"DOS - Open File with Handle",	0);
	create_insn	(x=0X1030F);
	op_hex		(x,	0);
	create_insn	(x=0X10317);
	op_hex		(x,	1);
	create_insn	(x=0X10319);
	op_hex		(x,	1);
	create_insn	(x=0X1031B);
	op_hex		(x,	1);
	create_insn	(x=0X1031D);
	op_hex		(x,	1);
	create_insn	(x=0X10328);
	op_hex		(x,	1);
	set_cmt	(0X1032A,	"DOS - Read from File with Handle",	0);
	create_insn	(x=0X1032A);
	op_hex		(x,	0);
	create_insn	(x=0X1032E);
	op_hex		(x,	1);
	set_cmt	(0X10330,	"DOS - Close File with Handle",	0);
	create_insn	(x=0X10330);
	op_hex		(x,	0);
	create_insn	(0X10334);
	create_insn	(x=0X10337);
	op_hex		(x,	1);
	create_insn	(x=0X10344);
	op_stkvar	(x,	0);
	create_insn	(x=0X1034C);
	op_hex		(x,	1);
	create_insn	(x=0X10356);
	op_stkvar	(x,	0);
	create_insn	(x=0X1035B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1035E);
	op_hex		(x,	1);
	create_insn	(x=0X10368);
	op_stkvar	(x,	0);
	create_insn	(x=0X1036B);
	op_stkvar	(x,	0);
	set_cmt	(0X10386,	"__int32",	0);
	set_cmt	(0X10394,	"__int32",	0);
	create_insn	(x=0X10398);
	op_stkvar	(x,	0);
	create_insn	(x=0X103A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X103B0);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X103B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X103BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X103CD);
	op_hex		(x,	1);
	create_insn	(x=0X103D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X103DD);
	op_hex		(x,	1);
	create_insn	(x=0X103E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X103E5);
	op_hex		(x,	1);
	create_insn	(x=0X103E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X103F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1040E);
	op_stkvar	(x,	0);
	create_insn	(x=0X10415);
	op_hex		(x,	1);
	create_insn	(x=0X10425);
	op_hex		(x,	1);
	create_insn	(x=0X1042A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1042D);
	op_hex		(x,	1);
	create_insn	(x=0X10431);
	op_stkvar	(x,	0);
	create_insn	(x=0X1043B);
	op_hex		(x,	1);
	create_insn	(x=0X1043D);
	op_hex		(x,	1);
	create_insn	(x=0X1044E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10456);
	op_hex		(x,	1);
	create_insn	(x=0X10458);
	op_hex		(x,	1);
	create_insn	(x=0X10466);
	op_stkvar	(x,	0);
	create_insn	(x=0X10469);
	op_stkvar	(x,	0);
	create_insn	(x=0X1046F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1047B);
	op_hex		(x,	1);
	create_insn	(x=0X10481);
	op_stkvar	(x,	1);
	create_insn	(x=0X10484);
	op_stkvar	(x,	0);
	create_insn	(x=0X1048C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10491);
	op_stkvar	(x,	1);
	create_insn	(x=0X10494);
	op_hex		(x,	1);
	create_insn	(x=0X1049B);
	op_stkvar	(x,	0);
	create_insn	(x=0X104A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X104A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X104B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X104B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X104C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X104C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X104CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X104D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X104D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X104EB);
	op_hex		(x,	1);
	create_insn	(x=0X104EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X104F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1050B);
	op_stkvar	(x,	0);
	create_insn	(x=0X10517);
	op_stkvar	(x,	1);
	create_insn	(x=0X10524);
	op_stkvar	(x,	1);
	create_insn	(x=0X10527);
	op_hex		(x,	1);
	create_insn	(x=0X1052D);
	op_stkvar	(x,	0);
	create_insn	(x=0X10530);
	op_stkvar	(x,	0);
	create_insn	(x=0X1053C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10544);
	op_stkvar	(x,	0);
	create_insn	(x=0X10555);
	op_hex		(x,	1);
	create_insn	(x=0X1055E);
	op_stkvar	(x,	0);
	create_insn	(x=0X10565);
	op_hex		(x,	1);
	create_insn	(x=0X1056A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1056D);
	op_hex		(x,	1);
	create_insn	(x=0X10571);
	op_stkvar	(x,	0);
	create_insn	(x=0X10581);
	op_stkvar	(x,	1);
	create_insn	(x=0X10596);
	op_stkvar	(x,	0);
	create_insn	(x=0X1059D);
	op_hex		(x,	1);
	create_insn	(x=0X105AD);
	op_hex		(x,	1);
	create_insn	(x=0X105B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X105B5);
	op_hex		(x,	1);
	create_insn	(x=0X105B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X105C3);
	op_hex		(x,	1);
	create_insn	(x=0X105C5);
	op_hex		(x,	1);
	create_insn	(x=0X105D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X105DE);
	op_hex		(x,	1);
	create_insn	(x=0X105E0);
	op_hex		(x,	1);
	create_insn	(x=0X105EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X105F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X105F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10600);
	op_stkvar	(x,	1);
	create_insn	(x=0X10603);
	op_stkvar	(x,	1);
	create_insn	(x=0X10606);
	op_hex		(x,	1);
	create_insn	(x=0X1060C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10614);
	op_stkvar	(x,	0);
	create_insn	(x=0X10619);
	op_stkvar	(x,	1);
	create_insn	(x=0X1061C);
	op_hex		(x,	1);
	create_insn	(x=0X10623);
	op_stkvar	(x,	0);
	create_insn	(x=0X1062A);
	op_stkvar	(x,	0);
	create_insn	(x=0X10631);
	op_stkvar	(x,	0);
	create_insn	(x=0X10639);
	op_stkvar	(x,	0);
	create_insn	(x=0X10640);
	op_stkvar	(x,	0);
	create_insn	(x=0X10648);
	op_stkvar	(x,	0);
	create_insn	(x=0X1064F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10656);
	op_stkvar	(x,	0);
	create_insn	(x=0X1065A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10661);
	op_stkvar	(x,	1);
	create_insn	(x=0X10673);
	op_hex		(x,	1);
	make_array	(0X10685,	0X3);
	create_insn	(0X10688);
	set_name	(0X10688,	"setupOverlaySlots");
	create_insn	(x=0X10690);
	op_stkvar	(x,	1);
	create_insn	(0X1069A);
	create_insn	(x=0X106A2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X106A5);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(x=0X106B1);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(x=0X106B7);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(x=0X106BA);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(0X106E1);
	create_insn	(0X106F4);
	create_insn	(x=0X106FB);
	op_hex		(x,	1);
	set_cmt	(0X106FD,	"DOS - 2+ - FREE MEMORY\nES = segment address of area to be freed",	0);
	create_insn	(x=0X106FD);
	op_hex		(x,	0);
	create_insn	(x=0X10704);
	op_hex		(x,	1);
	set_cmt	(0X10706,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"",	0);
	create_insn	(x=0X10706);
	op_hex		(x,	0);
	create_byte	(0X1070A);
	create_insn	(0X1070B);
	create_insn	(x=0X1071B);
	op_hex		(x,	1);
	set_cmt	(0X1071E,	"DOS - Terminate with Exit Code",	0);
	create_insn	(x=0X1071E);
	op_hex		(x,	0);
	create_insn	(0X10720);
	set_name	(0X10720,	"UpdatePlayerAndWorldState");
	create_insn	(x=0X10723);
	op_hex		(x,	1);
	create_insn	(x=0X10737);
	op_hex		(x,	1);
	create_insn	(x=0X10739);
	op_hex		(x,	1);
	create_insn	(0X10741);
	create_insn	(x=0X10753);
	op_hex		(x,	1);
	create_insn	(x=0X10755);
	op_hex		(x,	1);
	create_insn	(0X1075D);
	create_insn	(0X1076F);
	create_insn	(x=0X1078C);
	op_hex		(x,	1);
	create_insn	(x=0X10795);
	op_hex		(x,	1);
	create_insn	(x=0X107A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10827);
	op_hex		(x,	1);
	create_insn	(x=0X10855);
	op_hex		(x,	1);
	create_insn	(0X10861);
	create_insn	(x=0X10867);
	op_stkvar	(x,	0);
	create_insn	(x=0X10872);
	op_hex		(x,	1);
	create_insn	(x=0X10887);
	op_hex		(x,	1);
	create_insn	(0X1088E);
	create_insn	(x=0X108AB);
	op_hex		(x,	1);
	create_insn	(x=0X108BC);
	op_hex		(x,	1);
	create_insn	(x=0X108C6);
	op_hex		(x,	1);
	create_insn	(0X10918);
	create_insn	(0X10929);
	create_insn	(x=0X10944);
	op_hex		(x,	1);
	create_insn	(x=0X10949);
	op_hex		(x,	1);
	create_insn	(0X1095F);
	create_insn	(x=0X10969);
	op_stkvar	(x,	0);
	create_insn	(x=0X10970);
	op_stkvar	(x,	0);
	create_insn	(x=0X10979);
	op_stkvar	(x,	0);
	create_insn	(x=0X10981);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X1098A);
	create_insn	(x=0X1098D);
	op_stkvar	(x,	1);
	create_insn	(x=0X10992);
	op_hex		(x,	1);
	create_insn	(x=0X109A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X109A8);
	op_hex		(x,	1);
	create_insn	(x=0X109AC);
	op_hex		(x,	1);
	create_insn	(x=0X109AE);
	op_hex		(x,	1);
	create_insn	(x=0X109BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X109DB);
	op_hex		(x,	1);
	create_insn	(x=0X109DD);
	op_hex		(x,	1);
	create_insn	(0X109E5);
	create_insn	(x=0X109F5);
	op_hex		(x,	1);
	create_insn	(x=0X109F7);
	op_hex		(x,	1);
	create_insn	(0X109FF);
	create_insn	(0X10A14);
	create_insn	(x=0X10A1F);
	op_hex		(x,	1);
	create_insn	(x=0X10A4B);
	op_hex		(x,	1);
	create_insn	(x=0X10A4D);
	op_hex		(x,	1);
	set_name	(0X10A4D,	"CheckMissionEvents");
	create_insn	(0X10A55);
	create_insn	(x=0X10A63);
	op_hex		(x,	1);
	create_insn	(x=0X10A65);
	op_hex		(x,	1);
	create_insn	(0X10A6D);
	create_insn	(x=0X10A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AA3);
	op_hex		(x,	1);
	create_insn	(x=0X10AA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X10ABB);
	op_hex		(x,	1);
	create_insn	(x=0X10ABD);
	op_hex		(x,	1);
	create_insn	(0X10AC5);
	create_insn	(x=0X10ADB);
	op_hex		(x,	1);
	create_insn	(x=0X10ADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AFA);
	op_hex		(x,	1);
	create_insn	(x=0X10AFC);
	op_hex		(x,	1);
	create_insn	(0X10B04);
	create_insn	(x=0X10B12);
	op_hex		(x,	1);
	create_insn	(x=0X10B2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B3E);
	op_hex		(x,	1);
	create_insn	(0X10B48);
	create_insn	(x=0X10B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B77);
	op_hex		(x,	1);
	create_insn	(x=0X10B8D);
	op_hex		(x,	1);
	create_insn	(x=0X10B90);
	op_hex		(x,	1);
	create_insn	(x=0X10B92);
	op_hex		(x,	1);
	create_insn	(x=0X10B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BA5);
	op_hex		(x,	1);
	create_insn	(x=0X10BB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BE0);
	op_hex		(x,	1);
	create_insn	(0X10BE5);
	create_insn	(x=0X10BF0);
	op_hex		(x,	1);
	create_insn	(x=0X10C43);
	op_hex		(x,	1);
	create_insn	(x=0X10C46);
	op_hex		(x,	1);
	create_insn	(0X10C50);
	create_insn	(x=0X10C5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C63);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C69);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C75);
	op_hex		(x,	1);
	create_insn	(x=0X10C7D);
	op_hex		(x,	1);
	create_insn	(x=0X10C85);
	op_hex		(x,	1);
	create_insn	(x=0X10CA0);
	op_hex		(x,	1);
	create_insn	(x=0X10CA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X10CA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X10CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CB4);
	op_stkvar	(x,	1);
	create_insn	(0X10CBC);
	set_name	(0X10CCA,	"RestoreJoystickDataFromLocal");
	create_insn	(x=0X10D18);
	op_hex		(x,	1);
	create_insn	(0X10D2C);
	create_insn	(x=0X10D32);
	op_hex		(x,	1);
	create_insn	(x=0X10D3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D44);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D47);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D5A);
	op_hex		(x,	1);
	create_insn	(x=0X10D6B);
	op_hex		(x,	1);
	create_insn	(0X10D76);
	create_insn	(x=0X10D7C);
	op_hex		(x,	1);
	create_insn	(x=0X10D8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DA8);
	op_stkvar	(x,	0);
	create_insn	(0X10DB1);
	create_insn	(x=0X10DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DC2);
	op_hex		(x,	1);
	create_insn	(x=0X10DDF);
	op_hex		(x,	1);
	set_name	(0X10DDF,	"ResetObjectTimers");
	create_insn	(x=0X10DEC);
	op_hex		(x,	1);
	create_insn	(x=0X10DEE);
	op_hex		(x,	1);
	create_insn	(x=0X10DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DF9);
	op_hex		(x,	1);
	create_insn	(0X10E10);
	create_insn	(x=0X10E13);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E24);
	op_hex		(x,	1);
	create_insn	(x=0X10E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E45);
	op_hex		(x,	1);
	create_insn	(x=0X10E47);
	op_hex		(x,	1);
	create_insn	(0X10E4F);
	create_insn	(x=0X10E5F);
	op_hex		(x,	1);
	create_insn	(x=0X10E61);
	op_hex		(x,	1);
	create_insn	(0X10E69);
	create_insn	(x=0X10E78);
	op_hex		(x,	1);
	create_insn	(x=0X10E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E99);
	op_hex		(x,	1);
	create_insn	(0X10EA4);
	create_insn	(x=0X10EA9);
	op_hex		(x,	1);
	create_insn	(x=0X10EB6);
	op_hex		(x,	1);
	create_insn	(x=0X10EC5);
	op_hex		(x,	1);
	create_insn	(x=0X10ECD);
	op_hex		(x,	1);
	create_insn	(0X10EDA);
	create_insn	(x=0X10EE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X10EEB);
	op_hex		(x,	1);
	create_insn	(x=0X10EF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EFC);
	op_hex		(x,	1);
	create_insn	(x=0X10F02);
	op_stkvar	(x,	1);
	create_insn	(0X10F4F);
	create_insn	(x=0X10F69);
	op_hex		(x,	1);
	create_insn	(x=0X10F7F);
	op_hex		(x,	1);
	set_cmt	(0X10FCF,	"int",	0);
	create_insn	(x=0X10FD3);
	op_hex		(x,	1);
	create_insn	(x=0X10FEC);
	op_hex		(x,	1);
	set_cmt	(0X11013,	"int",	0);
	create_insn	(x=0X11017);
	op_hex		(x,	1);
	set_cmt	(0X11035,	"int",	0);
	create_insn	(x=0X11039);
	op_hex		(x,	1);
	create_insn	(0X11057);
	create_insn	(x=0X11067);
	op_hex		(x,	1);
	create_insn	(0X11071);
	create_insn	(x=0X1107D);
	op_hex		(x,	1);
	create_insn	(0X11086);
	create_insn	(x=0X11090);
	op_hex		(x,	1);
	create_insn	(0X11099);
	create_insn	(x=0X110B8);
	op_hex		(x,	1);
	create_insn	(x=0X110CE);
	op_hex		(x,	1);
	create_insn	(x=0X110D4);
	op_hex		(x,	1);
	create_insn	(x=0X110EB);
	op_hex		(x,	1);
	create_insn	(0X110F0);
	create_insn	(x=0X11106);
	op_hex		(x,	1);
	create_insn	(x=0X11115);
	op_hex		(x,	1);
	create_insn	(x=0X1111C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11123);
	op_hex		(x,	1);
	create_insn	(x=0X11128);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1112F);
	op_hex		(x,	1);
	create_insn	(0X1113C);
	create_insn	(x=0X11146);
	op_hex		(x,	1);
	create_insn	(0X11151);
	set_cmt	(0X11160,	"int",	0);
	create_insn	(x=0X11164);
	op_hex		(x,	1);
	set_cmt	(0X1117B,	"int",	0);
	create_insn	(x=0X1117F);
	op_hex		(x,	1);
	create_insn	(x=0X111A2);
	op_hex		(x,	1);
	create_insn	(x=0X111A4);
	op_hex		(x,	1);
	create_insn	(0X111AC);
	create_insn	(x=0X111BE);
	op_hex		(x,	1);
	create_insn	(x=0X111C0);
	op_hex		(x,	1);
	create_insn	(0X111C8);
	create_insn	(0X111D2);
	create_insn	(x=0X111D9);
	op_hex		(x,	1);
	create_insn	(x=0X111E5);
	op_hex		(x,	1);
	create_insn	(x=0X111E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X111EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X11203);
	op_stkvar	(x,	1);
	create_insn	(x=0X11224);
	op_stkvar	(x,	1);
	set_cmt	(0X11229,	"__int32",	0);
	create_insn	(x=0X1123B);
	op_hex		(x,	1);
	create_insn	(x=0X1123D);
	op_hex		(x,	1);
	create_insn	(0X11245);
	set_cmt	(0X1124A,	"__int32",	0);
	create_insn	(x=0X11256);
	op_stkvar	(x,	1);
	set_cmt	(0X1125B,	"__int32",	0);
	create_insn	(x=0X11270);
	op_hex		(x,	1);
	create_insn	(x=0X11272);
	op_hex		(x,	1);
	create_insn	(0X1127A);
	set_cmt	(0X1127F,	"__int32",	0);
	create_insn	(0X1128D);
	create_insn	(x=0X112D8);
	op_hex		(x,	1);
	set_cmt	(0X112DD,	"int",	0);
	create_insn	(x=0X112E1);
	op_hex		(x,	1);
	set_cmt	(0X112E7,	"int",	0);
	set_cmt	(0X112EB,	"int",	0);
	set_cmt	(0X112EE,	"int",	0);
	set_cmt	(0X112EF,	"int",	0);
	create_insn	(x=0X112F3);
	op_hex		(x,	1);
	set_cmt	(0X112F9,	"arg_0",	0);
	create_insn	(x=0X112FD);
	op_hex		(x,	1);
	create_insn	(x=0X11307);
	op_hex		(x,	1);
	create_insn	(0X1130C);
	create_insn	(x=0X11319);
	op_hex		(x,	1);
	create_insn	(x=0X1133C);
	op_hex		(x,	1);
	set_cmt	(0X11347,	"arg_0",	0);
	create_insn	(x=0X1134B);
	op_hex		(x,	1);
	create_insn	(x=0X11355);
	op_hex		(x,	1);
	create_insn	(0X1135A);
	create_insn	(x=0X1136E);
	op_hex		(x,	1);
	create_insn	(x=0X1138F);
	op_hex		(x,	1);
	create_insn	(0X11394);
	create_insn	(x=0X113AF);
	op_hex		(x,	1);
	create_insn	(x=0X113C0);
	op_hex		(x,	1);
	create_insn	(x=0X113D0);
	op_hex		(x,	1);
	create_insn	(x=0X113DD);
	op_hex		(x,	1);
	create_insn	(x=0X113EA);
	op_hex		(x,	1);
	create_insn	(x=0X113EC);
	op_hex		(x,	1);
	create_insn	(0X113FB);
	create_insn	(x=0X1140A);
	op_hex		(x,	1);
	create_insn	(x=0X11411);
	op_hex		(x,	1);
	create_insn	(x=0X11444);
	op_hex		(x,	1);
	create_insn	(x=0X11447);
	op_stkvar	(x,	0);
	create_insn	(x=0X11455);
	op_hex		(x,	1);
	create_insn	(x=0X11457);
	op_hex		(x,	1);
	create_insn	(x=0X11459);
	op_stkvar	(x,	1);
	set_cmt	(0X1145C,	"int",	0);
	create_insn	(x=0X11460);
	op_hex		(x,	1);
	create_insn	(x=0X11468);
	op_stkvar	(x,	1);
	create_insn	(x=0X1146E);
	op_hex		(x,	1);
	create_insn	(x=0X11470);
	op_hex		(x,	1);
	create_insn	(x=0X1147E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11485);
	op_stkvar	(x,	0);
	create_insn	(x=0X1148B);
	op_stkvar	(x,	0);
	create_insn	(x=0X11490);
	op_stkvar	(x,	1);
	create_insn	(x=0X11497);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1149F);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X114AC);
	create_insn	(x=0X114AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X114B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X114BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X114C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X114C8);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X114D0);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X114DD);
	create_insn	(0X114DF);
	create_insn	(0X114E8);
	create_insn	(x=0X114EB);
	op_hex		(x,	1);
	create_insn	(x=0X114F5);
	op_hex		(x,	1);
	create_insn	(0X114FC);
	set_name	(0X114FC,	"countermeasures");
	create_insn	(x=0X114FF);
	op_hex		(x,	1);
	create_insn	(x=0X11503);
	op_stkvar	(x,	0);
	create_insn	(x=0X11508);
	op_stkvar	(x,	1);
	create_insn	(x=0X1150B);
	op_hex		(x,	1);
	create_insn	(x=0X11524);
	op_hex		(x,	1);
	create_insn	(x=0X1152A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11531);
	op_stkvar	(x,	0);
	create_insn	(x=0X11534);
	op_stkvar	(x,	0);
	create_insn	(x=0X1153A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1153F);
	op_hex		(x,	1);
	create_insn	(x=0X11543);
	op_hex		(x,	1);
	create_insn	(x=0X11545);
	op_hex		(x,	1);
	create_insn	(x=0X11547);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1154E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11553);
	op_stkvar	(x,	0);
	create_insn	(x=0X1155C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11561);
	op_hex		(x,	1);
	create_insn	(x=0X11565);
	op_hex		(x,	1);
	create_insn	(x=0X11567);
	op_hex		(x,	1);
	create_insn	(x=0X1156E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11575);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11579);
	op_stkvar	(x,	1);
	create_insn	(x=0X1157C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11585);
	op_hex		(x,	1);
	create_insn	(x=0X11592);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11596);
	op_stkvar	(x,	1);
	create_insn	(x=0X1159B);
	op_stkvar	(x,	0);
	create_insn	(x=0X115A2);
	op_stkvar	(x,	0);
	create_insn	(0X115A9);
	create_insn	(0X115AB);
	create_insn	(x=0X115B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X115BA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X115BD,	"char *",	0);
	create_insn	(x=0X115C1);
	op_hex		(x,	1);
	create_insn	(x=0X115C4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X115C8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X115CB,	"char *",	0);
	create_insn	(x=0X115CF);
	op_hex		(x,	1);
	create_insn	(x=0X115D2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X115D9);
	op_hex		(x,	1);
	create_insn	(x=0X115DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X115DF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X115E2,	"char *",	0);
	create_insn	(x=0X115E6);
	op_hex		(x,	1);
	create_insn	(x=0X115E9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X115ED);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X115F0,	"char *",	0);
	create_insn	(x=0X115F4);
	op_hex		(x,	1);
	set_cmt	(0X115FE,	"char *",	0);
	create_insn	(x=0X115FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X11602);
	op_hex		(x,	1);
	set_cmt	(0X11604,	"int",	0);
	create_insn	(x=0X11604);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1160B);
	op_hex		(x,	1);
	create_insn	(x=0X1160F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11612,	"char *",	0);
	create_insn	(x=0X11616);
	op_hex		(x,	1);
	create_insn	(x=0X11619);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11620);
	op_hex		(x,	1);
	create_insn	(x=0X1162E);
	op_hex		(x,	1);
	create_insn	(0X11636);
	create_insn	(x=0X11639);
	op_hex		(x,	1);
	create_insn	(x=0X1163D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11644);
	op_stkvar	(x,	0);
	create_insn	(x=0X11647);
	op_stkvar	(x,	0);
	create_insn	(x=0X1164D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11652);
	op_hex		(x,	1);
	create_insn	(x=0X11656);
	op_hex		(x,	1);
	create_insn	(x=0X11658);
	op_hex		(x,	1);
	create_insn	(x=0X1165C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11663);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11669);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X11671);
	create_insn	(0X11676);
	create_insn	(x=0X11679);
	op_hex		(x,	1);
	create_insn	(x=0X1167D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11684);
	op_stkvar	(x,	0);
	create_insn	(x=0X1168D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11692);
	op_stkvar	(x,	1);
	create_insn	(x=0X11697);
	op_hex		(x,	1);
	create_insn	(x=0X1169B);
	op_hex		(x,	1);
	create_insn	(x=0X1169D);
	op_hex		(x,	1);
	create_insn	(x=0X116A1);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X116A8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X116AC);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X116B0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X116B4);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X116B8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X116BC);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X116C2);
	op_hex		(x,	1);
	create_insn	(0X116CC);
	create_insn	(x=0X116CF);
	op_hex		(x,	1);
	create_insn	(x=0X116D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X116E1);
	op_hex		(x,	1);
	create_insn	(x=0X116E4);
	op_stkvar	(x,	0);
	create_insn	(0X116EE);
	create_insn	(0X116F8);
	create_insn	(0X11702);
	create_insn	(x=0X1171D);
	op_hex		(x,	1);
	create_insn	(x=0X1172E);
	op_hex		(x,	1);
	create_insn	(x=0X1173B);
	op_stkvar	(x,	0);
	set_cmt	(0X1173E,	"int",	0);
	set_cmt	(0X1173F,	"int",	0);
	create_insn	(x=0X11746);
	op_hex		(x,	1);
	create_insn	(x=0X1174D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11752);
	op_hex		(x,	1);
	create_insn	(x=0X11756);
	op_hex		(x,	1);
	create_insn	(x=0X11758);
	op_hex		(x,	1);
	create_insn	(x=0X1175A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1175E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11768);
	op_hex		(x,	1);
	create_insn	(x=0X1176B);
	op_stkvar	(x,	0);
	set_cmt	(0X1176E,	"int",	0);
	set_cmt	(0X1176F,	"int",	0);
	create_insn	(x=0X11776);
	op_hex		(x,	1);
	create_insn	(x=0X11779);
	op_stkvar	(x,	1);
	create_insn	(x=0X1177E);
	op_hex		(x,	1);
	create_insn	(x=0X11782);
	op_hex		(x,	1);
	create_insn	(x=0X11784);
	op_hex		(x,	1);
	create_insn	(x=0X11786);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1178A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11794);
	op_hex		(x,	1);
	create_insn	(x=0X11799);
	op_stkvar	(x,	1);
	create_insn	(x=0X1179E);
	op_hex		(x,	1);
	create_insn	(x=0X117A2);
	op_hex		(x,	1);
	create_insn	(x=0X117A4);
	op_hex		(x,	1);
	create_insn	(x=0X117A6);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X117AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X117AF);
	op_hex		(x,	1);
	create_insn	(x=0X117B3);
	op_hex		(x,	1);
	create_insn	(x=0X117B5);
	op_hex		(x,	1);
	create_insn	(x=0X117B9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X117C1);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X117C5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X117CD);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X117D1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X117DC);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X117E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X117ED);
	op_hex		(x,	1);
	create_insn	(x=0X117F1);
	op_hex		(x,	1);
	create_insn	(x=0X117F3);
	op_hex		(x,	1);
	create_insn	(x=0X117F5);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11801);
	op_stkvar	(x,	0);
	create_insn	(x=0X11807);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1180B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1180E,	"char *",	0);
	create_insn	(x=0X11812);
	op_hex		(x,	1);
	set_cmt	(0X1181C,	"char *",	0);
	set_cmt	(0X1181D,	"int",	0);
	create_insn	(x=0X11824);
	op_hex		(x,	1);
	create_insn	(x=0X11828);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1182B,	"char *",	0);
	create_insn	(x=0X1182F);
	op_hex		(x,	1);
	create_insn	(x=0X11832);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11839);
	op_hex		(x,	1);
	create_insn	(0X11841);
	create_insn	(x=0X11844);
	op_hex		(x,	1);
	create_insn	(x=0X11850);
	op_stkvar	(x,	0);
	create_insn	(x=0X11857);
	op_stkvar	(x,	0);
	create_insn	(x=0X1185A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11860);
	op_stkvar	(x,	1);
	create_insn	(x=0X11867);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1186C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11874);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11878);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1187F);
	op_hex		(x,	1);
	create_insn	(x=0X1188D);
	op_hex		(x,	1);
	create_insn	(x=0X11890);
	op_stkvar	(x,	0);
	create_insn	(x=0X118A1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X118A5);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X118A9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X118AD);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X118B1);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X118BE);
	op_hex		(x,	1);
	create_insn	(x=0X118C5);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X118C9);
	op_stkvar	(x,	1);
	create_insn	(0X118D5);
	create_insn	(0X118F6);
	set_name	(0X118F6,	"InitMission");
	create_insn	(x=0X118F9);
	op_hex		(x,	1);
	create_insn	(x=0X1190A);
	op_hex		(x,	1);
	create_insn	(x=0X1190D);
	op_hex		(x,	1);
	create_insn	(x=0X1191A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11924);
	op_hex		(x,	1);
	create_insn	(x=0X1192D);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(0X11939);
	create_insn	(0X11945);
	create_insn	(x=0X11958);
	op_stkvar	(x,	1);
	create_insn	(x=0X1195B);
	op_hex		(x,	1);
	create_insn	(0X11971);
	create_insn	(x=0X11974);
	op_hex		(x,	1);
	create_insn	(x=0X11977);
	op_stkvar	(x,	0);
	create_insn	(x=0X1197E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11984);
	op_stkvar	(x,	0);
	create_insn	(x=0X1198C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11991);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X11999);
	create_insn	(0X119A3);
	set_name	(0X119A3,	"InitializeWeapons");
	create_insn	(x=0X119A6);
	op_hex		(x,	1);
	create_insn	(x=0X119B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X119B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X119BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X119C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X119C3);
	op_hex		(x,	1);
	create_insn	(x=0X119CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X119D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X119D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X119DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X119E5);
	op_stkvar	(x,	1);
	create_insn	(0X119F2);
	create_insn	(0X11A18);
	create_insn	(x=0X11A1B);
	op_hex		(x,	1);
	create_insn	(x=0X11A27);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A31);
	op_stkvar	(x,	0);
	set_cmt	(0X11A39,	"int",	0);
	create_insn	(x=0X11A3D);
	op_hex		(x,	1);
	create_insn	(x=0X11A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A43);
	op_hex		(x,	1);
	create_insn	(x=0X11A45);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11A49);
	op_stkvar	(x,	0);
	set_cmt	(0X11A4F,	"int",	0);
	create_insn	(x=0X11A50);
	op_stkvar	(x,	1);
	set_cmt	(0X11A56,	"int",	0);
	set_cmt	(0X11A5A,	"int",	0);
	create_insn	(x=0X11A5B);
	op_stkvar	(x,	1);
	set_cmt	(0X11A5F,	"int",	0);
	create_insn	(x=0X11A63);
	op_hex		(x,	1);
	create_insn	(x=0X11A6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A71);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A74);
	op_hex		(x,	1);
	create_insn	(x=0X11A76);
	op_hex		(x,	1);
	create_insn	(x=0X11A78);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11A7F);
	op_hex		(x,	1);
	create_insn	(0X11A84);
	create_insn	(0X11A88);
	set_name	(0X11A88,	"SetupWeaponDisplay");
	create_insn	(0X11A96);
	create_insn	(x=0X11AA3);
	op_hex		(x,	1);
	create_insn	(x=0X11AA5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11AB9);
	op_hex		(x,	1);
	create_insn	(x=0X11AC9);
	op_hex		(x,	1);
	create_insn	(x=0X11ACB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11ADF);
	op_hex		(x,	1);
	create_insn	(x=0X11AEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AEE);
	op_hex		(x,	1);
	create_insn	(x=0X11AF0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11B04);
	op_hex		(x,	1);
	create_insn	(x=0X11B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B13);
	op_hex		(x,	1);
	create_insn	(x=0X11B15);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11B29);
	op_hex		(x,	1);
	create_insn	(x=0X11B2C);
	op_stkvar	(x,	1);
	create_insn	(0X11B37);
	set_name	(0X11B37,	"PrepareToExit");
	create_insn	(x=0X11B41);
	op_stkvar	(x,	0);
	create_insn	(0X11B49);
	create_insn	(x=0X11B52);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B59);
	op_stkvar	(x,	0);
	create_insn	(x=0X11B6A);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(x=0X11BBC);
	op_hex		(x,	1);
	create_insn	(0X11BC3);
	create_insn	(x=0X11BC9);
	op_stkvar	(x,	0);
	create_insn	(0X11BD0);
	create_insn	(x=0X11BD9);
	op_stkvar	(x,	1);
	create_insn	(0X11BEB);
	create_insn	(x=0X11BF6);
	op_hex		(x,	1);
	create_insn	(0X11BFD);
	create_insn	(x=0X11C09);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C0F);
	op_stkvar	(x,	1);
	create_insn	(0X11C21);
	create_insn	(x=0X11C24);
	op_hex		(x,	1);
	create_insn	(0X11C31);
	create_insn	(x=0X11C44);
	op_hex		(x,	1);
	create_insn	(0X11C4A);
	create_insn	(x=0X11C54);
	op_hex		(x,	1);
	create_insn	(x=0X11C5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C69);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C6F);
	op_hex		(x,	1);
	create_insn	(x=0X11C79);
	op_hex		(x,	1);
	create_insn	(0X11C7F);
	create_insn	(x=0X11C86);
	op_hex		(x,	1);
	create_insn	(x=0X11C89);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CB2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11CBE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11CC1,	"char *",	0);
	create_insn	(x=0X11CC5);
	op_hex		(x,	1);
	create_insn	(x=0X11CC8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11CCC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11CCF,	"char *",	0);
	create_insn	(x=0X11CD3);
	op_hex		(x,	1);
	create_insn	(x=0X11CD6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11CDD);
	op_hex		(x,	1);
	create_insn	(0X11CE2);
	create_insn	(x=0X11CE8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11CEF);
	op_hex		(x,	1);
	create_insn	(0X11CF4);
	create_insn	(0X11CF6);
	create_insn	(0X11CFD);
	create_insn	(0X11D05);
	create_insn	(0X11D0C);
	create_insn	(0X11D10);
	create_insn	(0X11D1E);
	create_insn	(x=0X11D23);
	op_hex		(x,	1);
	create_insn	(x=0X11D27);
	op_hex		(x,	1);
	create_insn	(x=0X11D2E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D39);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D42);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D49);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D50);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D5E);
	op_hex		(x,	1);
	create_insn	(x=0X11D62);
	op_hex		(x,	1);
	create_insn	(x=0X11D64);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	set_cmt	(0X11D6E,	"char *",	0);
	create_insn	(0X11D6E);
	set_name	(0X11D6E,	"placeString");
	create_insn	(x=0X11D71);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D78);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11D7C);
	op_hex		(x,	1);
	create_insn	(x=0X11D7F);
	op_hex		(x,	1);
	create_insn	(x=0X11D81);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11D85);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11D88,	"char *",	0);
	create_insn	(x=0X11D8C);
	op_hex		(x,	1);
	create_insn	(x=0X11D8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D96);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11D9A);
	op_hex		(x,	1);
	set_cmt	(0X11D9C,	"char *",	0);
	create_insn	(x=0X11D9C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11DA3);
	op_hex		(x,	1);
	create_insn	(x=0X11DAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DB1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11DB5);
	op_hex		(x,	1);
	create_insn	(x=0X11DB8);
	op_hex		(x,	1);
	set_cmt	(0X11DBA,	"char *",	0);
	create_insn	(x=0X11DBA);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11DC1);
	op_hex		(x,	1);
	create_insn	(x=0X11DC8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11DCC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11DCF,	"char *",	0);
	create_insn	(x=0X11DD3);
	op_hex		(x,	1);
	create_insn	(x=0X11DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DDD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11DE1);
	op_hex		(x,	1);
	create_insn	(x=0X11DE3);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11DE7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11DEA,	"char *",	0);
	create_insn	(x=0X11DEE);
	op_hex		(x,	1);
	create_insn	(x=0X11DF1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X11DF4,	"char *",	0);
	create_insn	(x=0X11DF8);
	op_hex		(x,	1);
	create_insn	(0X11E0E);
	set_name	(0X11E0E,	"InitializeCockpitData");
	create_insn	(x=0X11E11);
	op_hex		(x,	1);
	create_insn	(x=0X11E27);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E33);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E36);
	op_stkvar	(x,	0);
	op_dec		(x,	1);
	create_insn	(x=0X11E3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E40);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11E47);
	op_stkvar	(x,	0);
	op_dec		(x,	1);
	create_insn	(x=0X11E4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E50);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E53);
	op_hex		(x,	1);
	create_insn	(x=0X11E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E5B);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X11E61);
	create_insn	(x=0X11E65);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X11E74);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11E7C);
	op_hex		(x,	1);
	create_insn	(x=0X11E7E);
	op_hex		(x,	1);
	create_insn	(0X11E86);
	create_insn	(x=0X11E93);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11EA7);
	op_hex		(x,	1);
	create_insn	(x=0X11EA9);
	op_hex		(x,	1);
	create_insn	(0X11EB1);
	create_insn	(0X11EBA);
	create_insn	(x=0X11EC1);
	op_hex		(x,	1);
	create_insn	(x=0X11EC3);
	op_hex		(x,	1);
	create_insn	(0X11ECB);
	create_insn	(x=0X11EEB);
	op_hex		(x,	1);
	create_insn	(x=0X11EED);
	op_hex		(x,	1);
	create_insn	(0X11EF5);
	create_insn	(x=0X11F0B);
	op_hex		(x,	1);
	create_insn	(x=0X11F0D);
	op_hex		(x,	1);
	create_insn	(0X11F15);
	create_insn	(x=0X11F27);
	op_hex		(x,	1);
	create_insn	(x=0X11F29);
	op_hex		(x,	1);
	create_insn	(0X11F31);
	create_insn	(0X11F3E);
	create_insn	(x=0X11F41);
	op_hex		(x,	1);
	create_insn	(x=0X11F49);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F53);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F56);
	op_stkvar	(x,	0);
	create_insn	(0X11F5F);
	create_insn	(x=0X11F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F67);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11F76);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11F7E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11F92);
	op_hex		(x,	1);
	create_insn	(x=0X11F94);
	op_hex		(x,	1);
	create_insn	(0X11F9C);
	create_insn	(x=0X11F9E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11FA6);
	op_hex		(x,	1);
	create_insn	(x=0X11FA8);
	op_hex		(x,	1);
	create_insn	(0X11FB0);
	create_insn	(x=0X11FB5);
	op_hex		(x,	1);
	create_insn	(x=0X11FC3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11FC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FCA);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11FD4);
	op_hex		(x,	1);
	create_insn	(x=0X11FD6);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11FDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FDD);
	op_hex		(x,	1);
	set_cmt	(0X11FDF,	"char *",	0);
	create_insn	(x=0X11FDF);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11FE6);
	op_hex		(x,	1);
	create_insn	(x=0X11FE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FEC);
	op_hex		(x,	1);
	set_cmt	(0X11FEE,	"char *",	0);
	create_insn	(x=0X11FEE);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X11FF5);
	op_hex		(x,	1);
	create_insn	(x=0X11FF8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X11FFF);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12003);
	op_stkvar	(x,	1);
	create_insn	(x=0X1200F);
	op_hex		(x,	1);
	create_insn	(x=0X1201A);
	op_hex		(x,	1);
	create_insn	(x=0X12020);
	op_stkvar	(x,	1);
	create_insn	(x=0X12025);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1202D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12033);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12037);
	op_stkvar	(x,	0);
	create_insn	(0X1203D);
	create_insn	(0X12049);
	set_name	(0X12049,	"moveDataFar");
	create_insn	(x=0X1204C);
	op_hex		(x,	1);
	create_insn	(x=0X1205F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12066);
	op_hex		(x,	1);
	create_insn	(0X1206D);
	set_name	(0X1206D,	"moveStuff");
	create_insn	(x=0X12074);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1207B);
	op_hex		(x,	1);
	create_insn	(x=0X12082);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12089);
	op_hex		(x,	1);
	create_insn	(x=0X12090);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12097);
	op_hex		(x,	1);
	create_insn	(x=0X1209E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120A5);
	op_hex		(x,	1);
	create_insn	(x=0X120AC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120B3);
	op_hex		(x,	1);
	create_insn	(x=0X120BE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120C5);
	op_hex		(x,	1);
	create_insn	(x=0X120CC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120D3);
	op_hex		(x,	1);
	create_insn	(x=0X120DE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120E5);
	op_hex		(x,	1);
	create_insn	(x=0X120EC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X120F3);
	op_hex		(x,	1);
	create_insn	(x=0X120FA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12101);
	op_hex		(x,	1);
	create_insn	(x=0X12108);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1210F);
	op_hex		(x,	1);
	create_insn	(x=0X12116);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1211D);
	op_hex		(x,	1);
	create_insn	(x=0X12124);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1212B);
	op_hex		(x,	1);
	create_insn	(x=0X12132);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12139);
	op_hex		(x,	1);
	create_insn	(x=0X12140);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12147);
	op_hex		(x,	1);
	create_insn	(x=0X1214E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12155);
	op_hex		(x,	1);
	create_insn	(0X1215C);
	set_name	(0X1215C,	"moveNearFar");
	create_insn	(x=0X1215F);
	op_hex		(x,	1);
	create_insn	(x=0X12162);
	op_stkvar	(x,	1);
	create_insn	(x=0X12165);
	op_stkvar	(x,	0);
	create_insn	(x=0X12168);
	op_stkvar	(x,	0);
	set_cmt	(0X12172,	"unsigned int",	0);
	create_insn	(x=0X12172);
	op_stkvar	(x,	0);
	set_cmt	(0X12175,	"unsigned int",	0);
	set_cmt	(0X12176,	"unsigned int",	0);
	set_cmt	(0X12177,	"unsigned int",	0);
	set_cmt	(0X1217B,	"unsigned int",	0);
	create_insn	(x=0X12182);
	op_hex		(x,	1);
	set_cmt	(0X12187,	"unsigned int",	0);
	create_insn	(x=0X12187);
	op_stkvar	(x,	0);
	set_cmt	(0X1218A,	"unsigned int",	0);
	set_cmt	(0X1218E,	"unsigned int",	0);
	set_cmt	(0X12192,	"unsigned int",	0);
	create_insn	(x=0X12192);
	op_stkvar	(x,	0);
	set_cmt	(0X12195,	"unsigned int",	0);
	create_insn	(x=0X12195);
	op_stkvar	(x,	0);
	create_insn	(x=0X1219B);
	op_hex		(x,	1);
	create_insn	(x=0X1219E);
	op_stkvar	(x,	1);
	create_insn	(0X121A9);
	set_name	(0X121A9,	"setCommWorldbufPtr");
	create_insn	(x=0X121B3);
	op_enum		(x,	1,	GetEnum("Pointers"),0);
	create_insn	(0X121C1);
	create_insn	(0X121C6);
	set_name	(0X121C6,	"callLoad3DAll");
	create_insn	(0X121CA);
	create_insn	(x=0X121D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X121DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X121DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X121EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X121F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X121F7);
	op_stkvar	(x,	1);
	set_cmt	(0X1220B,	"arg_0",	0);
	create_insn	(x=0X12212);
	op_hex		(x,	1);
	create_insn	(x=0X1221D);
	op_hex		(x,	1);
	create_insn	(x=0X12221);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1222E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12235);
	op_stkvar	(x,	0);
	create_insn	(x=0X12238);
	op_stkvar	(x,	0);
	create_insn	(x=0X1223B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12245);
	op_hex		(x,	1);
	create_insn	(x=0X12248);
	op_stkvar	(x,	0);
	create_insn	(x=0X1224B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1224E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12251);
	op_stkvar	(x,	0);
	create_insn	(x=0X12254);
	op_stkvar	(x,	0);
	create_insn	(x=0X12257);
	op_stkvar	(x,	0);
	create_insn	(x=0X1225A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1225D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12263);
	op_hex		(x,	1);
	create_insn	(x=0X1226F);
	op_hex		(x,	1);
	create_insn	(0X12278);
	create_insn	(x=0X1227B);
	op_hex		(x,	1);
	create_insn	(x=0X1227E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12284);
	op_stkvar	(x,	1);
	create_insn	(x=0X1228B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12291);
	op_stkvar	(x,	0);
	create_insn	(0X1229A);
	set_name	(0X1229A,	"copySomeMem");
	set_cmt	(0X122A0,	"void *",	0);
	create_insn	(x=0X122A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X122A8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X122AC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X122AF,	"void *",	0);
	create_insn	(x=0X122B3);
	op_hex		(x,	1);
	create_insn	(0X122B8);
	create_insn	(x=0X122BB);
	op_hex		(x,	1);
	create_insn	(x=0X122BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X122C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X122CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X122CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X122D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X122DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X122ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X122F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X122FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X122FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X12307);
	op_stkvar	(x,	0);
	create_insn	(x=0X1230A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1230D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12319);
	op_stkvar	(x,	0);
	create_insn	(0X12328);
	create_insn	(0X12330);
	create_insn	(0X1233E);
	create_insn	(x=0X12342);
	op_hex		(x,	1);
	create_insn	(x=0X12344);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1234E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12351);
	op_stkvar	(x,	0);
	create_insn	(x=0X1235B);
	op_hex		(x,	1);
	create_insn	(x=0X1235E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12361);
	op_stkvar	(x,	0);
	create_insn	(x=0X12366);
	op_hex		(x,	1);
	create_insn	(x=0X12368);
	op_hex		(x,	1);
	create_insn	(x=0X12370);
	op_stkvar	(x,	0);
	create_insn	(x=0X12373);
	op_stkvar	(x,	1);
	create_insn	(x=0X12376);
	op_hex		(x,	1);
	create_insn	(x=0X12379);
	op_stkvar	(x,	0);
	create_insn	(x=0X1237C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1237F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12389);
	op_hex		(x,	1);
	create_insn	(x=0X1238C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1238F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12394);
	op_hex		(x,	1);
	create_insn	(x=0X12396);
	op_hex		(x,	1);
	create_insn	(x=0X1239E);
	op_stkvar	(x,	0);
	create_insn	(x=0X123A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X123A4);
	op_hex		(x,	1);
	create_insn	(x=0X123A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X123AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X123AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X123B7);
	op_hex		(x,	1);
	create_insn	(x=0X123BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X123BD);
	op_stkvar	(x,	0);
	create_insn	(0X123C7);
	create_insn	(x=0X123D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X123D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X123EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X123F1);
	op_stkvar	(x,	0);
	create_insn	(0X123FE);
	create_insn	(x=0X12408);
	op_stkvar	(x,	0);
	create_insn	(x=0X12411);
	op_stkvar	(x,	1);
	create_insn	(x=0X12414);
	op_hex		(x,	1);
	create_insn	(x=0X1241B);
	op_stkvar	(x,	1);
	create_insn	(x=0X12420);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12424);
	op_stkvar	(x,	0);
	create_insn	(x=0X12427);
	op_stkvar	(x,	1);
	create_insn	(x=0X1242D);
	op_hex		(x,	1);
	create_insn	(x=0X12437);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1243B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1243E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12441);
	op_stkvar	(x,	1);
	create_insn	(x=0X12450);
	op_stkvar	(x,	1);
	create_insn	(x=0X12453);
	op_stkvar	(x,	1);
	create_insn	(x=0X1247D);
	op_hex		(x,	1);
	create_insn	(0X12487);
	create_insn	(x=0X1248A);
	op_stkvar	(x,	0);
	create_insn	(0X12493);
	create_insn	(x=0X124A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X124AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X124B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X124B4);
	op_hex		(x,	1);
	create_insn	(x=0X124B6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X124BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X124BD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X124C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X124C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X124C9);
	op_hex		(x,	1);
	create_insn	(x=0X124D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X124D5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X124D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X124DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X124E2);
	op_hex		(x,	1);
	create_insn	(x=0X124EC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X124F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X124F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X124F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X12505);
	op_stkvar	(x,	1);
	create_insn	(x=0X12508);
	op_stkvar	(x,	1);
	create_insn	(x=0X12524);
	op_hex		(x,	1);
	create_insn	(x=0X12527);
	op_stkvar	(x,	1);
	create_insn	(x=0X1252A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1252E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12531);
	op_stkvar	(x,	1);
	create_insn	(x=0X1253C);
	op_hex		(x,	1);
	create_insn	(x=0X1253F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1254A);
	op_stkvar	(x,	0);
	create_insn	(0X1255A);
	create_insn	(0X12565);
	create_insn	(x=0X1256E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12571);
	op_hex		(x,	1);
	create_insn	(x=0X1257B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12582);
	op_stkvar	(x,	0);
	create_insn	(x=0X12589);
	op_stkvar	(x,	0);
	create_insn	(x=0X1258C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1258F);
	op_hex		(x,	1);
	create_insn	(x=0X12599);
	op_stkvar	(x,	1);
	create_insn	(x=0X1259C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X125A5);
	create_insn	(x=0X125A9);
	op_hex		(x,	1);
	create_insn	(x=0X125AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X125B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X125B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X125B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X125BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X125C7);
	op_hex		(x,	1);
	create_insn	(x=0X125D0);
	op_seg		(x,	1);
	create_insn	(x=0X125D9);
	op_seg		(x,	1);
	create_insn	(x=0X125EF);
	op_hex		(x,	1);
	create_insn	(x=0X125F2);
	op_hex		(x,	1);
	create_insn	(x=0X125F4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X12604);
	create_insn	(x=0X1260D);
	op_hex		(x,	1);
	create_insn	(x=0X1260F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12619);
	op_seg		(x,	1);
	create_insn	(x=0X1263D);
	op_hex		(x,	1);
	create_insn	(0X1264C);
	create_insn	(0X1264E);
	create_insn	(x=0X12655);
	op_stkvar	(x,	1);
	create_insn	(x=0X12658);
	op_hex		(x,	1);
	create_insn	(x=0X12662);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12670);
	op_hex		(x,	1);
	create_insn	(x=0X12672);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1267C);
	op_seg		(x,	1);
	create_insn	(x=0X126A6);
	op_hex		(x,	1);
	create_insn	(0X126AC);
	create_insn	(0X126AF);
	create_insn	(0X126B4);
	create_insn	(x=0X126B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X126BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X126BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X126CA);
	op_hex		(x,	1);
	create_insn	(x=0X126CC);
	op_hex		(x,	1);
	create_insn	(0X126D4);
	create_insn	(x=0X126D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X126D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X126E4);
	op_hex		(x,	1);
	create_insn	(x=0X126E6);
	op_hex		(x,	1);
	create_insn	(0X126EE);
	create_insn	(x=0X126F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X126F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X126FE);
	op_hex		(x,	1);
	create_insn	(x=0X12700);
	op_hex		(x,	1);
	create_insn	(0X12708);
	create_insn	(x=0X1270A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1270D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12712);
	op_stkvar	(x,	1);
	create_insn	(x=0X12715);
	op_stkvar	(x,	1);
	create_insn	(x=0X12718);
	op_hex		(x,	1);
	create_insn	(x=0X1271A);
	op_hex		(x,	1);
	create_insn	(0X1271E);
	create_insn	(0X12720);
	create_insn	(0X1273A);
	create_insn	(0X1273E);
	set_name	(0X1273E,	"process3dg");
	create_insn	(x=0X12742);
	op_stkvar	(x,	0);
	create_insn	(x=0X12748);
	op_stkvar	(x,	0);
	create_insn	(x=0X1274C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12750);
	op_stkvar	(x,	0);
	create_insn	(x=0X12756);
	op_stkvar	(x,	0);
	create_insn	(x=0X1275C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1275F);
	op_hex		(x,	1);
	create_insn	(x=0X12761);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12765);
	op_stkvar	(x,	0);
	create_insn	(x=0X1276A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12774);
	op_stkvar	(x,	1);
	create_insn	(x=0X1277A);
	op_stkvar	(x,	1);
	create_insn	(x=0X12781);
	op_stkvar	(x,	1);
	create_insn	(x=0X12784);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1278D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12794);
	op_stkvar	(x,	1);
	create_insn	(x=0X12797);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X127A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X127A3);
	op_hex		(x,	1);
	create_insn	(x=0X127A5);
	op_hex		(x,	1);
	create_insn	(x=0X127A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X127AB);
	op_hex		(x,	1);
	create_insn	(x=0X127AD);
	op_hex		(x,	1);
	create_insn	(x=0X127B7);
	op_hex		(x,	1);
	create_insn	(x=0X127BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X127C1);
	op_hex		(x,	1);
	create_insn	(x=0X127C4);
	op_hex		(x,	1);
	create_insn	(x=0X127C6);
	op_hex		(x,	1);
	create_insn	(x=0X127CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X127CD);
	op_hex		(x,	1);
	create_insn	(x=0X127D0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X127D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X127DC);
	op_hex		(x,	1);
	create_insn	(x=0X127DE);
	op_hex		(x,	1);
	create_insn	(x=0X127E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X127E4);
	op_hex		(x,	1);
	create_insn	(x=0X127E6);
	op_hex		(x,	1);
	create_insn	(x=0X127F0);
	op_hex		(x,	1);
	create_insn	(x=0X127F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X127FA);
	op_hex		(x,	1);
	create_insn	(x=0X127FD);
	op_hex		(x,	1);
	create_insn	(x=0X127FF);
	op_hex		(x,	1);
	create_insn	(x=0X12803);
	op_stkvar	(x,	1);
	create_insn	(x=0X12806);
	op_hex		(x,	1);
	create_insn	(x=0X12809);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12811);
	op_stkvar	(x,	1);
	create_insn	(x=0X12814);
	op_hex		(x,	1);
	create_insn	(x=0X12816);
	op_hex		(x,	1);
	create_insn	(x=0X12819);
	op_stkvar	(x,	1);
	create_insn	(x=0X1281C);
	op_hex		(x,	1);
	create_insn	(x=0X1281E);
	op_hex		(x,	1);
	create_insn	(x=0X12828);
	op_hex		(x,	1);
	create_insn	(x=0X1282F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12832);
	op_hex		(x,	1);
	create_insn	(x=0X12835);
	op_hex		(x,	1);
	create_insn	(x=0X12837);
	op_hex		(x,	1);
	create_insn	(x=0X1283B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1283E);
	op_hex		(x,	1);
	create_insn	(x=0X12841);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X12849);
	create_insn	(0X1284B);
	create_insn	(0X1285C);
	create_insn	(0X12864);
	create_insn	(0X1286C);
	create_insn	(0X1286E);
	create_insn	(0X12874);
	set_name	(0X12874,	"load3DAll");
	set_cmt	(0X1287A,	"char *",	0);
	create_insn	(x=0X12881);
	op_hex		(x,	1);
	set_cmt	(0X12884,	"char *",	0);
	create_insn	(x=0X1288B);
	op_hex		(x,	1);
	create_insn	(0X12898);
	set_name	(0X12898,	"load3D3");
	create_insn	(x=0X1289B);
	op_hex		(x,	1);
	set_cmt	(0X1289E,	"FILE *",	0);
	create_insn	(x=0X1289F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X128A3,	"arg_0",	0);
	create_insn	(x=0X128A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X128A9);
	op_hex		(x,	1);
	create_insn	(x=0X128AC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X128B0,	"char *",	0);
	create_insn	(x=0X128B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X128B6);
	op_hex		(x,	1);
	create_insn	(x=0X128C0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X128C3,	"char *",	0);
	create_insn	(x=0X128C7);
	op_hex		(x,	1);
	set_cmt	(0X128CD,	"size_t",	0);
	create_insn	(0X128CD);
	set_cmt	(0X128D4,	"size_t",	0);
	create_insn	(x=0X128D9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X128DC,	"void *",	0);
	create_insn	(x=0X128E0);
	op_hex		(x,	1);
	create_insn	(x=0X128EB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X128EE,	"char *",	0);
	create_insn	(x=0X128F2);
	op_hex		(x,	1);
	set_cmt	(0X128F5,	"FILE *",	0);
	create_insn	(x=0X128FC);
	op_hex		(x,	1);
	set_cmt	(0X12902,	"size_t",	0);
	create_insn	(0X12902);
	set_cmt	(0X12909,	"size_t",	0);
	create_insn	(x=0X1290E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12911,	"void *",	0);
	create_insn	(x=0X12915);
	op_hex		(x,	1);
	set_cmt	(0X12918,	"size_t",	0);
	set_cmt	(0X1291C,	"size_t",	0);
	create_insn	(x=0X12924);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12927,	"void *",	0);
	create_insn	(x=0X1292B);
	op_hex		(x,	1);
	set_cmt	(0X1292E,	"size_t",	0);
	set_cmt	(0X12935,	"size_t",	0);
	create_insn	(x=0X1293A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1293D,	"void *",	0);
	create_insn	(x=0X12941);
	op_hex		(x,	1);
	create_insn	(x=0X1294C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1294F,	"char *",	0);
	create_insn	(x=0X12953);
	op_hex		(x,	1);
	set_cmt	(0X12956,	"FILE *",	0);
	create_insn	(x=0X1295D);
	op_hex		(x,	1);
	create_insn	(0X12963);
	create_insn	(x=0X12969);
	op_stkvar	(x,	0);
	create_insn	(x=0X1296C);
	op_stkvar	(x,	0);
	op_seg		(x,	1);
	create_insn	(x=0X12975);
	op_hex		(x,	1);
	create_insn	(x=0X1297A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1297E);
	op_stkvar	(x,	1);
	set_cmt	(0X12981,	"struct SREGS *",	0);
	create_insn	(x=0X12985);
	op_hex		(x,	1);
	create_insn	(x=0X12988);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X228D0);
	op_plain_offset	(x,	129,	0X228D0);
	create_insn	(x=0X1298D);
	op_stkvar	(x,	0);
	op_seg		(x,	1);
	create_insn	(x=0X12994);
	op_stkvar	(x,	1);
	create_insn	(x=0X1299B);
	op_stkvar	(x,	0);
	create_insn	(x=0X129B3);
	op_stkvar	(x,	0);
	set_cmt	(0X129B6,	"size_t",	0);
	set_cmt	(0X129BA,	"size_t",	0);
	create_insn	(x=0X129BF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X129C2,	"void *",	0);
	create_insn	(x=0X129C6);
	op_hex		(x,	1);
	set_cmt	(0X129C9,	"unsigned int",	0);
	create_insn	(x=0X129C9);
	op_stkvar	(x,	0);
	set_cmt	(0X129CC,	"unsigned int",	0);
	create_insn	(x=0X129CC);
	op_stkvar	(x,	0);
	set_cmt	(0X129CF,	"unsigned int",	0);
	create_insn	(x=0X129CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X129D2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X129D5,	"unsigned int",	0);
	set_cmt	(0X129D6,	"unsigned int",	0);
	create_insn	(x=0X129D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X129DC);
	op_hex		(x,	1);
	set_cmt	(0X129E1,	"size_t",	0);
	create_insn	(0X129E1);
	set_cmt	(0X129E8,	"size_t",	0);
	create_insn	(x=0X129EA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X129ED,	"void *",	0);
	create_insn	(x=0X129F1);
	op_hex		(x,	1);
	set_cmt	(0X129FE,	"size_t",	0);
	create_insn	(0X129FE);
	set_cmt	(0X12A02,	"size_t",	0);
	create_insn	(x=0X12A0A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A0D,	"void *",	0);
	create_insn	(x=0X12A11);
	op_hex		(x,	1);
	set_cmt	(0X12A14,	"size_t",	0);
	set_cmt	(0X12A18,	"size_t",	0);
	create_insn	(x=0X12A20);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A23,	"void *",	0);
	create_insn	(x=0X12A27);
	op_hex		(x,	1);
	set_cmt	(0X12A2A,	"size_t",	0);
	set_cmt	(0X12A2E,	"size_t",	0);
	create_insn	(x=0X12A36);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A39,	"void *",	0);
	create_insn	(x=0X12A3D);
	op_hex		(x,	1);
	set_cmt	(0X12A40,	"size_t",	0);
	set_cmt	(0X12A47,	"size_t",	0);
	create_insn	(x=0X12A49);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A4C,	"void *",	0);
	create_insn	(x=0X12A50);
	op_hex		(x,	1);
	set_cmt	(0X12A53,	"size_t",	0);
	set_cmt	(0X12A57,	"size_t",	0);
	create_insn	(x=0X12A5F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A62,	"void *",	0);
	create_insn	(x=0X12A66);
	op_hex		(x,	1);
	set_cmt	(0X12A69,	"size_t",	0);
	set_cmt	(0X12A70,	"size_t",	0);
	create_insn	(x=0X12A72);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A75,	"void *",	0);
	create_insn	(x=0X12A79);
	op_hex		(x,	1);
	set_cmt	(0X12A7C,	"size_t",	0);
	set_cmt	(0X12A80,	"size_t",	0);
	create_insn	(x=0X12A88);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A8B,	"void *",	0);
	create_insn	(x=0X12A8F);
	op_hex		(x,	1);
	set_cmt	(0X12A92,	"size_t",	0);
	set_cmt	(0X12A99,	"size_t",	0);
	create_insn	(x=0X12A9B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12A9E,	"void *",	0);
	create_insn	(x=0X12AA2);
	op_hex		(x,	1);
	set_cmt	(0X12AA5,	"size_t",	0);
	set_cmt	(0X12AA9,	"size_t",	0);
	create_insn	(x=0X12AB1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12AB4,	"void *",	0);
	create_insn	(x=0X12AB8);
	op_hex		(x,	1);
	set_cmt	(0X12ABB,	"FILE *",	0);
	create_insn	(x=0X12AC2);
	op_hex		(x,	1);
	create_insn	(x=0X12AC5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12AC9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12ACC,	"char *",	0);
	create_insn	(x=0X12AD0);
	op_hex		(x,	1);
	set_cmt	(0X12ADC,	"int",	0);
	create_insn	(x=0X12AE0);
	op_hex		(x,	1);
	set_cmt	(0X12AE6,	"int",	0);
	set_cmt	(0X12AEA,	"int",	0);
	set_cmt	(0X12AEE,	"int",	0);
	set_cmt	(0X12AF1,	"int",	0);
	create_insn	(x=0X12AF5);
	op_hex		(x,	1);
	set_cmt	(0X12AFB,	"int",	0);
	set_cmt	(0X12AFF,	"int",	0);
	create_insn	(x=0X12B04);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12B07,	"char *",	0);
	create_insn	(x=0X12B0B);
	op_hex		(x,	1);
	create_insn	(0X12B1A);
	create_insn	(x=0X12B1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12B26);
	op_stkvar	(x,	0);
	create_insn	(x=0X12B29);
	op_stkvar	(x,	0);
	create_insn	(0X12B32);
	create_insn	(x=0X12B35);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B3A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12B42);
	op_stkvar	(x,	0);
	create_insn	(x=0X12B4C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12B50);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12B53,	"char *",	0);
	create_insn	(x=0X12B57);
	op_hex		(x,	1);
	set_cmt	(0X12B5D,	"size_t",	0);
	set_cmt	(0X12B61,	"size_t",	0);
	create_insn	(x=0X12B66);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12B69,	"void *",	0);
	create_insn	(x=0X12B6D);
	op_hex		(x,	1);
	set_cmt	(0X12B70,	"size_t",	0);
	set_cmt	(0X12B77,	"size_t",	0);
	create_insn	(x=0X12B7C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12B7F,	"void *",	0);
	create_insn	(x=0X12B83);
	op_hex		(x,	1);
	set_cmt	(0X12B86,	"size_t",	0);
	set_cmt	(0X12B8A,	"size_t",	0);
	create_insn	(x=0X12B92);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12B95,	"void *",	0);
	create_insn	(x=0X12B99);
	op_hex		(x,	1);
	set_cmt	(0X12B9C,	"size_t",	0);
	set_cmt	(0X12BA3,	"size_t",	0);
	create_insn	(x=0X12BA8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12BAB,	"void *",	0);
	create_insn	(x=0X12BAF);
	op_hex		(x,	1);
	create_insn	(x=0X12BB6);
	op_hex		(x,	1);
	create_insn	(x=0X12BBB);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12BBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X12BC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X12BC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X12BD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BD4);
	op_hex		(x,	1);
	create_insn	(x=0X12BD6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12BDA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12BDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X12BE1);
	op_stkvar	(x,	0);
	set_cmt	(0X12BE8,	"size_t",	0);
	set_cmt	(0X12BEF,	"size_t",	0);
	create_insn	(x=0X12BF4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12BF7,	"void *",	0);
	create_insn	(x=0X12BFB);
	op_hex		(x,	1);
	create_insn	(x=0X12BFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C05);
	op_stkvar	(x,	1);
	set_cmt	(0X12C08,	"struct SREGS *",	0);
	create_insn	(x=0X12C0C);
	op_hex		(x,	1);
	set_cmt	(0X12C0F,	"size_t",	0);
	set_cmt	(0X12C13,	"size_t",	0);
	create_insn	(x=0X12C13);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C1A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12C1D,	"void *",	0);
	create_insn	(x=0X12C21);
	op_hex		(x,	1);
	set_cmt	(0X12C24,	"unsigned int",	0);
	create_insn	(x=0X12C24);
	op_stkvar	(x,	0);
	set_cmt	(0X12C27,	"unsigned int",	0);
	create_insn	(x=0X12C27);
	op_stkvar	(x,	0);
	set_cmt	(0X12C2A,	"unsigned int",	0);
	create_insn	(x=0X12C2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C2D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12C30,	"unsigned int",	0);
	set_cmt	(0X12C31,	"unsigned int",	0);
	create_insn	(x=0X12C31);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C37);
	op_hex		(x,	1);
	create_insn	(x=0X12C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C42);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C4C);
	op_hex		(x,	1);
	create_insn	(x=0X12C4E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12C52);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	set_cmt	(0X12C56,	"FILE *",	0);
	create_insn	(x=0X12C5D);
	op_hex		(x,	1);
	create_insn	(x=0X12C63);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C66);
	op_plain_offset	(x,	1,	0X228D0);
	op_plain_offset	(x,	129,	0X228D0);
	create_insn	(x=0X12C69);
	op_seg		(x,	1);
	create_insn	(x=0X12C73);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12C76,	"char *",	0);
	create_insn	(x=0X12C7A);
	op_hex		(x,	1);
	create_insn	(0X12C82);
	set_name	(0X12C82,	"load3DT");
	create_insn	(x=0X12C85);
	op_hex		(x,	1);
	set_cmt	(0X12C88,	"arg_2",	0);
	create_insn	(x=0X12C89);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12C8D,	"arg_0",	0);
	create_insn	(x=0X12C8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C93);
	op_hex		(x,	1);
	create_insn	(x=0X12C96);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12C9A,	"char *",	0);
	create_insn	(x=0X12C9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CA0);
	op_hex		(x,	1);
	create_insn	(x=0X12CAA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12CAD,	"char *",	0);
	create_insn	(x=0X12CB1);
	op_hex		(x,	1);
	set_cmt	(0X12CB7,	"size_t",	0);
	create_insn	(0X12CB7);
	set_cmt	(0X12CBE,	"size_t",	0);
	create_insn	(x=0X12CC3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12CC6,	"void *",	0);
	create_insn	(x=0X12CCA);
	op_hex		(x,	1);
	create_insn	(x=0X12CD5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12CD8,	"char *",	0);
	create_insn	(x=0X12CDC);
	op_hex		(x,	1);
	set_cmt	(0X12CDF,	"FILE *",	0);
	create_insn	(x=0X12CE6);
	op_hex		(x,	1);
	set_cmt	(0X12CEC,	"size_t",	0);
	create_insn	(0X12CEC);
	set_cmt	(0X12CF3,	"size_t",	0);
	create_insn	(x=0X12CF8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12CFB,	"void *",	0);
	create_insn	(x=0X12CFF);
	op_hex		(x,	1);
	create_insn	(x=0X12D02);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D09);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D12);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D15);
	op_hex		(x,	1);
	create_insn	(x=0X12D17);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12D1E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12D21,	"char *",	0);
	create_insn	(x=0X12D25);
	op_hex		(x,	1);
	set_cmt	(0X12D2B,	"size_t",	0);
	create_insn	(0X12D2B);
	create_insn	(x=0X12D2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D32);
	op_hex		(x,	1);
	set_cmt	(0X12D34,	"size_t",	0);
	create_insn	(x=0X12D34);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D43);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12D46,	"void *",	0);
	create_insn	(x=0X12D4A);
	op_hex		(x,	1);
	create_insn	(x=0X12D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D54);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D67);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D71);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D74);
	op_hex		(x,	1);
	create_insn	(x=0X12D76);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D79);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D8B);
	op_hex		(x,	1);
	create_insn	(x=0X12D8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D90);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12D93);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12D97);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12DA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DAB);
	op_hex		(x,	1);
	create_insn	(x=0X12DAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DB0);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12DB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X12DC0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12DC3,	"char *",	0);
	create_insn	(x=0X12DC7);
	op_hex		(x,	1);
	set_cmt	(0X12DCD,	"size_t",	0);
	create_insn	(0X12DCD);
	set_cmt	(0X12DD4,	"size_t",	0);
	create_insn	(x=0X12DD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DDC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12DDF,	"void *",	0);
	create_insn	(x=0X12DE3);
	op_hex		(x,	1);
	set_cmt	(0X12DE6,	"size_t",	0);
	set_cmt	(0X12DED,	"size_t",	0);
	create_insn	(x=0X12DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DF5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12DF8,	"void *",	0);
	create_insn	(x=0X12DFC);
	op_hex		(x,	1);
	set_cmt	(0X12DFF,	"size_t",	0);
	set_cmt	(0X12E06,	"size_t",	0);
	create_insn	(x=0X12E0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E0E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12E11,	"void *",	0);
	create_insn	(x=0X12E15);
	op_hex		(x,	1);
	set_cmt	(0X12E18,	"size_t",	0);
	set_cmt	(0X12E1F,	"size_t",	0);
	create_insn	(x=0X12E24);
	op_stkvar	(x,	1);
	set_cmt	(0X12E27,	"void *",	0);
	create_insn	(x=0X12E2B);
	op_hex		(x,	1);
	create_insn	(x=0X12E2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E31);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E34);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X12E38);
	op_stkvar	(x,	0);
	create_insn	(0X12E3F);
	create_insn	(0X12E42);
	set_cmt	(0X12E45,	"FILE *",	0);
	create_insn	(0X12E45);
	create_insn	(x=0X12E4C);
	op_hex		(x,	1);
	create_insn	(0X12E54);
	set_name	(0X12E54,	"load3DG");
	create_insn	(x=0X12E57);
	op_hex		(x,	1);
	create_insn	(x=0X12E5A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12E5E,	"arg_0",	0);
	create_insn	(x=0X12E65);
	op_hex		(x,	1);
	create_insn	(x=0X12E68);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12E6C,	"char *",	0);
	create_insn	(x=0X12E73);
	op_hex		(x,	1);
	set_cmt	(0X12E80,	"int",	0);
	set_cmt	(0X12E84,	"int",	0);
	create_insn	(x=0X12E89);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12E8C,	"char *",	0);
	create_insn	(x=0X12E90);
	op_hex		(x,	1);
	set_cmt	(0X12E96,	"int",	0);
	set_cmt	(0X12E9A,	"int",	0);
	create_insn	(x=0X12E9F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12EA2,	"char *",	0);
	create_insn	(x=0X12EA6);
	op_hex		(x,	1);
	create_insn	(0X12EB5);
	set_cmt	(0X12EBA,	"size_t",	0);
	set_cmt	(0X12EC1,	"size_t",	0);
	create_insn	(x=0X12EC6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12EC9,	"void *",	0);
	create_insn	(x=0X12ECD);
	op_hex		(x,	1);
	create_insn	(x=0X12ED8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12EDB,	"char *",	0);
	create_insn	(x=0X12EDF);
	op_hex		(x,	1);
	set_cmt	(0X12EE2,	"FILE *",	0);
	create_insn	(x=0X12EE9);
	op_hex		(x,	1);
	set_cmt	(0X12EEF,	"size_t",	0);
	create_insn	(0X12EEF);
	set_cmt	(0X12EF6,	"size_t",	0);
	create_insn	(x=0X12EFB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12EFE,	"void *",	0);
	create_insn	(x=0X12F02);
	op_hex		(x,	1);
	set_cmt	(0X12F05,	"size_t",	0);
	set_cmt	(0X12F0C,	"size_t",	0);
	create_insn	(x=0X12F11);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12F14,	"void *",	0);
	create_insn	(x=0X12F18);
	op_hex		(x,	1);
	set_cmt	(0X12F1B,	"size_t",	0);
	set_cmt	(0X12F22,	"size_t",	0);
	create_insn	(x=0X12F27);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12F2A,	"void *",	0);
	create_insn	(x=0X12F2E);
	op_hex		(x,	1);
	set_cmt	(0X12F31,	"size_t",	0);
	set_cmt	(0X12F38,	"size_t",	0);
	create_insn	(x=0X12F3D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12F40,	"void *",	0);
	create_insn	(x=0X12F44);
	op_hex		(x,	1);
	set_cmt	(0X12F47,	"size_t",	0);
	set_cmt	(0X12F4E,	"size_t",	0);
	create_insn	(x=0X12F53);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12F56,	"void *",	0);
	create_insn	(x=0X12F5A);
	op_hex		(x,	1);
	set_cmt	(0X12F5D,	"FILE *",	0);
	create_insn	(x=0X12F64);
	op_hex		(x,	1);
	set_cmt	(0X12F6A,	"void *",	0);
	create_insn	(x=0X12F6F);
	op_enum		(x,	1,	GetEnum("Game"),0);
	create_insn	(x=0X12F73);
	op_hex		(x,	1);
	create_insn	(x=0X12F7A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X12F7E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X12F81,	"void *",	0);
	create_insn	(x=0X12F85);
	op_hex		(x,	1);
	set_cmt	(0X12F8C,	"int",	0);
	create_insn	(0X12F8C);
	set_name	(0X12F8C,	"printError");
	set_cmt	(0X12F97,	"int",	0);
	set_cmt	(0X12F9B,	"int",	0);
	set_cmt	(0X12F9F,	"char *",	0);
	create_insn	(x=0X12F9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12FA5);
	op_hex		(x,	1);
	create_insn	(0X12FAF);
	set_name	(0X12FAF,	"strcpyFromDot");
	create_insn	(x=0X12FB2);
	op_hex		(x,	1);
	create_insn	(x=0X12FB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X12FC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X12FCA);
	op_stkvar	(x,	0);
	set_cmt	(0X12FCD,	"char *",	0);
	create_insn	(x=0X12FCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X12FD3);
	op_hex		(x,	1);
	create_insn	(0X12FDA);
	create_insn	(x=0X12FDD);
	op_hex		(x,	1);
	create_insn	(x=0X12FE8);
	op_stkvar	(x,	0);
	create_insn	(0X12FF0);
	create_insn	(x=0X12FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X12FF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X13001);
	op_stkvar	(x,	0);
	create_insn	(x=0X13004);
	op_hex		(x,	1);
	create_insn	(x=0X1300A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1300D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13010);
	op_stkvar	(x,	0);
	create_insn	(x=0X13013);
	op_stkvar	(x,	0);
	create_insn	(x=0X13019);
	op_hex		(x,	1);
	create_insn	(x=0X13028);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1302E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13034);
	op_stkvar	(x,	0);
	create_insn	(x=0X13039);
	op_stkvar	(x,	1);
	create_insn	(x=0X1303C);
	op_hex		(x,	1);
	create_insn	(x=0X1303E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13048);
	op_seg		(x,	1);
	create_insn	(x=0X13066);
	op_stkvar	(x,	1);
	create_insn	(x=0X1306C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13072);
	op_stkvar	(x,	1);
	create_insn	(x=0X13078);
	op_stkvar	(x,	1);
	create_insn	(x=0X13084);
	op_stkvar	(x,	1);
	create_insn	(x=0X1308A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13090);
	op_stkvar	(x,	1);
	create_insn	(x=0X13094);
	op_stkvar	(x,	1);
	create_insn	(x=0X13097);
	op_stkvar	(x,	1);
	create_insn	(x=0X130A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X130A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X130A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X130B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X130BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X130C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X130C4);
	op_hex		(x,	1);
	create_insn	(x=0X130C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X130C9);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X130D6);
	op_hex		(x,	1);
	create_insn	(x=0X130D9);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X130E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X130E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X130EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X130F2);
	op_stkvar	(x,	0);
	set_cmt	(0X130F5,	"int",	0);
	create_insn	(x=0X130F9);
	op_hex		(x,	1);
	set_cmt	(0X130FC,	"int",	0);
	create_insn	(x=0X130FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X13104);
	op_hex		(x,	1);
	create_insn	(x=0X13109);
	op_stkvar	(x,	0);
	create_insn	(x=0X1310C);
	op_stkvar	(x,	0);
	create_insn	(0X13115);
	create_insn	(x=0X13117);
	op_stkvar	(x,	0);
	create_insn	(x=0X1311E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13121);
	op_stkvar	(x,	0);
	create_insn	(x=0X1312A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1312D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13130);
	op_stkvar	(x,	0);
	create_insn	(x=0X13136);
	op_hex		(x,	1);
	create_insn	(x=0X13139);
	op_stkvar	(x,	0);
	create_insn	(x=0X1313C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13141);
	op_hex		(x,	1);
	create_insn	(x=0X13143);
	op_hex		(x,	1);
	create_insn	(x=0X13149);
	op_stkvar	(x,	0);
	create_insn	(x=0X1314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1314F);
	op_hex		(x,	1);
	create_insn	(x=0X13152);
	op_stkvar	(x,	0);
	create_insn	(x=0X13155);
	op_stkvar	(x,	0);
	create_insn	(x=0X13158);
	op_stkvar	(x,	0);
	create_insn	(x=0X1315B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13161);
	op_hex		(x,	1);
	create_insn	(x=0X13164);
	op_stkvar	(x,	0);
	create_insn	(x=0X13167);
	op_stkvar	(x,	0);
	create_insn	(x=0X1316C);
	op_hex		(x,	1);
	create_insn	(x=0X1316E);
	op_hex		(x,	1);
	create_insn	(x=0X13174);
	op_stkvar	(x,	0);
	create_insn	(x=0X13177);
	op_stkvar	(x,	1);
	create_insn	(x=0X1317A);
	op_hex		(x,	1);
	create_insn	(x=0X1317D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13180);
	op_stkvar	(x,	1);
	create_insn	(x=0X13183);
	op_hex		(x,	1);
	create_insn	(x=0X13185);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13189);
	op_stkvar	(x,	0);
	create_insn	(x=0X1318C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13190);
	op_stkvar	(x,	0);
	create_insn	(x=0X13193);
	op_stkvar	(x,	1);
	create_insn	(x=0X13196);
	op_hex		(x,	1);
	create_insn	(x=0X13198);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1319C);
	op_stkvar	(x,	1);
	create_insn	(x=0X131A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X131A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X131A8);
	op_hex		(x,	1);
	create_insn	(x=0X131AA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X131AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X131B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X131B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X131BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X131BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X131C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X131C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X131C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X131C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X131CF);
	op_hex		(x,	1);
	create_insn	(x=0X131D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X131DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X131E6);
	op_hex		(x,	1);
	create_insn	(x=0X131E8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X131EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X131F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X131FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X13201);
	op_stkvar	(x,	0);
	create_insn	(0X1320A);
	create_insn	(0X1321C);
	create_insn	(0X13224);
	create_insn	(x=0X13227);
	op_stkvar	(x,	1);
	create_insn	(x=0X1322A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13230);
	op_stkvar	(x,	1);
	create_insn	(x=0X13233);
	op_stkvar	(x,	1);
	set_cmt	(0X1323C,	"void *",	0);
	create_insn	(x=0X1323D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1324F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X13252,	"void *",	0);
	create_insn	(x=0X13256);
	op_hex		(x,	1);
	create_insn	(x=0X13259);
	op_stkvar	(x,	1);
	create_insn	(x=0X1325F);
	op_hex		(x,	1);
	create_insn	(0X13266);
	create_insn	(0X13274);
	create_insn	(x=0X13287);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1328D);
	op_stkvar	(x,	1);
	create_insn	(x=0X13292);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13296);
	op_stkvar	(x,	1);
	create_insn	(x=0X1329B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1329F);
	op_stkvar	(x,	1);
	create_insn	(x=0X132A4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X132A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X132AD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X132B4);
	create_insn	(0X132BA);
	create_insn	(x=0X132BD);
	op_hex		(x,	1);
	create_insn	(x=0X132CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X132D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X132D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X132DE);
	op_hex		(x,	1);
	create_insn	(x=0X132E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X132E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X132E9);
	op_hex		(x,	1);
	create_insn	(x=0X132EB);
	op_hex		(x,	1);
	create_insn	(x=0X132F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X132F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X132F7);
	op_hex		(x,	1);
	create_insn	(x=0X132FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X132FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X13300);
	op_stkvar	(x,	0);
	create_insn	(x=0X13303);
	op_stkvar	(x,	0);
	create_insn	(x=0X13309);
	op_hex		(x,	1);
	create_insn	(x=0X1330C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1330F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13314);
	op_hex		(x,	1);
	create_insn	(x=0X13316);
	op_hex		(x,	1);
	create_insn	(x=0X1331C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1331F);
	op_stkvar	(x,	1);
	create_insn	(x=0X13322);
	op_hex		(x,	1);
	create_insn	(x=0X13325);
	op_stkvar	(x,	0);
	create_insn	(x=0X13328);
	op_stkvar	(x,	0);
	create_insn	(x=0X1332B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1332E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13334);
	op_hex		(x,	1);
	create_insn	(x=0X1333D);
	op_stkvar	(x,	1);
	create_insn	(x=0X13340);
	op_stkvar	(x,	0);
	create_insn	(x=0X13346);
	op_stkvar	(x,	1);
	create_insn	(x=0X13349);
	op_stkvar	(x,	0);
	create_insn	(x=0X1334C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13355);
	op_stkvar	(x,	1);
	create_insn	(x=0X1335E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13361);
	op_stkvar	(x,	0);
	create_insn	(x=0X13364);
	op_stkvar	(x,	0);
	create_insn	(x=0X1336A);
	op_hex		(x,	1);
	create_insn	(x=0X1336D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13375);
	op_stkvar	(x,	1);
	create_insn	(x=0X1337E);
	op_hex		(x,	1);
	create_insn	(x=0X13380);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13387);
	op_stkvar	(x,	0);
	create_insn	(x=0X1338E);
	op_stkvar	(x,	1);
	create_insn	(x=0X13397);
	op_stkvar	(x,	0);
	create_insn	(x=0X1339D);
	op_stkvar	(x,	1);
	create_insn	(x=0X133A0);
	op_stkvar	(x,	0);
	set_cmt	(0X133A3,	"int",	0);
	create_insn	(x=0X133A7);
	op_hex		(x,	1);
	set_cmt	(0X133AA,	"int",	0);
	create_insn	(x=0X133AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X133B2);
	op_hex		(x,	1);
	create_insn	(x=0X133D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X133D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X133DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X133DE);
	op_hex		(x,	1);
	create_insn	(x=0X133E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X133E3);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X133FE);
	op_hex		(x,	1);
	create_insn	(x=0X13400);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1340A);
	op_seg		(x,	1);
	create_insn	(x=0X13449);
	op_hex		(x,	1);
	create_insn	(0X1345E);
	create_insn	(x=0X13461);
	op_hex		(x,	1);
	create_insn	(x=0X13472);
	op_stkvar	(x,	0);
	create_insn	(x=0X13478);
	op_hex		(x,	1);
	create_insn	(x=0X1347B);
	op_stkvar	(x,	1);
	create_insn	(x=0X13489);
	op_hex		(x,	1);
	create_insn	(x=0X13492);
	op_hex		(x,	1);
	create_insn	(x=0X13495);
	op_stkvar	(x,	0);
	create_insn	(x=0X13498);
	op_stkvar	(x,	0);
	create_insn	(x=0X1349B);
	op_stkvar	(x,	0);
	create_insn	(x=0X134A1);
	op_hex		(x,	1);
	create_insn	(0X134AC);
	create_insn	(x=0X134AF);
	op_hex		(x,	1);
	create_insn	(x=0X134B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X134B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X134BF);
	op_stkvar	(x,	1);
	create_insn	(0X134D0);
	create_insn	(x=0X134D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X134DC);
	op_hex		(x,	1);
	create_insn	(0X134FA);
	create_insn	(x=0X13501);
	op_hex		(x,	1);
	create_insn	(x=0X1350D);
	op_stkvar	(x,	1);
	create_insn	(x=0X13511);
	op_stkvar	(x,	1);
	create_insn	(x=0X13515);
	op_stkvar	(x,	1);
	create_insn	(x=0X13519);
	op_stkvar	(x,	1);
	create_insn	(x=0X13520);
	op_hex		(x,	1);
	create_insn	(x=0X13523);
	op_stkvar	(x,	1);
	create_insn	(x=0X13526);
	op_stkvar	(x,	0);
	create_insn	(0X1352C);
	create_insn	(x=0X1353B);
	op_hex		(x,	1);
	create_insn	(x=0X1353D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13547);
	op_seg		(x,	1);
	create_insn	(x=0X1355A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13562);
	op_stkvar	(x,	1);
	create_insn	(x=0X13571);
	op_hex		(x,	1);
	create_insn	(x=0X13579);
	op_stkvar	(x,	0);
	create_insn	(x=0X1357C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1357F);
	op_hex		(x,	1);
	create_insn	(x=0X13589);
	op_stkvar	(x,	1);
	create_insn	(x=0X1358C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X13592);
	op_stkvar	(x,	0);
	create_insn	(x=0X13595);
	op_stkvar	(x,	1);
	create_insn	(x=0X13598);
	op_stkvar	(x,	0);
	create_insn	(x=0X135A1);
	op_hex		(x,	1);
	create_insn	(x=0X135A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X135B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X135B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X135C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X135C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X135C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X135D0);
	op_hex		(x,	1);
	create_insn	(x=0X135D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X135DD);
	op_hex		(x,	1);
	create_insn	(x=0X135E7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X135EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X135F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X135F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X135FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X13601);
	op_stkvar	(x,	1);
	create_insn	(x=0X13604);
	op_stkvar	(x,	0);
	create_insn	(0X1360A);
	create_insn	(x=0X13619);
	op_hex		(x,	1);
	create_insn	(x=0X1361B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1362C);
	create_insn	(0X13632);
	create_insn	(0X13638);
	create_insn	(x=0X1363B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1363E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13648);
	op_hex		(x,	1);
	create_insn	(x=0X1364B);
	op_stkvar	(x,	1);
	create_insn	(x=0X13657);
	op_stkvar	(x,	1);
	create_insn	(x=0X13663);
	op_stkvar	(x,	0);
	create_insn	(x=0X13666);
	op_stkvar	(x,	0);
	create_insn	(x=0X13674);
	op_hex		(x,	1);
	create_insn	(x=0X13677);
	op_stkvar	(x,	1);
	create_insn	(x=0X13684);
	op_stkvar	(x,	1);
	create_insn	(0X13694);
	create_insn	(x=0X13697);
	op_stkvar	(x,	1);
	create_insn	(x=0X136A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X136AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X136B5);
	op_hex		(x,	1);
	create_insn	(x=0X136B7);
	op_hex		(x,	1);
	create_insn	(x=0X136CA);
	op_stkvar	(x,	1);
	create_insn	(0X136D2);
	create_insn	(x=0X136D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X136D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13701);
	op_hex		(x,	1);
	create_insn	(x=0X13713);
	op_hex		(x,	1);
	create_insn	(x=0X13726);
	op_stkvar	(x,	0);
	create_insn	(x=0X13729);
	op_stkvar	(x,	0);
	create_insn	(x=0X1372F);
	op_hex		(x,	1);
	create_insn	(x=0X13732);
	op_stkvar	(x,	0);
	create_insn	(x=0X13735);
	op_stkvar	(x,	0);
	create_insn	(x=0X1373B);
	op_hex		(x,	1);
	create_insn	(0X1374A);
	create_insn	(x=0X1374D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1375A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13784);
	op_hex		(x,	1);
	create_insn	(0X1378E);
	create_insn	(x=0X13791);
	op_hex		(x,	1);
	create_insn	(x=0X13794);
	op_stkvar	(x,	0);
	create_insn	(x=0X13799);
	op_stkvar	(x,	0);
	create_insn	(x=0X137AF);
	op_hex		(x,	1);
	create_insn	(0X137CA);
	create_insn	(x=0X137CF);
	op_stkvar	(x,	0);
	create_insn	(0X137D6);
	create_insn	(x=0X137EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X137F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X13801);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X13804);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X13807);
	op_stkvar	(x,	0);
	create_insn	(x=0X1380D);
	op_stkvar	(x,	0);
	create_insn	(0X13816);
	create_insn	(x=0X13819);
	op_hex		(x,	1);
	create_insn	(x=0X13826);
	op_hex		(x,	1);
	create_insn	(x=0X13829);
	op_stkvar	(x,	0);
	create_insn	(x=0X13835);
	op_hex		(x,	1);
	create_insn	(x=0X1383B);
	op_stkvar	(x,	0);
	create_insn	(0X13842);
	create_insn	(x=0X13858);
	op_stkvar	(x,	1);
	create_insn	(x=0X1385B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1386C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1386F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13877);
	op_stkvar	(x,	1);
	create_insn	(x=0X1387E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X13884);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1388A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13892);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X13896);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1389A);
	op_stkvar	(x,	0);
	create_insn	(x=0X138A0);
	op_hex		(x,	1);
	create_insn	(x=0X138AA);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X138AE);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X138B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X138B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X138C2);
	op_hex		(x,	1);
	create_insn	(x=0X138CB);
	op_stkvar	(x,	0);
	create_insn	(0X138D4);
	create_insn	(x=0X138E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X138EA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X138F0);
	op_hex		(x,	1);
	create_insn	(x=0X138F2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X138FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X138FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X13902);
	op_stkvar	(x,	1);
	create_insn	(x=0X13905);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1390B);
	op_hex		(x,	1);
	create_insn	(x=0X1390D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13913);
	op_stkvar	(x,	1);
	create_insn	(x=0X13916);
	op_stkvar	(x,	0);
	create_insn	(0X1391C);
	create_insn	(0X13922);
	create_insn	(x=0X13925);
	op_stkvar	(x,	1);
	create_insn	(x=0X1392A);
	op_hex		(x,	1);
	create_insn	(x=0X1392C);
	op_hex		(x,	1);
	create_insn	(0X13932);
	create_insn	(x=0X13935);
	op_stkvar	(x,	0);
	create_insn	(x=0X1393B);
	op_hex		(x,	1);
	create_insn	(x=0X1393E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13941);
	op_stkvar	(x,	0);
	create_insn	(x=0X13944);
	op_stkvar	(x,	0);
	create_insn	(x=0X1394A);
	op_hex		(x,	1);
	create_insn	(x=0X1394D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13950);
	op_stkvar	(x,	0);
	create_insn	(x=0X13953);
	op_stkvar	(x,	0);
	create_insn	(x=0X13959);
	op_hex		(x,	1);
	create_insn	(x=0X1395C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13987);
	op_stkvar	(x,	1);
	create_insn	(x=0X13990);
	op_hex		(x,	1);
	create_insn	(0X139AA);
	create_insn	(0X139C0);
	create_insn	(x=0X139C3);
	op_hex		(x,	1);
	create_insn	(x=0X139C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X139D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X139DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X139DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X139E1);
	op_hex		(x,	1);
	create_insn	(x=0X139E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X139EB);
	op_hex		(x,	1);
	create_insn	(0X13A04);
	create_insn	(x=0X13A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A14);
	op_hex		(x,	1);
	create_insn	(x=0X13A17);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A25);
	op_hex		(x,	1);
	create_insn	(x=0X13A2E);
	op_hex		(x,	1);
	create_insn	(x=0X13A31);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A38);
	op_stkvar	(x,	1);
	create_insn	(0X13A6C);
	create_insn	(x=0X13A6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A75);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A8A);
	op_hex		(x,	1);
	create_insn	(0X13A90);
	create_insn	(x=0X13A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A99);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A9F);
	op_stkvar	(x,	1);
	create_insn	(0X13AA8);
	create_insn	(0X13AD4);
	create_insn	(0X13AD8);
	create_insn	(0X13AEE);
	set_name	(0X13AEE,	"setupDac");
	create_insn	(x=0X13AF8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X13AFE,	"- VIDEO - SET BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)\nBX = starting color register, CX = number of registers to set\nES:DX -> table of 3*CX bytes where each 3 byte group represents one\nbyte each of red, green and blue (0-63)",	0);
	create_insn	(x=0X13AFE);
	op_hex		(x,	0);
	create_insn	(x=0X13B0C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13B0F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13B16);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13B20);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X13B2C,	"- VIDEO - SET BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)\nBX = starting color register, CX = number of registers to set\nES:DX -> table of 3*CX bytes where each 3 byte group represents one\nbyte each of red, green and blue (0-63)",	0);
	create_insn	(x=0X13B2C);
	op_hex		(x,	0);
	create_insn	(0X13B2F);
	set_name	(0X13B2F,	"FixedPointMul");
	create_insn	(x=0X13B39);
	op_hex		(x,	1);
	create_insn	(x=0X13B3B);
	op_hex		(x,	1);
	create_insn	(x=0X13B3D);
	op_hex		(x,	1);
	create_insn	(0X13B45);
	create_insn	(x=0X13B4F);
	op_hex		(x,	1);
	create_insn	(x=0X13B51);
	op_hex		(x,	1);
	create_insn	(0X13B54);
	create_insn	(x=0X13B71);
	op_hex		(x,	1);
	create_insn	(x=0X13B77);
	op_hex		(x,	1);
	create_insn	(0X13B7C);
	create_insn	(0X13B86);
	create_insn	(0X13B96);
	create_insn	(0X13BA2);
	create_insn	(x=0X13BAA);
	op_hex		(x,	1);
	create_insn	(x=0X13BAC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13BB0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13BBC);
	op_hex		(x,	1);
	create_insn	(0X13BC1);
	create_insn	(0X13BC5);
	create_insn	(0X13BC9);
	create_insn	(0X13BCD);
	create_insn	(x=0X13BD5);
	op_hex		(x,	1);
	create_insn	(x=0X13BD7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13BDB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X13BE7);
	op_hex		(x,	1);
	create_insn	(0X13BEC);
	set_name	(0X13BEC,	"installCBreakHandler");
	create_insn	(x=0X13BF0);
	create_insn	(x=0X13BFD);
	op_seg		(x,	1);
	create_insn	(x=0X13C00);
	op_plain_offset	(x,	1,	0X10000);
	op_plain_offset	(x,	129,	0X10000);
	create_insn	(x=0X13C05);
	op_hex		(x,	1);
	set_cmt	(0X13C08,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X13C08);
	op_hex		(x,	0);
	create_insn	(0X13C0F);
	set_name	(0X13C0F,	"restoreCBreakHandler");
	create_insn	(x=0X13C19);
	op_hex		(x,	1);
	set_cmt	(0X13C1C,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X13C1C);
	op_hex		(x,	0);
	create_insn	(0X13C20);
	set_name	(0X13C20,	"getInterruptHandler");
	create_insn	(0X13C2C);
	set_name	(0X13C2C,	"cbreakHandler");
	create_insn	(x=0X13C2E);
	op_seg		(x,	1);
	create_insn	(0X13C3B);
	create_insn	(0X13C47);
	create_insn	(0X13C59);
	create_insn	(0X13C78);
	set_name	(0X13C78,	"setTimerIrqHandler");
	set_name	(0X13C84,	"InstallKeyboardIrqHandler");
	set_cmt	(0X13C97,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector",	0);
	create_insn	(x=0X13C97);
	op_hex		(x,	0);
	set_name	(0X13C97,	"RestoreKeyboardIrqHandler");
	create_insn	(x=0X13CA4);
	op_enum		(x,	1,	GetEnum("enum_1"),0);
	set_cmt	(0X13CAD,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X13CAD);
	op_hex		(x,	0);
	create_insn	(0X13CB6);
	set_name	(0X13CB6,	"restoreTimerIrqHandler");
	set_cmt	(0X13CB8,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13CB8);
	op_enum		(x,	0,	GetEnum("enum_1"),0);
	create_insn	(0X13CBC);
	set_cmt	(0X13CBE,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13CBE);
	op_enum		(x,	0,	GetEnum("enum_1"),0);
	set_cmt	(0X13CC2,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13CC2);
	op_enum		(x,	0,	GetEnum("enum_1"),0);
	create_insn	(x=0X13CC5);
	op_enum		(x,	1,	GetEnum("enum_1"),0);
	set_cmt	(0X13CCE,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X13CCE);
	op_hex		(x,	0);
	create_insn	(0X13CD7);
	create_insn	(0X13CEF);
	create_dword	(x=0X13D01);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	set_name	(0X13D01,	"timerIrqAddr");
	create_byte	(0X13D05);
	make_array	(0X13D05,	0XB);
	create_word	(x=0X13D10);
	op_seg		(x,	0);
	create_byte	(0X13D12);
	make_array	(0X13D12,	0X2F);
	create_word	(x=0X13D41);
	op_seg		(x,	0);
	create_byte	(0X13D43);
	make_array	(0X13D43,	0X24);
	create_dword	(0X13D67);
	set_name	(0X13D67,	"timerIsrPtr");
	create_insn	(0X13D6B);
	set_name	(0X13D6B,	"timerInterruptLogic");
	create_insn	(x=0X13D93);
	op_hex		(x,	1);
	create_insn	(x=0X13D98);
	op_hex		(x,	1);
	create_insn	(x=0X13D9E);
	op_hex		(x,	1);
	create_insn	(0X13DA5);
	create_insn	(x=0X13DA7);
	op_hex		(x,	1);
	create_insn	(x=0X13DAC);
	op_hex		(x,	1);
	create_insn	(x=0X13DB2);
	op_hex		(x,	1);
	create_insn	(0X13DBE);
	set_cmt	(0X13DD2,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13DD2);
	op_hex		(x,	0);
	create_insn	(0X13DD6);
	set_cmt	(0X13DD8,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13DD8);
	op_hex		(x,	0);
	create_insn	(0X13DDC);
	set_cmt	(0X13DDE,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13DDE);
	op_hex		(x,	0);
	set_cmt	(0X13DF2,	"identical to sub_119d4 in start.exe",	0);
	create_insn	(0X13DF2);
	create_insn	(x=0X13E36);
	op_hex		(x,	1);
	create_insn	(x=0X13E3D);
	op_hex		(x,	1);
	create_insn	(x=0X13E3F);
	op_hex		(x,	1);
	create_insn	(x=0X13E41);
	op_hex		(x,	1);
	create_insn	(x=0X13E43);
	op_hex		(x,	1);
	create_insn	(0X13E5A);
	create_insn	(0X13E87);
	set_name	(0X13E87,	"manipulateTimer");
	set_cmt	(0X13E8D,	"0:463 - base port address for crtc?",	0);
	create_insn	(x=0X13EA1);
	op_hex		(x,	1);
	create_insn	(x=0X13EAB);
	op_hex		(x,	1);
	create_insn	(0X13EB2);
	create_insn	(x=0X13EB8);
	op_hex		(x,	1);
	create_insn	(x=0X13EC2);
	op_hex		(x,	1);
	set_cmt	(0X13EC8,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13EC8);
	op_hex		(x,	0);
	set_cmt	(0X13ECC,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13ECC);
	op_hex		(x,	1);
	create_insn	(0X13ED0);
	set_cmt	(0X13ED2,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X13ED2);
	op_hex		(x,	1);
	create_insn	(0X13ED6);
	create_insn	(0X13EDC);
	set_name	(0X13EDC,	"getTimeOfDay");
	set_cmt	(0X13EDE,	"CLOCK - GET TIME OF DAY\nReturn: CX:DX = clock count\nAL = 00h if clock was read or written (via AH=0,1) since the previous\nmidnight\nOtherwise, AL > 0",	0);
	create_insn	(x=0X13EDE);
	op_hex		(x,	0);
	create_insn	(0X13EE3);
	create_insn	(0X13EFE);
	create_insn	(0X13F01);
	create_insn	(0X13F02);
	create_insn	(0X13F0E);
	create_insn	(x=0X13F21);
	op_hex		(x,	1);
	create_insn	(x=0X13F2F);
	op_hex		(x,	1);
	create_insn	(x=0X13F3D);
	op_hex		(x,	1);
	create_insn	(x=0X13F4A);
	op_hex		(x,	1);
	create_insn	(x=0X13F5F);
	op_hex		(x,	1);
	create_insn	(x=0X13F6D);
	op_hex		(x,	1);
	create_insn	(0X13F72);
	set_name	(0X13F72,	"otherKeyDispatch");
	create_insn	(x=0X13F75);
	op_hex		(x,	1);
	set_cmt	(0X13F79,	"char *",	0);
	create_insn	(x=0X13F9C);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X13FA5);
	create_insn	(0X13FB2);
	create_insn	(x=0X13FBA);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X13FC5);
	op_enum		(x,	0,	GetEnum("Game"),0);
	op_hex		(x,	1);
	create_insn	(0X13FD0);
	create_insn	(x=0X13FDE);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	set_cmt	(0X14006,	"unsigned int",	0);
	create_insn	(x=0X1400A);
	op_hex		(x,	1);
	set_cmt	(0X1402B,	"unsigned int",	0);
	create_insn	(x=0X1402F);
	op_hex		(x,	1);
	create_insn	(0X14034);
	create_insn	(0X1403A);
	create_insn	(x=0X1404B);
	op_hex		(x,	1);
	create_insn	(0X14057);
	create_insn	(0X1406A);
	create_insn	(x=0X14075);
	op_hex		(x,	1);
	create_insn	(x=0X1407E);
	op_hex		(x,	1);
	create_insn	(0X14086);
	create_insn	(x=0X1408F);
	op_hex		(x,	1);
	create_insn	(0X14097);
	create_insn	(x=0X140A0);
	op_hex		(x,	1);
	create_insn	(0X140A7);
	create_insn	(x=0X140B7);
	op_hex		(x,	1);
	create_insn	(x=0X140C0);
	op_hex		(x,	1);
	create_insn	(x=0X140C5);
	op_hex		(x,	1);
	create_insn	(x=0X140EB);
	op_hex		(x,	1);
	create_insn	(0X140F1);
	create_insn	(0X14106);
	create_insn	(x=0X1410D);
	op_hex		(x,	1);
	create_insn	(0X14118);
	create_insn	(x=0X14146);
	op_hex		(x,	1);
	set_cmt	(0X1414B,	"int",	0);
	create_insn	(x=0X1414F);
	op_hex		(x,	1);
	set_cmt	(0X14155,	"int",	0);
	set_cmt	(0X14159,	"int",	0);
	set_cmt	(0X1415C,	"int",	0);
	set_cmt	(0X1415D,	"int",	0);
	create_insn	(x=0X14161);
	op_hex		(x,	1);
	create_insn	(x=0X1417E);
	op_hex		(x,	1);
	create_insn	(x=0X141B2);
	op_hex		(x,	1);
	create_insn	(x=0X141DC);
	op_hex		(x,	1);
	create_insn	(0X141E4);
	create_insn	(0X141E9);
	create_insn	(0X141EB);
	create_insn	(0X141F3);
	create_insn	(0X141FD);
	create_insn	(0X14205);
	create_insn	(0X1420D);
	create_insn	(0X14215);
	create_insn	(0X14217);
	create_insn	(0X14224);
	create_insn	(0X1422C);
	create_insn	(0X14234);
	create_insn	(0X1423C);
	create_insn	(0X1423E);
	create_insn	(x=0X14262);
	op_hex		(x,	1);
	create_insn	(0X14278);
	create_insn	(x=0X1427C);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(0X1428A);
	set_cmt	(0X142E4,	"int",	0);
	create_insn	(x=0X142EB);
	op_hex		(x,	1);
	create_insn	(x=0X142F7);
	op_hex		(x,	1);
	create_insn	(x=0X14338);
	op_hex		(x,	1);
	create_insn	(x=0X1434C);
	op_hex		(x,	1);
	create_insn	(x=0X14351);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14358);
	op_hex		(x,	1);
	create_insn	(x=0X14366);
	op_hex		(x,	1);
	create_insn	(x=0X14379);
	op_hex		(x,	1);
	create_insn	(x=0X14380);
	op_hex		(x,	1);
	create_insn	(x=0X14385);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1438C);
	op_hex		(x,	1);
	create_insn	(0X143AD);
	create_insn	(x=0X143B7);
	op_hex		(x,	1);
	create_insn	(0X143C5);
	create_insn	(x=0X143C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X143D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X143E1);
	op_hex		(x,	1);
	create_insn	(x=0X143E4);
	op_hex		(x,	1);
	create_insn	(x=0X143E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X143F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X14400);
	op_hex		(x,	1);
	create_insn	(x=0X14423);
	op_hex		(x,	1);
	create_insn	(x=0X14426);
	op_stkvar	(x,	0);
	create_insn	(x=0X14431);
	op_stkvar	(x,	1);
	create_insn	(x=0X14440);
	op_hex		(x,	1);
	create_insn	(0X14450);
	create_insn	(x=0X14453);
	op_stkvar	(x,	0);
	create_insn	(x=0X14459);
	op_stkvar	(x,	0);
	create_insn	(x=0X14462);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1446A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1446D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14475);
	op_stkvar	(x,	0);
	create_insn	(x=0X14478);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(x=0X14484);
	op_hex		(x,	1);
	create_insn	(x=0X14489);
	op_stkvar	(x,	0);
	create_insn	(x=0X1448C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14493);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X144A0);
	create_insn	(x=0X144A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X144A6);
	op_stkvar	(x,	0);
	set_cmt	(0X144A9,	"int",	0);
	create_insn	(x=0X144B0);
	op_hex		(x,	1);
	create_insn	(x=0X144B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X144B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X144BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X144C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X144C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X144C9);
	op_stkvar	(x,	0);
	set_cmt	(0X144D2,	"int",	0);
	create_insn	(x=0X144D6);
	op_hex		(x,	1);
	create_insn	(x=0X144D9);
	op_stkvar	(x,	0);
	set_cmt	(0X144E4,	"int",	0);
	create_insn	(x=0X144E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X144EA);
	op_hex		(x,	1);
	set_cmt	(0X144ED,	"int",	0);
	create_insn	(x=0X144ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X144F5);
	op_hex		(x,	1);
	create_insn	(x=0X144FA);
	op_hex		(x,	1);
	create_insn	(x=0X144FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14517);
	op_hex		(x,	1);
	create_insn	(x=0X1451A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14525);
	op_stkvar	(x,	1);
	create_insn	(x=0X1452C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(x=0X14534);
	op_stkvar	(x,	0);
	set_cmt	(0X1453F,	"int",	0);
	create_insn	(x=0X1453F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14545);
	op_hex		(x,	1);
	create_insn	(x=0X1454D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14552);
	op_stkvar	(x,	1);
	create_insn	(x=0X14559);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X14566);
	create_insn	(x=0X14569);
	op_stkvar	(x,	1);
	create_insn	(x=0X1456C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14570);
	op_stkvar	(x,	0);
	set_cmt	(0X1457A,	"int",	0);
	create_insn	(x=0X1457A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14580);
	op_hex		(x,	1);
	create_insn	(x=0X14583);
	op_hex		(x,	1);
	create_insn	(x=0X14585);
	op_hex		(x,	1);
	create_insn	(x=0X14589);
	op_stkvar	(x,	1);
	create_insn	(x=0X145A2);
	op_hex		(x,	1);
	create_insn	(x=0X145A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X145A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X145AB);
	op_hex		(x,	1);
	create_insn	(x=0X145B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X145B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X145BE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X145C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X145C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X145CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X145CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X145D2);
	op_hex		(x,	1);
	create_insn	(x=0X145D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X145DB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X145DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X145EF);
	op_hex		(x,	1);
	create_insn	(x=0X145F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X145FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X14606);
	op_hex		(x,	1);
	create_insn	(x=0X14609);
	op_stkvar	(x,	0);
	create_insn	(x=0X1461D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14620);
	op_stkvar	(x,	1);
	create_insn	(x=0X14626);
	op_stkvar	(x,	1);
	create_insn	(x=0X14630);
	op_stkvar	(x,	1);
	create_insn	(x=0X1463B);
	op_hex		(x,	1);
	create_insn	(x=0X1463E);
	op_hex		(x,	1);
	create_insn	(x=0X14640);
	op_stkvar	(x,	0);
	create_insn	(x=0X1464A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14657);
	op_stkvar	(x,	1);
	create_insn	(x=0X14666);
	op_hex		(x,	1);
	set_cmt	(0X14676,	"int",	0);
	create_insn	(x=0X14676);
	op_stkvar	(x,	0);
	create_insn	(x=0X1467C);
	op_hex		(x,	1);
	create_insn	(x=0X1468F);
	op_stkvar	(x,	1);
	create_insn	(x=0X146A8);
	op_hex		(x,	1);
	create_insn	(x=0X146B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X146D2);
	op_hex		(x,	1);
	create_insn	(x=0X146D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X146E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X146F1);
	op_hex		(x,	1);
	create_insn	(x=0X146FF);
	op_hex		(x,	1);
	create_insn	(x=0X14719);
	op_hex		(x,	1);
	create_insn	(x=0X14728);
	op_enum		(x,	0,	GetEnum("Game"),0);
	set_cmt	(0X14733,	"int",	0);
	set_cmt	(0X14734,	"__int32",	0);
	create_insn	(x=0X14735);
	op_dec		(x,	1);
	set_cmt	(0X1473D,	"int",	0);
	set_cmt	(0X1473E,	"__int32",	0);
	create_insn	(x=0X14744);
	op_hex		(x,	1);
	create_insn	(x=0X14746);
	op_hex		(x,	1);
	create_insn	(x=0X1474E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14753);
	op_stkvar	(x,	0);
	create_insn	(x=0X14758);
	op_hex		(x,	1);
	create_insn	(x=0X14769);
	op_dec		(x,	1);
	create_insn	(x=0X14774);
	op_hex		(x,	1);
	create_insn	(x=0X14777);
	op_stkvar	(x,	0);
	create_insn	(x=0X1477A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14789);
	op_stkvar	(x,	0);
	create_insn	(x=0X1478F);
	op_hex		(x,	1);
	create_insn	(x=0X14792);
	op_stkvar	(x,	1);
	create_insn	(x=0X14795);
	op_hex		(x,	1);
	create_insn	(x=0X1479D);
	op_stkvar	(x,	0);
	create_insn	(x=0X147A3);
	op_hex		(x,	1);
	create_insn	(x=0X147A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X147A9);
	op_hex		(x,	1);
	create_insn	(x=0X147AD);
	op_hex		(x,	1);
	create_insn	(x=0X147B3);
	op_hex		(x,	1);
	create_insn	(x=0X147CE);
	op_enum		(x,	0,	GetEnum("Game"),0);
	set_cmt	(0X147D5,	"int",	0);
	create_insn	(x=0X147DC);
	op_hex		(x,	1);
	create_insn	(x=0X147F2);
	op_hex		(x,	1);
	create_insn	(x=0X147F4);
	op_hex		(x,	1);
	create_insn	(x=0X147FA);
	op_dec		(x,	1);
	create_insn	(x=0X147FD);
	op_hex		(x,	1);
	create_insn	(x=0X147FF);
	op_hex		(x,	1);
	create_insn	(x=0X14801);
	op_stkvar	(x,	0);
	create_insn	(x=0X1480F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14815);
	op_hex		(x,	1);
	create_insn	(0X14825);
	set_cmt	(0X1482B,	"int",	0);
	create_insn	(x=0X14832);
	op_hex		(x,	1);
	create_insn	(0X1483F);
	create_insn	(x=0X14867);
	op_hex		(x,	1);
	create_insn	(x=0X14876);
	op_hex		(x,	1);
	create_insn	(x=0X14883);
	op_hex		(x,	1);
	create_insn	(x=0X148C6);
	op_hex		(x,	1);
	create_insn	(x=0X148D4);
	op_hex		(x,	1);
	create_insn	(x=0X148DE);
	op_hex		(x,	1);
	create_insn	(x=0X148ED);
	op_hex		(x,	1);
	create_insn	(x=0X148EF);
	op_hex		(x,	1);
	create_insn	(x=0X148F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X148FE);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X14905);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1490C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X14917);
	op_hex		(x,	1);
	create_insn	(x=0X1491E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X14922);
	op_stkvar	(x,	1);
	create_insn	(x=0X1494A);
	op_hex		(x,	1);
	create_insn	(x=0X14962);
	op_hex		(x,	1);
	create_insn	(x=0X14964);
	op_hex		(x,	1);
	create_insn	(x=0X149C9);
	op_hex		(x,	1);
	create_insn	(x=0X149E5);
	op_dec		(x,	1);
	set_cmt	(0X14A07,	"int",	0);
	create_insn	(x=0X14A0E);
	op_hex		(x,	1);
	create_insn	(x=0X14A17);
	op_hex		(x,	1);
	create_insn	(x=0X14A1A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14A32);
	op_hex		(x,	1);
	set_cmt	(0X14A4D,	"int",	0);
	create_insn	(x=0X14A54);
	op_hex		(x,	1);
	create_insn	(x=0X14A5D);
	op_hex		(x,	1);
	create_insn	(x=0X14A60);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14A6F);
	op_hex		(x,	1);
	create_insn	(x=0X14A79);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14A7C,	"char *",	0);
	set_cmt	(0X14A8E,	"int",	0);
	create_insn	(x=0X14A92);
	op_hex		(x,	1);
	create_insn	(x=0X14A96);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14A99,	"char *",	0);
	create_insn	(x=0X14A9D);
	op_hex		(x,	1);
	create_insn	(x=0X14AA0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14AA4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14AA7,	"char *",	0);
	create_insn	(x=0X14AAB);
	op_hex		(x,	1);
	create_insn	(x=0X14AB2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14AB5,	"char *",	0);
	set_cmt	(0X14AB6,	"int",	0);
	create_insn	(x=0X14ABD);
	op_hex		(x,	1);
	create_insn	(x=0X14AC2);
	op_hex		(x,	1);
	create_insn	(x=0X14AC5);
	op_hex		(x,	1);
	set_cmt	(0X14AC7,	"int",	0);
	create_insn	(x=0X14ACB);
	op_hex		(x,	1);
	create_insn	(x=0X14ACF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14AD2,	"char *",	0);
	create_insn	(x=0X14AD6);
	op_hex		(x,	1);
	create_insn	(x=0X14AD9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14ADD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X14AE0,	"char *",	0);
	create_insn	(x=0X14AE4);
	op_hex		(x,	1);
	set_cmt	(0X14AEC,	"__int32",	0);
	set_cmt	(0X14AF1,	"int",	0);
	set_cmt	(0X14AF2,	"__int32",	0);
	set_cmt	(0X14AF6,	"int",	0);
	set_cmt	(0X14AF7,	"int",	0);
	create_insn	(x=0X14AFE);
	op_hex		(x,	1);
	set_cmt	(0X14B09,	"int",	0);
	set_cmt	(0X14B0A,	"__int32",	0);
	set_cmt	(0X14B0F,	"__int32",	0);
	create_insn	(x=0X14B13);
	op_stkvar	(x,	0);
	set_cmt	(0X14B28,	"int",	0);
	set_cmt	(0X14B29,	"__int32",	0);
	create_insn	(x=0X14B2A);
	op_stkvar	(x,	1);
	set_cmt	(0X14B2E,	"int",	0);
	set_cmt	(0X14B2F,	"__int32",	0);
	create_insn	(x=0X14B35);
	op_hex		(x,	1);
	create_insn	(x=0X14B37);
	op_hex		(x,	1);
	create_insn	(x=0X14B3F);
	op_stkvar	(x,	0);
	set_cmt	(0X14B46,	"int",	0);
	set_cmt	(0X14B47,	"__int32",	0);
	set_cmt	(0X14B54,	"int",	0);
	set_cmt	(0X14B55,	"__int32",	0);
	create_insn	(x=0X14B5B);
	op_hex		(x,	1);
	create_insn	(x=0X14B5D);
	op_hex		(x,	1);
	create_insn	(0X14B65);
	set_cmt	(0X14B6D,	"__int32",	0);
	create_insn	(x=0X14B6E);
	op_stkvar	(x,	1);
	set_cmt	(0X14B72,	"int",	0);
	set_cmt	(0X14B73,	"__int32",	0);
	set_cmt	(0X14B81,	"int",	0);
	set_cmt	(0X14B82,	"__int32",	0);
	set_cmt	(0X14B87,	"__int32",	0);
	create_insn	(x=0X14B8B);
	op_stkvar	(x,	0);
	set_cmt	(0X14B96,	"int",	0);
	set_cmt	(0X14B97,	"__int32",	0);
	create_insn	(x=0X14B98);
	op_stkvar	(x,	1);
	set_cmt	(0X14B9C,	"int",	0);
	set_cmt	(0X14B9D,	"__int32",	0);
	create_insn	(x=0X14BA3);
	op_hex		(x,	1);
	create_insn	(x=0X14BA5);
	op_hex		(x,	1);
	create_insn	(x=0X14BAD);
	op_stkvar	(x,	0);
	set_cmt	(0X14BB4,	"int",	0);
	set_cmt	(0X14BB5,	"__int32",	0);
	create_insn	(x=0X14BB9);
	op_hex		(x,	1);
	create_insn	(x=0X14BBB);
	op_hex		(x,	1);
	create_insn	(x=0X14BC1);
	op_hex		(x,	1);
	set_cmt	(0X14BC5,	"int",	0);
	set_cmt	(0X14BC6,	"__int32",	0);
	create_insn	(x=0X14BCC);
	op_hex		(x,	1);
	create_insn	(x=0X14BCE);
	op_hex		(x,	1);
	create_insn	(0X14BD6);
	set_cmt	(0X14BD9,	"int",	0);
	create_insn	(x=0X14BDD);
	op_hex		(x,	1);
	create_insn	(x=0X14BE3);
	op_hex		(x,	1);
	create_insn	(x=0X14BEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X14C05);
	op_stkvar	(x,	0);
	create_insn	(x=0X14C0B);
	op_hex		(x,	1);
	create_insn	(x=0X14C13);
	op_stkvar	(x,	0);
	set_cmt	(0X14C1B,	"__int32",	0);
	set_cmt	(0X14C21,	"__int32",	0);
	create_insn	(x=0X14C28);
	op_stkvar	(x,	1);
	set_cmt	(0X14C33,	"__int32",	0);
	set_cmt	(0X14C38,	"__int32",	0);
	set_cmt	(0X14C40,	"int",	0);
	create_insn	(x=0X14C47);
	op_hex		(x,	1);
	set_cmt	(0X14C4D,	"__int32",	0);
	set_cmt	(0X14C52,	"int",	0);
	set_cmt	(0X14C53,	"__int32",	0);
	set_cmt	(0X14C58,	"int",	0);
	set_cmt	(0X14C59,	"__int32",	0);
	set_cmt	(0X14C5E,	"__int32",	0);
	create_insn	(x=0X14C7E);
	op_hex		(x,	1);
	create_insn	(x=0X14C84);
	op_hex		(x,	1);
	create_insn	(x=0X14C9B);
	op_enum		(x,	1,	GetEnum("Game"),0);
	create_insn	(0X14CCF);
	create_insn	(x=0X14CF9);
	op_hex		(x,	1);
	create_insn	(x=0X14CFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X14D16);
	op_hex		(x,	1);
	set_cmt	(0X14D25,	"__int32",	0);
	set_cmt	(0X14D2D,	"int",	0);
	set_cmt	(0X14D2E,	"int",	0);
	create_insn	(x=0X14D35);
	op_hex		(x,	1);
	create_insn	(x=0X14D3B);
	op_hex		(x,	1);
	create_insn	(x=0X14D3D);
	op_hex		(x,	1);
	create_insn	(0X14D45);
	set_cmt	(0X14D46,	"__int32",	0);
	create_insn	(x=0X14D4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14D55);
	op_hex		(x,	1);
	create_insn	(x=0X14D58);
	op_stkvar	(x,	0);
	create_insn	(x=0X14D6D);
	op_stkvar	(x,	0);
	set_cmt	(0X14DA3,	"__int32",	0);
	create_insn	(x=0X14DAA);
	op_hex		(x,	1);
	create_insn	(x=0X14DAC);
	op_hex		(x,	1);
	create_insn	(0X14DB4);
	set_cmt	(0X14DB5,	"__int32",	0);
	create_insn	(x=0X14DB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X14DC4);
	op_hex		(x,	1);
	create_insn	(x=0X14DCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X14DD3);
	op_hex		(x,	1);
	create_insn	(x=0X14DDE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14DE2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14DE9);
	op_hex		(x,	1);
	create_insn	(x=0X14DFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E05);
	op_hex		(x,	1);
	create_insn	(x=0X14E0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E14);
	op_hex		(x,	1);
	create_insn	(x=0X14E1F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14E23);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14E2A);
	op_hex		(x,	1);
	create_insn	(x=0X14E2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E37);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E42);
	op_hex		(x,	1);
	create_insn	(x=0X14E4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E51);
	op_hex		(x,	1);
	create_insn	(x=0X14E5C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14E60);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X14E67);
	op_hex		(x,	1);
	create_insn	(x=0X14E83);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(0X14E95);
	create_insn	(x=0X14EB0);
	op_dec		(x,	1);
	create_insn	(x=0X14EC3);
	op_hex		(x,	1);
	set_cmt	(0X14F0B,	"int",	0);
	create_insn	(x=0X14F12);
	op_hex		(x,	1);
	create_insn	(x=0X14F18);
	op_hex		(x,	1);
	set_cmt	(0X14F1A,	"int",	0);
	create_insn	(x=0X14F23);
	op_hex		(x,	1);
	create_insn	(0X14F31);
	create_insn	(x=0X14F43);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F51);
	op_hex		(x,	1);
	create_insn	(x=0X14F63);
	op_hex		(x,	1);
	create_insn	(x=0X14F82);
	op_hex		(x,	1);
	create_insn	(x=0X14F86);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F8C);
	op_hex		(x,	1);
	create_insn	(x=0X14FAC);
	op_hex		(x,	1);
	create_insn	(x=0X14FB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X14FB6);
	op_hex		(x,	1);
	create_insn	(0X15004);
	create_insn	(x=0X15012);
	op_hex		(x,	1);
	create_insn	(0X1501C);
	create_insn	(x=0X15022);
	op_hex		(x,	1);
	create_insn	(x=0X15024);
	op_hex		(x,	1);
	create_insn	(0X15038);
	create_insn	(x=0X1503B);
	op_stkvar	(x,	0);
	create_insn	(0X15043);
	create_insn	(0X1504D);
	create_insn	(x=0X15058);
	op_hex		(x,	1);
	create_insn	(x=0X15063);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X15070);
	create_insn	(x=0X15081);
	op_hex		(x,	1);
	create_insn	(x=0X1508B);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X15092);
	op_hex		(x,	1);
	set_cmt	(0X15099,	"int",	0);
	create_insn	(x=0X150A0);
	op_hex		(x,	1);
	create_insn	(x=0X150C2);
	op_hex		(x,	1);
	set_cmt	(0X150C8,	"arg_0",	0);
	create_insn	(x=0X150CC);
	op_hex		(x,	1);
	create_insn	(x=0X150D6);
	op_hex		(x,	1);
	create_insn	(x=0X150E2);
	op_hex		(x,	1);
	create_insn	(x=0X150E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X150F1);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X150F8);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X150FF);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1510A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1510E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X15119);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1511D);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X15124);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X15132);
	create_insn	(x=0X1514C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15154);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1515C);
	op_hex		(x,	1);
	create_insn	(x=0X1516B);
	op_hex		(x,	1);
	create_insn	(x=0X1516E);
	op_stkvar	(x,	0);
	create_insn	(0X15173);
	create_insn	(x=0X15177);
	op_stkvar	(x,	0);
	create_insn	(x=0X1517D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15180);
	op_hex		(x,	1);
	create_insn	(x=0X15183);
	op_stkvar	(x,	0);
	create_insn	(x=0X1518F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15193);
	op_stkvar	(x,	0);
	create_insn	(x=0X15199);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1519D);
	op_stkvar	(x,	0);
	create_insn	(x=0X151A0);
	op_hex		(x,	1);
	create_insn	(x=0X151A2);
	op_hex		(x,	1);
	set_cmt	(0X151A4,	"int",	0);
	set_cmt	(0X151A5,	"int",	0);
	create_insn	(x=0X151AC);
	op_hex		(x,	1);
	create_insn	(x=0X151AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X151B4);
	op_hex		(x,	1);
	create_insn	(x=0X151B6);
	op_hex		(x,	1);
	create_insn	(x=0X151C2);
	op_hex		(x,	1);
	create_insn	(x=0X151CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X151CD);
	op_hex		(x,	1);
	create_insn	(x=0X151D7);
	op_hex		(x,	1);
	create_insn	(x=0X151DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X151DD);
	op_hex		(x,	1);
	create_insn	(x=0X151DF);
	op_hex		(x,	1);
	set_cmt	(0X151E1,	"int",	0);
	set_cmt	(0X151E2,	"int",	0);
	create_insn	(x=0X151EB);
	op_hex		(x,	1);
	create_insn	(0X151F9);
	create_insn	(x=0X151FC);
	op_hex		(x,	1);
	create_insn	(x=0X15203);
	op_hex		(x,	1);
	create_insn	(x=0X1520F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15213);
	op_stkvar	(x,	0);
	create_insn	(x=0X15216);
	op_stkvar	(x,	0);
	create_insn	(x=0X1521E);
	op_hex		(x,	1);
	set_cmt	(0X15224,	"void *",	0);
	create_insn	(x=0X15225);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15229);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1522C,	"void *",	0);
	create_insn	(x=0X15230);
	op_hex		(x,	1);
	create_insn	(0X15237);
	create_insn	(x=0X1523A);
	op_hex		(x,	1);
	create_insn	(x=0X15246);
	op_hex		(x,	1);
	create_insn	(x=0X15250);
	op_hex		(x,	1);
	create_insn	(x=0X15253);
	op_stkvar	(x,	0);
	set_cmt	(0X1525D,	"int",	0);
	create_insn	(0X1525D);
	create_insn	(x=0X15264);
	op_hex		(x,	1);
	create_insn	(x=0X1526C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15276);
	op_hex		(x,	1);
	set_cmt	(0X15279,	"int",	0);
	create_insn	(x=0X1527D);
	op_hex		(x,	1);
	create_insn	(x=0X15284);
	op_hex		(x,	1);
	create_insn	(x=0X1528C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15296);
	op_hex		(x,	1);
	set_cmt	(0X15299,	"int",	0);
	create_insn	(x=0X1529D);
	op_hex		(x,	1);
	create_insn	(x=0X152A4);
	op_hex		(x,	1);
	set_cmt	(0X152EB,	"int",	0);
	create_insn	(x=0X152F2);
	op_hex		(x,	1);
	create_insn	(x=0X152FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X15304);
	op_hex		(x,	1);
	set_cmt	(0X15307,	"int",	0);
	create_insn	(x=0X1530B);
	op_hex		(x,	1);
	create_insn	(x=0X15312);
	op_hex		(x,	1);
	create_insn	(x=0X1531A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15324);
	op_hex		(x,	1);
	set_cmt	(0X15327,	"int",	0);
	create_insn	(x=0X1532B);
	op_hex		(x,	1);
	create_insn	(x=0X15332);
	op_hex		(x,	1);
	create_insn	(0X1537C);
	create_insn	(x=0X15389);
	op_hex		(x,	1);
	create_insn	(0X15411);
	set_name	(0X15411,	"UpdateRotationMatrix");
	create_insn	(x=0X15429);
	op_hex		(x,	1);
	create_insn	(0X1543B);
	create_insn	(x=0X1543E);
	op_hex		(x,	1);
	create_insn	(x=0X15442);
	op_stkvar	(x,	0);
	create_insn	(x=0X15446);
	op_stkvar	(x,	0);
	create_insn	(x=0X1544A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15450);
	op_stkvar	(x,	0);
	create_insn	(x=0X15454);
	op_stkvar	(x,	0);
	create_insn	(x=0X1545A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1545E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1546B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1546F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15472);
	op_stkvar	(x,	0);
	create_insn	(x=0X15475);
	op_stkvar	(x,	0);
	create_insn	(x=0X1547B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15482);
	op_stkvar	(x,	1);
	create_insn	(x=0X15486);
	op_stkvar	(x,	0);
	create_insn	(x=0X15489);
	op_stkvar	(x,	0);
	create_insn	(x=0X1548E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15498);
	op_hex		(x,	1);
	create_insn	(x=0X1549A);
	op_hex		(x,	1);
	create_insn	(x=0X1549E);
	op_stkvar	(x,	1);
	create_insn	(x=0X154A4);
	op_stkvar	(x,	1);
	create_insn	(0X154B2);
	create_insn	(0X154B7);
	create_insn	(x=0X154BA);
	op_hex		(x,	1);
	create_insn	(x=0X154BE);
	op_stkvar	(x,	0);
	set_cmt	(0X154CA,	"int",	0);
	create_insn	(x=0X154CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X154D0);
	op_hex		(x,	1);
	create_insn	(x=0X154D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X154DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X154E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X154E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X154E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X154EC);
	op_hex		(x,	1);
	create_insn	(x=0X154EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X154F1);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X154F7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X154FB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X154FF);
	op_stkvar	(x,	0);
	set_cmt	(0X15504,	"__int32",	0);
	create_insn	(x=0X15505);
	op_stkvar	(x,	1);
	create_insn	(x=0X15508);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X15516,	"__int32",	0);
	create_insn	(x=0X1551A);
	op_stkvar	(x,	1);
	create_insn	(x=0X15521);
	op_stkvar	(x,	0);
	create_insn	(0X15526);
	create_insn	(x=0X15528);
	op_stkvar	(x,	0);
	create_insn	(x=0X1552E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15533);
	op_stkvar	(x,	0);
	create_insn	(x=0X15536);
	op_stkvar	(x,	1);
	create_insn	(0X1553B);
	create_insn	(0X15540);
	create_insn	(x=0X15543);
	op_stkvar	(x,	0);
	create_insn	(x=0X15549);
	op_hex		(x,	1);
	create_insn	(0X15553);
	create_insn	(0X15557);
	create_insn	(x=0X1555A);
	op_hex		(x,	1);
	set_cmt	(0X1555D,	"int",	0);
	create_insn	(x=0X1555D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15563);
	op_hex		(x,	1);
	create_insn	(x=0X15566);
	op_stkvar	(x,	0);
	create_insn	(x=0X15573);
	op_stkvar	(x,	1);
	create_insn	(x=0X15576);
	op_hex		(x,	1);
	create_insn	(x=0X15578);
	op_hex		(x,	1);
	create_insn	(x=0X1557A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1557D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15581);
	op_stkvar	(x,	1);
	create_insn	(x=0X15586);
	op_stkvar	(x,	0);
	create_insn	(x=0X1558B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1558E);
	op_hex		(x,	1);
	create_insn	(x=0X15590);
	op_stkvar	(x,	0);
	create_insn	(x=0X15593);
	op_stkvar	(x,	1);
	set_cmt	(0X15596,	"int",	0);
	create_insn	(x=0X1559A);
	op_hex		(x,	1);
	create_insn	(x=0X155A2);
	op_stkvar	(x,	1);
	create_insn	(0X155A7);
	create_insn	(0X155AB);
	set_name	(0X155AB,	"ProcessPlayerInputAndAI");
	create_insn	(x=0X155AE);
	op_hex		(x,	1);
	set_cmt	(0X155B1,	"int",	0);
	create_insn	(x=0X15607);
	op_hex		(x,	1);
	create_insn	(x=0X1560D);
	op_stkvar	(x,	0);
	create_insn	(0X15616);
	create_insn	(0X1562B);
	create_insn	(0X15647);
	create_insn	(0X15661);
	create_insn	(0X1567B);
	create_insn	(x=0X15682);
	op_hex		(x,	1);
	create_insn	(x=0X1568B);
	op_hex		(x,	1);
	create_insn	(x=0X1568E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15697);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1569E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156A5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156AC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156B0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156BB);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156BF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X156CA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X156D4);
	create_insn	(x=0X156EC);
	op_stkvar	(x,	1);
	set_cmt	(0X156F1,	"int",	0);
	set_cmt	(0X156F8,	"int",	0);
	create_insn	(x=0X156FC);
	op_hex		(x,	1);
	create_insn	(x=0X15712);
	op_stkvar	(x,	1);
	create_insn	(x=0X15722);
	op_hex		(x,	1);
	create_insn	(0X15738);
	set_name	(0X15738,	"case86_15738");
	create_insn	(x=0X1574D);
	op_stkvar	(x,	1);
	create_insn	(0X15765);
	create_insn	(x=0X1577A);
	op_stkvar	(x,	1);
	set_cmt	(0X1577F,	"int",	0);
	set_cmt	(0X15786,	"int",	0);
	create_insn	(x=0X1578A);
	op_hex		(x,	1);
	create_insn	(x=0X157A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X157B0);
	op_hex		(x,	1);
	create_insn	(x=0X157C6);
	op_stkvar	(x,	1);
	create_insn	(0X157D5);
	create_insn	(x=0X157E4);
	op_hex		(x,	1);
	create_insn	(x=0X157F6);
	op_hex		(x,	1);
	create_insn	(0X15808);
	create_insn	(x=0X15815);
	op_stkvar	(x,	1);
	create_insn	(x=0X15818);
	op_stkvar	(x,	0);
	create_insn	(x=0X1581B);
	op_hex		(x,	1);
	create_insn	(x=0X15825);
	op_hex		(x,	1);
	create_insn	(x=0X15835);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1583C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15844);
	op_hex		(x,	1);
	create_insn	(x=0X15846);
	op_hex		(x,	1);
	create_insn	(0X1584E);
	create_insn	(x=0X15855);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1585D);
	op_hex		(x,	1);
	create_insn	(x=0X1585F);
	op_hex		(x,	1);
	create_insn	(0X15867);
	create_insn	(x=0X1586E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X15877);
	create_insn	(x=0X15883);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1588A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1589B);
	op_stkvar	(x,	0);
	create_insn	(0X158A2);
	create_insn	(x=0X158A5);
	op_hex		(x,	1);
	create_insn	(x=0X158AF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158B3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158BE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158C2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158CD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158D4);
	op_stkvar	(x,	0);
	create_insn	(0X158DB);
	create_insn	(x=0X158DF);
	op_hex		(x,	1);
	create_insn	(x=0X158E6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X158EE);
	op_hex		(x,	1);
	create_insn	(x=0X158F0);
	op_hex		(x,	1);
	create_insn	(0X158F8);
	create_insn	(x=0X158FF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15907);
	op_hex		(x,	1);
	create_insn	(x=0X15909);
	op_hex		(x,	1);
	create_insn	(0X15911);
	create_insn	(x=0X15918);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X15925);
	create_insn	(x=0X1592B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1593E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1594A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1594D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15959);
	op_hex		(x,	1);
	create_insn	(x=0X1595B);
	op_hex		(x,	1);
	create_insn	(0X15963);
	create_insn	(x=0X15967);
	op_stkvar	(x,	0);
	create_insn	(x=0X15973);
	op_hex		(x,	1);
	create_insn	(x=0X15975);
	op_hex		(x,	1);
	create_insn	(0X1597D);
	create_insn	(x=0X15981);
	op_stkvar	(x,	0);
	create_insn	(x=0X15985);
	op_stkvar	(x,	0);
	create_insn	(x=0X1598B);
	op_hex		(x,	1);
	create_insn	(x=0X1598E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15991);
	op_stkvar	(x,	1);
	create_insn	(x=0X15997);
	op_stkvar	(x,	0);
	create_insn	(x=0X1599D);
	op_hex		(x,	1);
	create_insn	(x=0X159A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X159B5);
	op_hex		(x,	1);
	create_insn	(x=0X159C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X159D3);
	op_hex		(x,	1);
	create_insn	(x=0X159D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X159D9);
	op_hex		(x,	1);
	create_insn	(0X159EA);
	set_cmt	(0X159F2,	"int",	0);
	create_insn	(x=0X159F2);
	op_stkvar	(x,	0);
	set_cmt	(0X159FB,	"int",	0);
	create_insn	(x=0X159FF);
	op_hex		(x,	1);
	create_insn	(x=0X15A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A1F);
	op_hex		(x,	1);
	create_insn	(x=0X15A35);
	op_stkvar	(x,	1);
	set_cmt	(0X15A3A,	"int",	0);
	set_cmt	(0X15A3B,	"int",	0);
	create_insn	(x=0X15A42);
	op_hex		(x,	1);
	create_insn	(x=0X15A48);
	op_stkvar	(x,	1);
	set_cmt	(0X15A62,	"int",	0);
	create_insn	(x=0X15A62);
	op_stkvar	(x,	0);
	set_cmt	(0X15A65,	"int",	0);
	create_insn	(x=0X15A6C);
	op_hex		(x,	1);
	create_insn	(x=0X15A7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A89);
	op_hex		(x,	1);
	create_insn	(x=0X15AA5);
	op_stkvar	(x,	1);
	set_cmt	(0X15AAA,	"int",	0);
	set_cmt	(0X15AAB,	"int",	0);
	create_insn	(x=0X15AB2);
	op_hex		(x,	1);
	create_insn	(x=0X15AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AC7);
	op_hex		(x,	1);
	create_insn	(x=0X15AD2);
	op_hex		(x,	1);
	create_insn	(x=0X15AD9);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X15AF5);
	create_insn	(x=0X15AFE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15B05);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15B12);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B1F);
	op_hex		(x,	1);
	create_insn	(x=0X15B22);
	op_stkvar	(x,	0);
	set_cmt	(0X15B25,	"int",	0);
	set_cmt	(0X15B26,	"int",	0);
	create_insn	(x=0X15B2D);
	op_hex		(x,	1);
	create_insn	(x=0X15B45);
	op_stkvar	(x,	0);
	create_insn	(x=0X15B4F);
	op_hex		(x,	1);
	create_insn	(x=0X15B72);
	op_stkvar	(x,	1);
	set_cmt	(0X15B77,	"int",	0);
	set_cmt	(0X15B78,	"int",	0);
	create_insn	(x=0X15B7F);
	op_hex		(x,	1);
	create_insn	(0X15B8F);
	set_name	(0X15B8F,	"DrawVisualEffects");
	create_insn	(x=0X15BA1);
	op_hex		(x,	1);
	create_insn	(x=0X15BA3);
	op_hex		(x,	1);
	create_insn	(0X15BAB);
	create_insn	(x=0X15BC5);
	op_hex		(x,	1);
	create_insn	(x=0X15BC7);
	op_hex		(x,	1);
	create_insn	(0X15BCF);
	create_insn	(0X15BDE);
	create_insn	(0X15BE0);
	create_insn	(0X15BE8);
	set_cmt	(0X15BEE,	"also handles 0?",	0);
	create_insn	(0X15BF1);
	create_insn	(0X15BF9);
	create_insn	(0X15C01);
	create_insn	(0X15C09);
	create_insn	(0X15C11);
	create_insn	(0X15C13);
	create_insn	(x=0X15C1E);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C23);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C25);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C27);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C29);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C2B);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C2D);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C2F);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X15C31);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	set_cmt	(0X15C33,	"int",	0);
	create_insn	(0X15C33);
	set_name	(0X15C33,	"def_15C1E");
	create_insn	(x=0X15C3A);
	op_hex		(x,	1);
	set_cmt	(0X15C6D,	"void *",	0);
	create_insn	(x=0X15C6E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15C72);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X15C75,	"void *",	0);
	create_insn	(x=0X15C79);
	op_hex		(x,	1);
	create_insn	(0X15C7E);
	create_insn	(x=0X15C8A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15C93);
	op_hex		(x,	1);
	create_insn	(x=0X15CA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X15CAD);
	op_hex		(x,	1);
	create_insn	(x=0X15CBB);
	op_stkvar	(x,	0);
	create_insn	(0X15CC3);
	create_insn	(0X15CD2);
	create_insn	(x=0X15CFE);
	op_hex		(x,	1);
	create_insn	(x=0X15D28);
	op_hex		(x,	1);
	create_insn	(x=0X15D38);
	op_hex		(x,	1);
	create_insn	(x=0X15D4D);
	op_hex		(x,	1);
	create_insn	(x=0X15D61);
	op_hex		(x,	1);
	create_insn	(0X15D6C);
	create_insn	(x=0X15D93);
	op_hex		(x,	1);
	create_insn	(0X15DA2);
	create_insn	(0X15DBA);
	set_cmt	(0X15DCD,	"int",	0);
	create_insn	(x=0X15DD6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X15DDB);
	create_insn	(x=0X15DE2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15DE7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X15DEA,	"char *",	0);
	create_insn	(x=0X15DEE);
	op_hex		(x,	1);
	create_insn	(0X15DF3);
	set_cmt	(0X15DF7,	"int",	0);
	create_insn	(x=0X15E00);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X15E05);
	create_insn	(x=0X15E0C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15E11);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X15E14,	"char *",	0);
	create_insn	(x=0X15E18);
	op_hex		(x,	1);
	create_insn	(x=0X15E42);
	op_hex		(x,	1);
	create_insn	(0X15E58);
	create_insn	(0X15E64);
	create_insn	(x=0X15E96);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(x=0X15EAE);
	op_hex		(x,	1);
	create_insn	(x=0X15EEE);
	op_hex		(x,	1);
	create_insn	(x=0X15F06);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X15F0D);
	op_hex		(x,	1);
	create_insn	(x=0X15F19);
	op_hex		(x,	1);
	create_insn	(x=0X15F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15F87);
	op_hex		(x,	1);
	create_insn	(x=0X15FA8);
	op_hex		(x,	1);
	create_insn	(x=0X15FAB);
	op_stkvar	(x,	1);
	create_insn	(0X15FD0);
	create_insn	(0X15FDB);
	set_name	(0X15FDB,	"UpdateThrottleState");
	create_insn	(0X15FE8);
	set_cmt	(0X15FEA,	"int",	0);
	create_insn	(x=0X15FEE);
	op_hex		(x,	1);
	set_cmt	(0X15FF8,	"int",	0);
	set_cmt	(0X15FFC,	"int",	0);
	set_cmt	(0X16000,	"int",	0);
	set_cmt	(0X16004,	"int",	0);
	create_insn	(x=0X16008);
	op_hex		(x,	1);
	set_cmt	(0X1600E,	"int",	0);
	create_insn	(x=0X16012);
	op_hex		(x,	1);
	set_cmt	(0X16018,	"int",	0);
	set_cmt	(0X1601C,	"int",	0);
	set_cmt	(0X1602B,	"int",	0);
	set_cmt	(0X1602F,	"int",	0);
	create_insn	(x=0X16033);
	op_hex		(x,	1);
	set_cmt	(0X16040,	"int",	0);
	create_insn	(x=0X16044);
	op_hex		(x,	1);
	set_cmt	(0X1604A,	"int",	0);
	set_cmt	(0X1604E,	"int",	0);
	set_cmt	(0X1605D,	"int",	0);
	set_cmt	(0X16061,	"int",	0);
	create_insn	(x=0X16065);
	op_hex		(x,	1);
	create_insn	(0X1606C);
	create_insn	(0X16078);
	set_cmt	(0X1607A,	"int",	0);
	create_insn	(x=0X1607E);
	op_hex		(x,	1);
	set_cmt	(0X16084,	"int",	0);
	set_cmt	(0X16088,	"int",	0);
	set_cmt	(0X1608C,	"int",	0);
	set_cmt	(0X16090,	"int",	0);
	create_insn	(x=0X16094);
	op_hex		(x,	1);
	create_insn	(0X160A4);
	set_cmt	(0X160A7,	"int",	0);
	create_insn	(x=0X160AB);
	op_hex		(x,	1);
	set_cmt	(0X160B1,	"int",	0);
	set_cmt	(0X160B5,	"int",	0);
	set_cmt	(0X160C4,	"int",	0);
	set_cmt	(0X160C8,	"int",	0);
	create_insn	(x=0X160CC);
	op_hex		(x,	1);
	create_insn	(0X160D3);
	create_insn	(x=0X160D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X160DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X160F0);
	op_hex		(x,	1);
	create_insn	(x=0X160F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X160FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16110);
	op_stkvar	(x,	0);
	create_insn	(x=0X16119);
	op_stkvar	(x,	1);
	create_insn	(x=0X1611C);
	op_stkvar	(x,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(0X1612C);
	create_insn	(x=0X16131);
	op_stkvar	(x,	0);
	create_insn	(0X16137);
	create_insn	(0X1613B);
	create_insn	(x=0X1613E);
	op_hex		(x,	1);
	create_insn	(x=0X16149);
	op_stkvar	(x,	0);
	create_insn	(0X16155);
	set_cmt	(0X16157,	"unsigned int",	0);
	create_insn	(x=0X1615B);
	op_hex		(x,	1);
	create_insn	(0X16165);
	create_insn	(x=0X16168);
	op_stkvar	(x,	1);
	create_insn	(0X16172);
	create_insn	(x=0X16175);
	op_hex		(x,	1);
	create_insn	(x=0X161AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X161B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X161BD);
	op_hex		(x,	1);
	create_insn	(x=0X161C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X161C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X161D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X161DE);
	op_hex		(x,	1);
	create_insn	(x=0X161E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X161F4);
	op_hex		(x,	1);
	create_insn	(x=0X161F8);
	op_hex		(x,	1);
	create_insn	(x=0X161FC);
	op_hex		(x,	1);
	create_insn	(x=0X16209);
	op_hex		(x,	1);
	create_insn	(x=0X16211);
	op_stkvar	(x,	1);
	create_insn	(x=0X16223);
	op_stkvar	(x,	1);
	create_insn	(x=0X16229);
	op_hex		(x,	1);
	create_insn	(x=0X16249);
	op_stkvar	(x,	1);
	create_insn	(0X1625A);
	create_insn	(x=0X16264);
	op_stkvar	(x,	0);
	create_insn	(x=0X1626A);
	op_hex		(x,	1);
	create_insn	(x=0X1626D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16274);
	op_hex		(x,	1);
	create_insn	(0X1627C);
	create_insn	(0X16297);
	create_insn	(0X162A1);
	create_insn	(0X162AB);
	create_insn	(0X162B5);
	set_cmt	(0X162CB,	"__int32",	0);
	set_cmt	(0X162D0,	"int",	0);
	set_cmt	(0X162D1,	"__int32",	0);
	create_insn	(x=0X162E5);
	op_hex		(x,	1);
	set_cmt	(0X162E9,	"int",	0);
	set_cmt	(0X162EA,	"__int32",	0);
	set_cmt	(0X162EF,	"__int32",	0);
	create_insn	(x=0X162F7);
	op_stkvar	(x,	0);
	create_insn	(0X162FC);
	create_insn	(x=0X16303);
	op_stkvar	(x,	0);
	create_insn	(x=0X1632B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16339);
	op_hex		(x,	1);
	create_insn	(0X16346);
	set_name	(0X16346,	"DisplayMessageAndWaitKey");
	create_insn	(x=0X16349);
	op_hex		(x,	1);
	set_cmt	(0X1634D,	"char *",	0);
	create_insn	(x=0X1634E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16359);
	op_stkvar	(x,	0);
	create_insn	(x=0X1635C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16360);
	op_stkvar	(x,	1);
	create_insn	(x=0X16364);
	op_stkvar	(x,	0);
	create_insn	(x=0X16375);
	op_hex		(x,	1);
	create_insn	(x=0X16378);
	op_stkvar	(x,	0);
	create_insn	(x=0X16388);
	op_stkvar	(x,	0);
	create_insn	(x=0X16390);
	op_stkvar	(x,	0);
	create_insn	(x=0X1639B);
	op_stkvar	(x,	1);
	create_insn	(x=0X163AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X163BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X163CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X163D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X163D6);
	op_hex		(x,	1);
	create_insn	(x=0X163DA);
	op_hex		(x,	1);
	create_insn	(x=0X163DE);
	op_hex		(x,	1);
	create_insn	(x=0X163E4);
	op_hex		(x,	1);
	create_insn	(x=0X163EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X163F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16411);
	op_stkvar	(x,	1);
	create_insn	(x=0X1641C);
	op_hex		(x,	1);
	create_insn	(x=0X16423);
	op_stkvar	(x,	1);
	create_insn	(x=0X16426);
	op_stkvar	(x,	0);
	create_insn	(x=0X1642E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16453);
	op_stkvar	(x,	1);
	create_insn	(x=0X1645A);
	op_hex		(x,	1);
	create_insn	(x=0X1647F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16491);
	op_stkvar	(x,	0);
	create_insn	(0X1649A);
	create_insn	(0X164A5);
	create_insn	(x=0X164A7);
	op_hex		(x,	1);
	create_insn	(x=0X164B0);
	op_stkvar	(x,	1);
	create_insn	(0X164B8);
	create_insn	(0X164C7);
	create_insn	(x=0X164CB);
	op_stkvar	(x,	1);
	create_insn	(0X164D6);
	create_insn	(x=0X164D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X164DE);
	op_stkvar	(x,	1);
	create_insn	(0X164ED);
	create_insn	(x=0X164F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X164F5);
	op_stkvar	(x,	1);
	create_insn	(0X16501);
	create_insn	(x=0X1650F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1652F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1653F);
	op_stkvar	(x,	1);
	set_cmt	(0X1654E,	"__int32",	0);
	set_cmt	(0X16553,	"int",	0);
	set_cmt	(0X16554,	"__int32",	0);
	create_insn	(x=0X1655C);
	op_hex		(x,	1);
	create_insn	(x=0X1655E);
	op_hex		(x,	1);
	set_cmt	(0X16564,	"int",	0);
	set_cmt	(0X16565,	"__int32",	0);
	set_cmt	(0X1656A,	"__int32",	0);
	create_insn	(x=0X16572);
	op_stkvar	(x,	1);
	create_insn	(x=0X16579);
	op_stkvar	(x,	1);
	create_insn	(x=0X16580);
	op_stkvar	(x,	0);
	create_insn	(x=0X16586);
	op_hex		(x,	1);
	set_cmt	(0X16590,	"char *",	0);
	create_insn	(x=0X16594);
	op_hex		(x,	1);
	create_insn	(x=0X1659A);
	op_stkvar	(x,	1);
	set_cmt	(0X165A4,	"char *",	0);
	create_insn	(x=0X165A8);
	op_hex		(x,	1);
	create_insn	(x=0X165B2);
	op_hex		(x,	1);
	create_insn	(x=0X165C0);
	op_hex		(x,	1);
	create_insn	(x=0X165C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X165D1);
	op_hex		(x,	1);
	create_insn	(x=0X165DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X165E3);
	op_hex		(x,	1);
	create_insn	(x=0X165EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X165F5);
	op_hex		(x,	1);
	create_insn	(0X1660E);
	create_insn	(x=0X16611);
	op_hex		(x,	1);
	create_insn	(x=0X16615);
	op_stkvar	(x,	0);
	create_insn	(x=0X1661B);
	op_stkvar	(x,	0);
	create_insn	(0X16628);
	create_insn	(x=0X1662B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1662E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16634);
	op_stkvar	(x,	1);
	create_insn	(x=0X16637);
	op_stkvar	(x,	0);
	create_insn	(x=0X1663B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16641);
	op_hex		(x,	1);
	create_insn	(x=0X16648);
	op_stkvar	(x,	0);
	create_insn	(x=0X1664B);
	op_stkvar	(x,	1);
	create_insn	(x=0X16651);
	op_stkvar	(x,	0);
	create_insn	(x=0X16657);
	op_hex		(x,	1);
	create_insn	(x=0X1665A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1665D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16662);
	op_hex		(x,	1);
	create_insn	(x=0X16666);
	op_hex		(x,	1);
	create_insn	(x=0X1666A);
	op_hex		(x,	1);
	create_insn	(x=0X16676);
	op_hex		(x,	1);
	create_insn	(x=0X1668F);
	op_stkvar	(x,	0);
	create_insn	(x=0X166A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X166A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X166A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X166AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X166B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X166B6);
	op_stkvar	(x,	1);
	create_insn	(0X166BE);
	create_insn	(x=0X166C1);
	op_hex		(x,	1);
	create_insn	(0X166DE);
	create_insn	(x=0X166FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X16704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1672A);
	op_hex		(x,	1);
	create_insn	(x=0X16731);
	op_stkvar	(x,	0);
	create_insn	(x=0X16737);
	op_stkvar	(x,	0);
	create_insn	(0X16742);
	create_insn	(x=0X16745);
	op_hex		(x,	1);
	create_insn	(x=0X16749);
	op_stkvar	(x,	0);
	create_insn	(x=0X1674E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16756);
	op_stkvar	(x,	1);
	create_insn	(x=0X16761);
	op_stkvar	(x,	0);
	create_insn	(x=0X1676A);
	op_hex		(x,	1);
	create_insn	(x=0X1676E);
	op_hex		(x,	1);
	create_insn	(x=0X16772);
	op_hex		(x,	1);
	create_insn	(x=0X16795);
	op_stkvar	(x,	0);
	create_insn	(x=0X16798);
	op_stkvar	(x,	0);
	create_insn	(x=0X1679E);
	op_stkvar	(x,	0);
	create_insn	(x=0X167A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X167AC);
	op_stkvar	(x,	0);
	create_insn	(0X167B4);
	create_insn	(x=0X167B7);
	op_hex		(x,	1);
	create_insn	(x=0X167BC);
	op_hex		(x,	1);
	create_insn	(x=0X167CE);
	op_hex		(x,	1);
	create_insn	(x=0X167D0);
	op_hex		(x,	1);
	create_insn	(x=0X167E1);
	op_hex		(x,	1);
	create_insn	(x=0X167E3);
	op_hex		(x,	1);
	create_insn	(x=0X167E5);
	op_hex		(x,	1);
	create_insn	(x=0X167EE);
	op_hex		(x,	1);
	create_insn	(x=0X167F2);
	op_hex		(x,	1);
	create_insn	(x=0X167F4);
	op_hex		(x,	1);
	create_insn	(x=0X16808);
	op_stkvar	(x,	0);
	create_insn	(x=0X16810);
	op_stkvar	(x,	0);
	create_insn	(x=0X16818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1681D);
	op_hex		(x,	1);
	set_cmt	(0X16835,	"int",	0);
	create_insn	(x=0X16839);
	op_stkvar	(x,	1);
	create_insn	(x=0X1683C);
	op_hex		(x,	1);
	set_cmt	(0X1684A,	"int",	0);
	create_insn	(x=0X1684E);
	op_hex		(x,	1);
	create_insn	(x=0X16855);
	op_stkvar	(x,	0);
	create_insn	(x=0X16865);
	op_stkvar	(x,	1);
	create_insn	(x=0X16868);
	op_hex		(x,	1);
	create_insn	(x=0X1687A);
	op_hex		(x,	1);
	create_insn	(x=0X16883);
	op_stkvar	(x,	0);
	create_insn	(x=0X16893);
	op_stkvar	(x,	1);
	create_insn	(x=0X16896);
	op_hex		(x,	1);
	make_array	(0X168A2,	0X2);
	create_insn	(x=0X168A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X168AF);
	op_hex		(x,	1);
	create_insn	(0X168B6);
	create_insn	(x=0X168B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X168BE);
	op_hex		(x,	1);
	create_insn	(x=0X168C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X168E1);
	op_hex		(x,	1);
	create_insn	(x=0X168E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X168E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X168EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X168F1);
	op_stkvar	(x,	0);
	create_insn	(0X168FA);
	create_insn	(x=0X16901);
	op_hex		(x,	1);
	create_insn	(x=0X16905);
	op_stkvar	(x,	0);
	create_insn	(x=0X1690E);
	op_hex		(x,	1);
	create_insn	(x=0X16919);
	op_stkvar	(x,	1);
	create_insn	(x=0X16933);
	op_hex		(x,	1);
	create_insn	(x=0X16936);
	op_stkvar	(x,	0);
	create_insn	(x=0X16939);
	op_stkvar	(x,	1);
	create_insn	(x=0X1693C);
	op_stkvar	(x,	1);
	set_cmt	(0X1693F,	"int",	0);
	create_insn	(x=0X16943);
	op_hex		(x,	1);
	create_insn	(x=0X16946);
	op_stkvar	(x,	1);
	create_insn	(x=0X1694B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1694E);
	op_stkvar	(x,	1);
	set_cmt	(0X16951,	"int",	0);
	create_insn	(x=0X16955);
	op_hex		(x,	1);
	create_insn	(x=0X16958);
	op_stkvar	(x,	0);
	create_insn	(x=0X1695E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16963);
	op_stkvar	(x,	1);
	create_insn	(x=0X16976);
	op_stkvar	(x,	1);
	create_insn	(0X1697E);
	create_insn	(x=0X16981);
	op_stkvar	(x,	1);
	create_insn	(x=0X16999);
	op_hex		(x,	1);
	create_insn	(x=0X169A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X169AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X169B3);
	op_hex		(x,	1);
	create_insn	(x=0X169C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X169CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X169D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X169DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X169F4);
	op_hex		(x,	1);
	create_insn	(x=0X169F7);
	op_stkvar	(x,	0);
	create_insn	(0X169FE);
	create_insn	(x=0X16A01);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A15);
	op_hex		(x,	1);
	create_insn	(x=0X16A21);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A24);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A31);
	op_hex		(x,	1);
	create_insn	(x=0X16A33);
	op_stkvar	(x,	0);
	set_cmt	(0X16A36,	"int",	0);
	create_insn	(x=0X16A36);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A3C);
	op_hex		(x,	1);
	create_insn	(x=0X16A45);
	op_hex		(x,	1);
	create_insn	(0X16A50);
	create_insn	(0X16A56);
	create_insn	(x=0X16A59);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A73);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A81);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A88);
	op_hex		(x,	1);
	create_insn	(x=0X16A8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A91);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A96);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AA4);
	op_hex		(x,	1);
	create_insn	(x=0X16AAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X16ABB);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ACD);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X16ADD);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AE3);
	op_hex		(x,	1);
	create_insn	(x=0X16AE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AF2);
	op_hex		(x,	1);
	create_insn	(x=0X16AF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X16AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B01);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B10);
	op_hex		(x,	1);
	create_insn	(x=0X16B13);
	op_stkvar	(x,	0);
	create_insn	(x=0X16B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16B24);
	op_hex		(x,	1);
	create_insn	(x=0X16B27);
	op_stkvar	(x,	0);
	create_insn	(x=0X16B2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X16B33);
	op_stkvar	(x,	0);
	create_insn	(0X16B3D);
	create_insn	(x=0X16B41);
	op_stkvar	(x,	0);
	create_insn	(x=0X16B4B);
	op_hex		(x,	1);
	create_insn	(0X16B55);
	create_insn	(x=0X16B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B61);
	op_stkvar	(x,	1);
	set_cmt	(0X16B64,	"int",	0);
	create_insn	(x=0X16B68);
	op_hex		(x,	1);
	create_insn	(0X16B73);
	create_insn	(x=0X16B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B7F);
	op_stkvar	(x,	1);
	set_cmt	(0X16B82,	"int",	0);
	create_insn	(x=0X16B86);
	op_hex		(x,	1);
	create_insn	(0X16B91);
	create_insn	(x=0X16B94);
	op_hex		(x,	1);
	create_insn	(x=0X16B96);
	op_hex		(x,	1);
	create_insn	(x=0X16B98);
	op_hex		(x,	1);
	create_insn	(x=0X16B9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16BAC);
	op_stkvar	(x,	0);
	set_cmt	(0X16BAF,	"int",	0);
	create_insn	(x=0X16BB3);
	op_stkvar	(x,	1);
	set_cmt	(0X16BBE,	"int",	0);
	create_insn	(x=0X16BC2);
	op_hex		(x,	1);
	create_insn	(x=0X16BC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BCE);
	op_hex		(x,	1);
	create_insn	(x=0X16BD2);
	op_hex		(x,	1);
	create_insn	(x=0X16BD4);
	op_hex		(x,	1);
	create_insn	(x=0X16BDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X16BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BEC);
	op_hex		(x,	1);
	create_insn	(x=0X16BEF);
	op_stkvar	(x,	0);
	set_cmt	(0X16BF2,	"int",	0);
	create_insn	(x=0X16BF6);
	op_stkvar	(x,	1);
	set_cmt	(0X16BFB,	"int",	0);
	create_insn	(x=0X16C02);
	op_hex		(x,	1);
	create_insn	(x=0X16C05);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C0A);
	op_hex		(x,	1);
	create_insn	(x=0X16C0E);
	op_hex		(x,	1);
	create_insn	(x=0X16C10);
	op_hex		(x,	1);
	create_insn	(x=0X16C16);
	op_stkvar	(x,	0);
	create_insn	(x=0X16C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C28);
	op_hex		(x,	1);
	create_insn	(x=0X16C2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C32);
	op_hex		(x,	1);
	create_insn	(x=0X16C36);
	op_hex		(x,	1);
	create_insn	(x=0X16C38);
	op_hex		(x,	1);
	create_insn	(x=0X16C41);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C4B);
	op_hex		(x,	1);
	create_insn	(x=0X16C4F);
	op_hex		(x,	1);
	create_insn	(x=0X16C51);
	op_hex		(x,	1);
	create_insn	(x=0X16C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C77);
	op_hex		(x,	1);
	create_insn	(x=0X16C82);
	op_hex		(x,	1);
	create_insn	(x=0X16C85);
	op_stkvar	(x,	0);
	create_insn	(x=0X16C88);
	op_stkvar	(x,	0);
	create_insn	(x=0X16C8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16C96);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C9F);
	op_stkvar	(x,	0);
	set_cmt	(0X16CA2,	"int",	0);
	create_insn	(x=0X16CA9);
	op_hex		(x,	1);
	create_insn	(x=0X16CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CBD);
	op_hex		(x,	1);
	create_insn	(x=0X16CBF);
	op_hex		(x,	1);
	create_insn	(x=0X16CC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X16CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CCE);
	op_hex		(x,	1);
	create_insn	(x=0X16CD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X16CD7);
	op_stkvar	(x,	0);
	set_cmt	(0X16CDA,	"int",	0);
	create_insn	(x=0X16CE1);
	op_hex		(x,	1);
	create_insn	(x=0X16CEC);
	op_hex		(x,	1);
	create_insn	(x=0X16CEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X16CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D07);
	op_hex		(x,	1);
	create_insn	(x=0X16D0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D20);
	op_hex		(x,	1);
	create_insn	(x=0X16D28);
	op_hex		(x,	1);
	create_insn	(x=0X16D2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D38);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D44);
	op_hex		(x,	1);
	create_insn	(x=0X16D4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D51);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D61);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D64);
	op_hex		(x,	1);
	create_insn	(x=0X16D6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D7A);
	op_hex		(x,	1);
	create_insn	(x=0X16D86);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D89);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D93);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X16DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X16DBD,	"int",	0);
	create_insn	(x=0X16DC4);
	op_hex		(x,	1);
	create_insn	(x=0X16DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X16DD1);
	op_stkvar	(x,	0);
	create_insn	(0X16DD6);
	create_insn	(x=0X16DE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DF1);
	op_hex		(x,	1);
	create_insn	(x=0X16DF4);
	op_hex		(x,	1);
	create_insn	(x=0X16DF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X16DF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E09);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E1C);
	op_hex		(x,	1);
	create_insn	(x=0X16E2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E51);
	op_hex		(x,	1);
	create_insn	(x=0X16E54);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E86);
	op_hex		(x,	1);
	create_insn	(x=0X16E89);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E94);
	op_hex		(x,	1);
	create_insn	(0X16EAC);
	create_insn	(x=0X16EAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X16EC1);
	op_stkvar	(x,	1);
	create_insn	(0X16EE8);
	create_insn	(x=0X16EEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EF8);
	op_hex		(x,	1);
	create_insn	(x=0X16F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F05);
	op_hex		(x,	1);
	create_insn	(x=0X16F0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16F11);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F14);
	op_hex		(x,	1);
	create_insn	(x=0X16F1A);
	op_hex		(x,	1);
	create_insn	(x=0X16F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F38);
	op_hex		(x,	1);
	create_insn	(x=0X16F45);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F4A);
	op_hex		(x,	1);
	create_insn	(0X16F52);
	create_insn	(x=0X16F55);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F5A);
	op_hex		(x,	1);
	create_insn	(x=0X16F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F67);
	op_hex		(x,	1);
	create_insn	(x=0X16F6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16F7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X16F83);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X16FBC);
	op_hex		(x,	1);
	create_insn	(x=0X16FC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X16FC8);
	op_hex		(x,	1);
	create_insn	(x=0X16FD2);
	op_hex		(x,	1);
	create_insn	(x=0X16FD4);
	op_hex		(x,	1);
	create_insn	(x=0X16FD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X16FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1700C);
	op_hex		(x,	1);
	create_insn	(x=0X17017);
	op_stkvar	(x,	1);
	create_insn	(x=0X17020);
	op_stkvar	(x,	1);
	set_cmt	(0X1702F,	"int",	0);
	set_cmt	(0X17030,	"int",	0);
	create_insn	(x=0X17037);
	op_hex		(x,	1);
	create_insn	(x=0X17048);
	op_stkvar	(x,	1);
	create_insn	(x=0X1704D);
	op_hex		(x,	1);
	create_insn	(x=0X17055);
	op_stkvar	(x,	0);
	create_insn	(x=0X17062);
	op_stkvar	(x,	0);
	create_insn	(x=0X17068);
	op_hex		(x,	1);
	create_insn	(x=0X1706B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17071);
	op_stkvar	(x,	1);
	create_insn	(x=0X1707A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1707D);
	op_hex		(x,	1);
	create_insn	(x=0X1707F);
	op_hex		(x,	1);
	set_cmt	(0X1708A,	"int",	0);
	create_insn	(x=0X1708F);
	op_hex		(x,	1);
	create_insn	(x=0X1709A);
	op_stkvar	(x,	1);
	create_insn	(x=0X170B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X170BC);
	op_hex		(x,	1);
	set_cmt	(0X170C6,	"int",	0);
	set_cmt	(0X170C7,	"__int32",	0);
	create_insn	(x=0X170CF);
	op_hex		(x,	1);
	set_cmt	(0X170D8,	"int",	0);
	set_cmt	(0X170D9,	"__int32",	0);
	create_insn	(x=0X170DF);
	op_hex		(x,	1);
	create_insn	(x=0X170E1);
	op_hex		(x,	1);
	create_insn	(x=0X170E7);
	op_stkvar	(x,	0);
	set_cmt	(0X170EA,	"int",	0);
	set_cmt	(0X170EB,	"int",	0);
	create_insn	(x=0X170F2);
	op_hex		(x,	1);
	set_cmt	(0X170F5,	"int",	0);
	create_insn	(x=0X170F9);
	op_hex		(x,	1);
	create_insn	(x=0X170FC);
	op_hex		(x,	1);
	create_insn	(x=0X170FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17101);
	op_stkvar	(x,	1);
	create_insn	(x=0X17104);
	op_hex		(x,	1);
	create_insn	(x=0X17106);
	op_hex		(x,	1);
	create_insn	(x=0X1710F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17114);
	op_stkvar	(x,	0);
	create_insn	(x=0X17117);
	op_stkvar	(x,	0);
	create_insn	(x=0X1711D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17129);
	op_hex		(x,	1);
	create_insn	(x=0X1712C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17132);
	op_stkvar	(x,	1);
	set_cmt	(0X17137,	"int",	0);
	create_insn	(x=0X17137);
	op_stkvar	(x,	0);
	set_cmt	(0X1713A,	"int",	0);
	create_insn	(x=0X17141);
	op_hex		(x,	1);
	create_insn	(x=0X17150);
	op_stkvar	(x,	1);
	create_insn	(x=0X17155);
	op_stkvar	(x,	0);
	create_insn	(x=0X1715F);
	op_hex		(x,	1);
	create_insn	(x=0X1716E);
	op_stkvar	(x,	1);
	set_cmt	(0X17173,	"int",	0);
	create_insn	(x=0X17173);
	op_stkvar	(x,	0);
	set_cmt	(0X17176,	"int",	0);
	create_insn	(x=0X1717D);
	op_hex		(x,	1);
	create_insn	(x=0X17187);
	op_stkvar	(x,	1);
	create_insn	(x=0X17196);
	op_hex		(x,	1);
	create_insn	(x=0X17198);
	op_hex		(x,	1);
	create_insn	(x=0X171AC);
	op_hex		(x,	1);
	create_insn	(x=0X171AE);
	op_hex		(x,	1);
	create_insn	(x=0X171C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X171D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X171DD);
	op_stkvar	(x,	0);
	create_insn	(0X171E8);
	create_insn	(x=0X1720C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17217);
	op_stkvar	(x,	0);
	create_insn	(x=0X1721D);
	op_stkvar	(x,	0);
	create_insn	(x=0X17226);
	op_stkvar	(x,	1);
	create_insn	(x=0X1722F);
	op_hex		(x,	1);
	create_insn	(x=0X17235);
	op_hex		(x,	1);
	create_insn	(0X1723C);
	create_insn	(x=0X1723F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17244);
	op_hex		(x,	1);
	create_insn	(x=0X1724C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17251);
	op_hex		(x,	1);
	create_insn	(0X1725C);
	create_insn	(x=0X1727C);
	op_hex		(x,	1);
	create_insn	(0X1728A);
	create_insn	(0X172A8);
	create_insn	(x=0X172AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X172B4);
	op_hex		(x,	1);
	create_insn	(x=0X172B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X172CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X172D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X172E3);
	op_hex		(x,	1);
	create_insn	(x=0X172E9);
	op_hex		(x,	1);
	create_insn	(x=0X172F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X172FD);
	op_hex		(x,	1);
	create_insn	(x=0X17302);
	op_stkvar	(x,	0);
	create_insn	(x=0X17307);
	op_stkvar	(x,	0);
	create_insn	(x=0X1730E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17319);
	op_hex		(x,	1);
	create_insn	(x=0X17324);
	op_stkvar	(x,	1);
	create_insn	(x=0X1733E);
	op_hex		(x,	1);
	create_insn	(x=0X17341);
	op_stkvar	(x,	0);
	create_insn	(x=0X17344);
	op_stkvar	(x,	1);
	create_insn	(x=0X17347);
	op_stkvar	(x,	0);
	create_insn	(x=0X1734F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17354);
	op_stkvar	(x,	1);
	create_insn	(x=0X1735B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1735E);
	op_stkvar	(x,	0);
	create_insn	(x=0X17361);
	op_stkvar	(x,	0);
	create_insn	(x=0X17367);
	op_stkvar	(x,	0);
	create_insn	(x=0X1736F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1737F);
	op_hex		(x,	1);
	create_insn	(x=0X17389);
	op_stkvar	(x,	1);
	create_insn	(x=0X17392);
	op_stkvar	(x,	0);
	create_insn	(x=0X17395);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1739E);
	op_stkvar	(x,	1);
	create_insn	(x=0X173A3);
	op_hex		(x,	1);
	create_insn	(x=0X173AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X173AD);
	op_hex		(x,	1);
	create_insn	(x=0X173B0);
	op_hex		(x,	1);
	create_insn	(x=0X173B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X173C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X173D5);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X173DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X173E4);
	op_hex		(x,	1);
	create_insn	(x=0X173EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X173ED);
	op_hex		(x,	1);
	create_insn	(x=0X173F7);
	op_hex		(x,	1);
	create_insn	(0X17401);
	create_insn	(x=0X17407);
	op_stkvar	(x,	0);
	create_insn	(x=0X1740F);
	op_stkvar	(x,	0);
	create_insn	(0X17418);
	create_insn	(0X17434);
	create_insn	(x=0X1743B);
	op_hex		(x,	1);
	create_insn	(x=0X1743E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1744B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17450);
	op_hex		(x,	1);
	create_insn	(x=0X1745A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17465);
	op_hex		(x,	1);
	create_insn	(x=0X17470);
	op_stkvar	(x,	1);
	create_insn	(x=0X17482);
	op_hex		(x,	1);
	create_insn	(x=0X17491);
	op_stkvar	(x,	0);
	create_insn	(x=0X1749B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1749F);
	op_stkvar	(x,	0);
	create_insn	(x=0X174A5);
	op_hex		(x,	1);
	create_insn	(x=0X174AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X174BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X174C1);
	op_hex		(x,	1);
	create_insn	(x=0X174C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X174CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X174D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X174D7);
	op_hex		(x,	1);
	create_insn	(x=0X174DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X174E8);
	op_hex		(x,	1);
	create_insn	(x=0X174EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X174F1);
	op_stkvar	(x,	0);
	create_insn	(0X174F9);
	create_insn	(x=0X174FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17501);
	op_hex		(x,	1);
	create_insn	(x=0X1750F);
	op_hex		(x,	1);
	create_insn	(0X17519);
	create_insn	(x=0X17523);
	op_stkvar	(x,	0);
	create_insn	(x=0X17528);
	op_hex		(x,	1);
	create_insn	(0X17532);
	create_insn	(x=0X1753C);
	op_hex		(x,	1);
	create_insn	(0X17550);
	create_insn	(x=0X17553);
	op_stkvar	(x,	0);
	create_insn	(x=0X17559);
	op_stkvar	(x,	0);
	create_insn	(x=0X1755F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17562);
	op_stkvar	(x,	0);
	create_insn	(0X17571);
	create_insn	(x=0X17574);
	op_stkvar	(x,	0);
	create_insn	(x=0X1757A);
	op_stkvar	(x,	0);
	create_byte	(0X1758C);
	make_array	(0X1758C,	0X2);
	create_insn	(0X1758E);
	create_insn	(0X17594);
	create_insn	(x=0X17597);
	op_hex		(x,	1);
	set_cmt	(0X1759B,	"char *",	0);
	create_insn	(x=0X175A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X175AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X175B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X175B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X175BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X175CD);
	op_hex		(x,	1);
	create_insn	(x=0X175D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X175D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X175DC);
	op_stkvar	(x,	0);
	create_insn	(0X175E4);
	create_insn	(x=0X175E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X175FE);
	op_stkvar	(x,	1);
	create_insn	(0X1761A);
	create_insn	(x=0X1761E);
	op_hex		(x,	1);
	create_insn	(x=0X17626);
	op_stkvar	(x,	1);
	create_insn	(x=0X17631);
	op_stkvar	(x,	0);
	create_insn	(x=0X17637);
	op_hex		(x,	1);
	create_insn	(0X17642);
	create_insn	(x=0X17653);
	op_stkvar	(x,	0);
	create_insn	(0X1765C);
	create_insn	(x=0X1765F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17664);
	op_stkvar	(x,	1);
	set_cmt	(0X1766B,	"int",	0);
	create_insn	(x=0X1766F);
	op_hex		(x,	1);
	create_insn	(0X1767A);
	create_insn	(x=0X1767D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17686);
	op_stkvar	(x,	0);
	create_insn	(x=0X1768C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17691);
	op_stkvar	(x,	1);
	create_insn	(x=0X17694);
	op_hex		(x,	1);
	create_insn	(0X1769F);
	create_insn	(x=0X176A4);
	op_hex		(x,	1);
	create_insn	(x=0X176AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X176B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X176BF);
	op_stkvar	(x,	0);
	create_insn	(0X176C8);
	create_insn	(x=0X176CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X176E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X176EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X176FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X17701);
	op_stkvar	(x,	0);
	set_cmt	(0X17733,	"__int32",	0);
	set_cmt	(0X17738,	"int",	0);
	set_cmt	(0X17739,	"__int32",	0);
	create_insn	(x=0X1773A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17744);
	op_hex		(x,	1);
	create_insn	(x=0X17746);
	op_hex		(x,	1);
	set_cmt	(0X1774C,	"int",	0);
	set_cmt	(0X1774D,	"__int32",	0);
	set_cmt	(0X17752,	"__int32",	0);
	create_insn	(x=0X1775A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17764);
	op_stkvar	(x,	1);
	create_insn	(x=0X17769);
	op_stkvar	(x,	1);
	create_insn	(x=0X17775);
	op_stkvar	(x,	1);
	set_cmt	(0X1777F,	"char *",	0);
	create_insn	(x=0X17783);
	op_hex		(x,	1);
	set_cmt	(0X1778D,	"char *",	0);
	create_insn	(x=0X17791);
	op_hex		(x,	1);
	set_cmt	(0X177A2,	"char *",	0);
	create_insn	(x=0X177A6);
	op_hex		(x,	1);
	create_insn	(x=0X177B0);
	op_hex		(x,	1);
	create_insn	(x=0X177BE);
	op_hex		(x,	1);
	create_insn	(x=0X177CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X177D7);
	op_hex		(x,	1);
	create_insn	(x=0X177E1);
	op_hex		(x,	1);
	create_insn	(x=0X177EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X177F0);
	op_hex		(x,	1);
	create_insn	(x=0X177F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X177FD);
	op_hex		(x,	1);
	create_insn	(0X17804);
	create_insn	(x=0X17807);
	op_stkvar	(x,	1);
	create_insn	(x=0X1780C);
	op_hex		(x,	1);
	create_insn	(x=0X17819);
	op_stkvar	(x,	1);
	create_insn	(x=0X1782E);
	op_hex		(x,	1);
	create_insn	(0X1783A);
	create_insn	(x=0X1783D);
	op_hex		(x,	1);
	set_cmt	(0X17841,	"char *",	0);
	create_insn	(x=0X17845);
	op_stkvar	(x,	1);
	create_insn	(x=0X1784E);
	op_stkvar	(x,	0);
	create_insn	(0X1785C);
	create_insn	(x=0X17863);
	op_stkvar	(x,	1);
	create_insn	(x=0X1786A);
	op_hex		(x,	1);
	create_insn	(x=0X17877);
	op_hex		(x,	1);
	create_insn	(x=0X1788D);
	op_hex		(x,	1);
	create_insn	(x=0X17891);
	op_hex		(x,	1);
	create_insn	(x=0X17893);
	op_hex		(x,	1);
	create_insn	(0X178AE);
	create_insn	(x=0X178B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X178B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X178E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X178F0);
	op_hex		(x,	1);
	create_insn	(x=0X178F2);
	op_hex		(x,	1);
	create_insn	(x=0X17908);
	op_hex		(x,	1);
	create_insn	(x=0X1790A);
	op_hex		(x,	1);
	create_insn	(x=0X17924);
	op_hex		(x,	1);
	create_insn	(x=0X1792A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17931);
	op_stkvar	(x,	1);
	set_cmt	(0X1793E,	"__int32",	0);
	set_cmt	(0X17943,	"int",	0);
	set_cmt	(0X17944,	"__int32",	0);
	create_insn	(x=0X1794C);
	op_hex		(x,	1);
	create_insn	(x=0X1794E);
	op_hex		(x,	1);
	set_cmt	(0X17954,	"int",	0);
	set_cmt	(0X17955,	"__int32",	0);
	set_cmt	(0X1795A,	"__int32",	0);
	create_insn	(x=0X17962);
	op_stkvar	(x,	1);
	create_insn	(x=0X17974);
	op_hex		(x,	1);
	create_insn	(x=0X17985);
	op_stkvar	(x,	1);
	create_insn	(x=0X1798A);
	op_hex		(x,	1);
	create_insn	(x=0X1798F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17995);
	op_hex		(x,	1);
	set_cmt	(0X1799F,	"char *",	0);
	create_insn	(x=0X179A3);
	op_hex		(x,	1);
	create_insn	(x=0X179A9);
	op_stkvar	(x,	1);
	set_cmt	(0X179BD,	"char *",	0);
	create_insn	(x=0X179C1);
	op_hex		(x,	1);
	set_cmt	(0X179CB,	"char *",	0);
	create_insn	(x=0X179CF);
	op_hex		(x,	1);
	create_insn	(x=0X179D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X179E4);
	op_hex		(x,	1);
	create_insn	(0X179EE);
	create_insn	(x=0X179F1);
	op_hex		(x,	1);
	create_insn	(x=0X17A00);
	op_hex		(x,	1);
	create_insn	(x=0X17A0E);
	op_hex		(x,	1);
	create_insn	(x=0X17A1B);
	op_stkvar	(x,	0);
	create_insn	(0X17A24);
	create_insn	(x=0X17A27);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A30);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A38);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A46);
	op_stkvar	(x,	0);
	create_insn	(0X17A4E);
	create_insn	(x=0X17A51);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A56);
	op_hex		(x,	1);
	create_insn	(x=0X17A64);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A73);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A79);
	op_hex		(x,	1);
	create_insn	(x=0X17A7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A82);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A87);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A90);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A96);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A99);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X17AAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17AB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X17ABA);
	op_hex		(x,	1);
	create_insn	(x=0X17AC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ACD);
	op_hex		(x,	1);
	create_insn	(x=0X17AD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X17AD6);
	op_stkvar	(x,	0);
	create_insn	(0X17ADE);
	create_insn	(x=0X17AE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AFC);
	op_hex		(x,	1);
	create_insn	(x=0X17B0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B14);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B20);
	op_stkvar	(x,	0);
	create_insn	(0X17B29);
	create_insn	(x=0X17B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B42);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B48);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B50);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B56);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B64);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B77);
	op_hex		(x,	1);
	create_insn	(x=0X17B7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X17B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B8B);
	op_hex		(x,	1);
	create_insn	(x=0X17B92);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B99);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BAD);
	op_hex		(x,	1);
	create_insn	(x=0X17BB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BD8);
	op_stkvar	(x,	0);
	create_insn	(0X17BE0);
	create_insn	(x=0X17BE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C03);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C09);
	op_hex		(x,	1);
	create_insn	(x=0X17C0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C16);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C22);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C25);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C44);
	op_hex		(x,	1);
	create_insn	(x=0X17C47);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C50);
	op_stkvar	(x,	0);
	create_insn	(0X17C59);
	create_insn	(x=0X17C5C);
	op_stkvar	(x,	1);
	set_cmt	(0X17C68,	"int",	0);
	create_insn	(x=0X17C6C);
	op_hex		(x,	1);
	create_insn	(x=0X17C7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C81);
	op_hex		(x,	1);
	create_insn	(x=0X17C93);
	op_hex		(x,	1);
	create_insn	(x=0X17C96);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C9C);
	op_hex		(x,	1);
	create_insn	(x=0X17CAD);
	op_hex		(x,	1);
	create_insn	(x=0X17CB0);
	op_hex		(x,	1);
	create_insn	(x=0X17CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CD7);
	op_hex		(x,	1);
	create_insn	(x=0X17CDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17CE4);
	op_hex		(x,	1);
	create_insn	(x=0X17CE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X17CF0);
	op_stkvar	(x,	0);
	create_insn	(0X17CF9);
	create_insn	(x=0X17CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D01);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D08);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D26);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D2C);
	op_hex		(x,	1);
	create_insn	(x=0X17D2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D35);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D48);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D4E);
	op_hex		(x,	1);
	create_insn	(x=0X17D51);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D57);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D5F);
	op_hex		(x,	1);
	create_insn	(x=0X17D61);
	op_hex		(x,	1);
	create_insn	(x=0X17D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D71);
	op_hex		(x,	1);
	create_insn	(x=0X17D77);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D7D);
	op_stkvar	(x,	0);
	set_cmt	(0X17D84,	"int",	0);
	create_insn	(x=0X17D84);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D8A);
	op_hex		(x,	1);
	create_insn	(x=0X17D91);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D96);
	op_stkvar	(x,	1);
	set_cmt	(0X17DA4,	"int",	0);
	create_insn	(x=0X17DA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X17DAA);
	op_hex		(x,	1);
	set_cmt	(0X17DAE,	"int",	0);
	create_insn	(x=0X17DAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17DB4);
	op_hex		(x,	1);
	set_cmt	(0X17DBC,	"int",	0);
	create_insn	(x=0X17DBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X17DC2);
	op_hex		(x,	1);
	create_insn	(0X17DCC);
	create_insn	(x=0X17DD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DEB);
	op_hex		(x,	1);
	create_insn	(x=0X17DEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E00);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E25);
	op_hex		(x,	1);
	create_insn	(x=0X17E28);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E33);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E36);
	op_hex		(x,	1);
	create_insn	(x=0X17E38);
	op_hex		(x,	1);
	create_insn	(0X17E48);
	create_insn	(x=0X17E4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E59);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E64);
	op_hex		(x,	1);
	create_insn	(x=0X17E74);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E90);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E99);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EDC);
	op_hex		(x,	1);
	create_insn	(x=0X17EEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EED);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EFF);
	op_stkvar	(x,	1);
	create_insn	(0X17F0E);
	create_insn	(x=0X17F11);
	op_stkvar	(x,	1);
	set_cmt	(0X17F23,	"int",	0);
	set_cmt	(0X17F24,	"int",	0);
	create_insn	(x=0X17F2B);
	op_hex		(x,	1);
	create_insn	(x=0X17F35);
	op_stkvar	(x,	1);
	set_cmt	(0X17F3A,	"int",	0);
	create_insn	(x=0X17F3A);
	op_stkvar	(x,	0);
	set_cmt	(0X17F3D,	"int",	0);
	create_insn	(x=0X17F44);
	op_hex		(x,	1);
	create_insn	(x=0X17F4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F53);
	op_stkvar	(x,	0);
	create_insn	(x=0X17F5D);
	op_hex		(x,	1);
	create_insn	(x=0X17F67);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F70);
	op_stkvar	(x,	0);
	create_insn	(x=0X17F76);
	op_stkvar	(x,	0);
	create_insn	(x=0X17F7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F84);
	op_hex		(x,	1);
	create_insn	(0X17F8C);
	create_insn	(x=0X17F8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F94);
	op_hex		(x,	1);
	create_insn	(x=0X17F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FA1);
	op_hex		(x,	1);
	create_insn	(x=0X17FA7);
	op_hex		(x,	1);
	create_insn	(x=0X17FB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FC5);
	op_hex		(x,	1);
	create_insn	(x=0X17FCB);
	op_stkvar	(x,	1);
	create_insn	(0X17FE1);
	create_insn	(x=0X17FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18014);
	op_stkvar	(x,	1);
	set_cmt	(0X18027,	"char *",	0);
	create_insn	(x=0X1802B);
	op_hex		(x,	1);
	create_insn	(x=0X1802E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18034);
	op_stkvar	(x,	0);
	create_insn	(x=0X1803A);
	op_stkvar	(x,	0);
	create_insn	(0X18043);
	create_insn	(x=0X1804D);
	op_hex		(x,	1);
	create_insn	(x=0X18058);
	op_hex		(x,	1);
	set_cmt	(0X18062,	"char *",	0);
	create_insn	(x=0X18066);
	op_hex		(x,	1);
	create_insn	(x=0X18084);
	op_hex		(x,	1);
	create_insn	(x=0X18087);
	op_stkvar	(x,	0);
	create_insn	(x=0X18095);
	op_stkvar	(x,	1);
	create_insn	(x=0X180A1);
	op_hex		(x,	1);
	create_insn	(0X180AA);
	create_insn	(x=0X180B5);
	op_hex		(x,	1);
	create_insn	(x=0X180B8);
	op_stkvar	(x,	0);
	create_insn	(0X180C3);
	create_insn	(x=0X180C9);
	op_hex		(x,	1);
	create_insn	(0X180D3);
	create_insn	(x=0X180DF);
	op_hex		(x,	1);
	create_insn	(x=0X180E1);
	op_hex		(x,	1);
	create_insn	(x=0X180E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X180F6);
	op_hex		(x,	1);
	create_insn	(x=0X180F8);
	op_hex		(x,	1);
	create_insn	(x=0X18103);
	op_stkvar	(x,	0);
	create_insn	(x=0X18109);
	op_stkvar	(x,	1);
	create_insn	(x=0X18110);
	op_stkvar	(x,	1);
	create_insn	(x=0X18117);
	op_hex		(x,	1);
	create_insn	(x=0X1811A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1812A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1812F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18135);
	op_hex		(x,	1);
	set_cmt	(0X1813F,	"char *",	0);
	create_insn	(x=0X18143);
	op_hex		(x,	1);
	create_insn	(x=0X18149);
	op_stkvar	(x,	1);
	set_cmt	(0X1815C,	"char *",	0);
	create_insn	(x=0X18160);
	op_hex		(x,	1);
	create_insn	(x=0X18172);
	op_stkvar	(x,	0);
	create_insn	(x=0X1817B);
	op_stkvar	(x,	1);
	create_insn	(x=0X18183);
	op_hex		(x,	1);
	set_cmt	(0X18192,	"char *",	0);
	create_insn	(x=0X18196);
	op_hex		(x,	1);
	create_insn	(x=0X181A0);
	op_hex		(x,	1);
	set_name	(0X181A3,	"InitAIPlanes");
	create_insn	(x=0X181A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X181AB);
	op_stkvar	(x,	1);
	set_cmt	(0X181B2,	"int",	0);
	create_insn	(x=0X181B6);
	op_hex		(x,	1);
	create_insn	(x=0X181BD);
	op_stkvar	(x,	1);
	set_name	(0X181CC,	"UpdatePlayerFlightModel");
	create_insn	(x=0X181DC);
	op_stkvar	(x,	0);
	create_insn	(0X181E5);
	create_insn	(x=0X181E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X181F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X18221);
	op_stkvar	(x,	1);
	create_insn	(x=0X1822C);
	op_stkvar	(x,	0);
	create_insn	(0X1823C);
	set_cmt	(0X18243,	"char *",	0);
	create_insn	(x=0X18247);
	op_hex		(x,	1);
	create_insn	(x=0X1824D);
	op_stkvar	(x,	1);
	set_cmt	(0X18257,	"char *",	0);
	create_insn	(x=0X1825B);
	op_hex		(x,	1);
	create_insn	(x=0X18265);
	op_hex		(x,	1);
	create_insn	(x=0X1826E);
	op_hex		(x,	1);
	create_insn	(x=0X18270);
	op_hex		(x,	1);
	create_insn	(x=0X18273);
	op_stkvar	(x,	0);
	create_insn	(x=0X18291);
	op_hex		(x,	1);
	create_insn	(x=0X1829C);
	op_stkvar	(x,	0);
	create_insn	(x=0X182A6);
	op_hex		(x,	1);
	create_insn	(x=0X182AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X182B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X182B8);
	op_hex		(x,	1);
	create_insn	(x=0X182BE);
	op_hex		(x,	1);
	create_insn	(x=0X182C0);
	op_hex		(x,	1);
	create_insn	(x=0X182C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X182C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X182CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X182EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X182FA);
	op_stkvar	(x,	1);
	create_insn	(0X18306);
	create_insn	(x=0X1830D);
	op_hex		(x,	1);
	create_insn	(x=0X18310);
	op_stkvar	(x,	0);
	create_insn	(x=0X18318);
	op_stkvar	(x,	1);
	create_insn	(x=0X18326);
	op_hex		(x,	1);
	create_insn	(x=0X18332);
	op_hex		(x,	1);
	create_insn	(x=0X18334);
	op_hex		(x,	1);
	create_insn	(x=0X18338);
	op_hex		(x,	1);
	create_insn	(x=0X18340);
	op_stkvar	(x,	0);
	create_insn	(x=0X18346);
	op_hex		(x,	1);
	create_insn	(0X1834C);
	set_cmt	(0X18353,	"char *",	0);
	create_insn	(x=0X18357);
	op_hex		(x,	1);
	create_insn	(x=0X1835D);
	op_stkvar	(x,	1);
	set_cmt	(0X18387,	"char *",	0);
	create_insn	(x=0X1838B);
	op_hex		(x,	1);
	create_insn	(x=0X18391);
	op_stkvar	(x,	1);
	set_cmt	(0X1839B,	"char *",	0);
	create_insn	(x=0X1839F);
	op_hex		(x,	1);
	create_insn	(x=0X183A9);
	op_hex		(x,	1);
	create_insn	(x=0X183AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X183B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X183CC);
	op_hex		(x,	1);
	create_insn	(x=0X183D3);
	op_hex		(x,	1);
	create_insn	(x=0X183DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X183F1);
	op_hex		(x,	1);
	create_insn	(x=0X183F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X183F7);
	op_stkvar	(x,	0);
	create_insn	(0X18400);
	create_insn	(x=0X18403);
	op_stkvar	(x,	1);
	create_insn	(x=0X18413);
	op_stkvar	(x,	0);
	create_insn	(x=0X18416);
	op_stkvar	(x,	0);
	create_insn	(x=0X1841B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18423);
	op_stkvar	(x,	1);
	create_insn	(x=0X1842C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1842F);
	op_stkvar	(x,	0);
	create_insn	(0X18438);
	create_insn	(x=0X1843B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1844F);
	op_hex		(x,	1);
	create_insn	(x=0X18455);
	op_stkvar	(x,	0);
	create_insn	(x=0X18458);
	op_stkvar	(x,	0);
	create_insn	(x=0X1845C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1845F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18462);
	op_stkvar	(x,	0);
	create_insn	(x=0X18468);
	op_hex		(x,	1);
	create_insn	(x=0X1846B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18471);
	op_stkvar	(x,	0);
	create_insn	(x=0X18477);
	op_stkvar	(x,	0);
	create_insn	(x=0X1847A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1847F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18484);
	op_hex		(x,	1);
	create_insn	(x=0X18488);
	op_hex		(x,	1);
	create_insn	(x=0X1848A);
	op_hex		(x,	1);
	create_insn	(x=0X18493);
	op_stkvar	(x,	0);
	create_insn	(x=0X18499);
	op_stkvar	(x,	1);
	create_insn	(x=0X1849E);
	op_hex		(x,	1);
	create_insn	(x=0X184A2);
	op_hex		(x,	1);
	create_insn	(x=0X184A4);
	op_hex		(x,	1);
	create_insn	(x=0X184AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X184B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X184B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X184BF);
	op_stkvar	(x,	1);
	set_cmt	(0X184CA,	"int",	0);
	create_insn	(x=0X184CE);
	op_hex		(x,	1);
	set_cmt	(0X184D4,	"int",	0);
	create_insn	(x=0X184D8);
	op_hex		(x,	1);
	create_insn	(x=0X184E1);
	op_hex		(x,	1);
	create_insn	(x=0X184E5);
	op_hex		(x,	1);
	create_insn	(x=0X184E7);
	op_hex		(x,	1);
	create_insn	(x=0X184F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X184F7);
	op_hex		(x,	1);
	create_insn	(x=0X184FB);
	op_hex		(x,	1);
	create_insn	(x=0X184FD);
	op_hex		(x,	1);
	create_insn	(x=0X18501);
	op_stkvar	(x,	0);
	create_insn	(x=0X18510);
	op_stkvar	(x,	0);
	create_insn	(x=0X18516);
	op_hex		(x,	1);
	create_insn	(x=0X18519);
	op_stkvar	(x,	0);
	create_insn	(x=0X18520);
	op_stkvar	(x,	0);
	create_insn	(x=0X18523);
	op_stkvar	(x,	0);
	create_insn	(x=0X18528);
	op_stkvar	(x,	0);
	create_insn	(x=0X1852B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18534);
	op_stkvar	(x,	0);
	create_insn	(x=0X1853E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18552);
	op_hex		(x,	1);
	create_insn	(x=0X18559);
	op_stkvar	(x,	0);
	create_insn	(x=0X18561);
	op_stkvar	(x,	1);
	create_insn	(x=0X18579);
	op_hex		(x,	1);
	create_insn	(x=0X18580);
	op_stkvar	(x,	0);
	create_insn	(x=0X18588);
	op_stkvar	(x,	1);
	create_insn	(x=0X18594);
	op_stkvar	(x,	1);
	create_insn	(x=0X185A8);
	op_hex		(x,	1);
	create_insn	(0X185B2);
	create_insn	(0X185B8);
	create_insn	(0X185BE);
	create_insn	(x=0X185C1);
	op_hex		(x,	1);
	create_insn	(x=0X185C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X185CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X185D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X185D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X185DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X185E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X185E8);
	op_hex		(x,	1);
	create_insn	(x=0X185EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X185EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X185F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X185FA);
	op_hex		(x,	1);
	create_insn	(x=0X18603);
	op_stkvar	(x,	1);
	create_insn	(x=0X18616);
	op_stkvar	(x,	1);
	create_insn	(x=0X1861B);
	op_stkvar	(x,	1);
	create_insn	(0X1862A);
	create_insn	(x=0X1862D);
	op_stkvar	(x,	1);
	set_cmt	(0X18639,	"int",	0);
	create_insn	(x=0X1863D);
	op_hex		(x,	1);
	create_insn	(x=0X18640);
	op_stkvar	(x,	0);
	create_insn	(x=0X18648);
	op_stkvar	(x,	0);
	create_insn	(x=0X18653);
	op_stkvar	(x,	0);
	create_insn	(x=0X1865C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18670);
	op_stkvar	(x,	1);
	create_insn	(x=0X18686);
	op_hex		(x,	1);
	create_insn	(x=0X18694);
	op_stkvar	(x,	0);
	create_insn	(x=0X1869D);
	op_stkvar	(x,	1);
	set_cmt	(0X186AA,	"int",	0);
	create_insn	(x=0X186AE);
	op_hex		(x,	1);
	create_insn	(x=0X186B6);
	op_stkvar	(x,	0);
	create_insn	(0X186BF);
	create_insn	(x=0X186C2);
	op_stkvar	(x,	1);
	set_cmt	(0X186CF,	"int",	0);
	create_insn	(x=0X186D3);
	op_hex		(x,	1);
	create_insn	(x=0X186D6);
	op_stkvar	(x,	0);
	set_cmt	(0X186DC,	"int",	0);
	create_insn	(x=0X186E0);
	op_hex		(x,	1);
	create_insn	(0X186F8);
	create_insn	(x=0X186FB);
	op_hex		(x,	1);
	set_cmt	(0X186FE,	"char *",	0);
	create_insn	(x=0X18702);
	op_stkvar	(x,	1);
	create_insn	(x=0X18707);
	op_hex		(x,	1);
	create_insn	(0X18711);
	create_insn	(x=0X1871D);
	op_hex		(x,	1);
	create_insn	(x=0X1872C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1873A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1873F);
	op_hex		(x,	1);
	create_insn	(x=0X18765);
	op_stkvar	(x,	0);
	create_insn	(x=0X1876A);
	op_hex		(x,	1);
	create_insn	(0X18778);
	create_insn	(x=0X18786);
	op_hex		(x,	1);
	create_insn	(x=0X1878C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1879B);
	op_stkvar	(x,	1);
	create_insn	(x=0X187A0);
	op_hex		(x,	1);
	create_insn	(x=0X187A9);
	op_stkvar	(x,	1);
	set_cmt	(0X187BD,	"char *",	0);
	create_insn	(x=0X187C1);
	op_hex		(x,	1);
	create_insn	(x=0X187CC);
	op_hex		(x,	1);
	create_insn	(x=0X187D9);
	op_stkvar	(x,	0);
	create_insn	(0X187EA);
	create_insn	(x=0X187ED);
	op_hex		(x,	1);
	create_insn	(x=0X187F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X187F7);
	op_hex		(x,	1);
	create_insn	(x=0X187FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X187FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1880C);
	op_hex		(x,	1);
	create_insn	(x=0X18813);
	op_hex		(x,	1);
	create_insn	(x=0X1881C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18837);
	op_hex		(x,	1);
	create_insn	(x=0X18839);
	op_hex		(x,	1);
	create_insn	(x=0X18849);
	op_hex		(x,	1);
	create_insn	(x=0X1884B);
	op_hex		(x,	1);
	create_insn	(x=0X18856);
	op_hex		(x,	1);
	create_insn	(x=0X1885C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18865);
	op_stkvar	(x,	1);
	create_insn	(x=0X18873);
	op_stkvar	(x,	0);
	create_insn	(x=0X18878);
	op_stkvar	(x,	1);
	create_insn	(x=0X1887F);
	op_hex		(x,	1);
	create_insn	(x=0X1888A);
	op_stkvar	(x,	0);
	create_insn	(0X18892);
	create_insn	(x=0X18895);
	op_stkvar	(x,	0);
	create_insn	(x=0X188AC);
	op_hex		(x,	1);
	create_insn	(x=0X188AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X188B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X188BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X188C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X188C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X188CF);
	op_hex		(x,	1);
	create_insn	(x=0X188D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X188DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X188E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X188E7);
	op_hex		(x,	1);
	create_insn	(x=0X188EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X188F0);
	op_hex		(x,	1);
	create_insn	(x=0X188F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X188F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X188FE);
	op_hex		(x,	1);
	create_insn	(0X1890A);
	create_insn	(x=0X1890E);
	op_stkvar	(x,	0);
	set_name	(0X18928,	"InitPlayerState");
	create_insn	(x=0X1892C);
	op_hex		(x,	1);
	create_insn	(x=0X1892F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18933);
	op_stkvar	(x,	1);
	create_insn	(x=0X1893A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18948);
	op_stkvar	(x,	0);
	create_insn	(x=0X1894B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18951);
	op_hex		(x,	1);
	create_insn	(x=0X1895C);
	op_hex		(x,	1);
	create_insn	(x=0X1895F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1896D);
	op_hex		(x,	1);
	create_insn	(x=0X1897A);
	op_stkvar	(x,	0);
	create_insn	(x=0X18997);
	op_hex		(x,	1);
	create_insn	(0X189AA);
	set_cmt	(0X189AD,	"char *",	0);
	create_insn	(x=0X189B1);
	op_stkvar	(x,	1);
	create_insn	(0X189C2);
	create_insn	(x=0X189C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X189DB);
	op_stkvar	(x,	0);
	create_insn	(0X189E6);
	create_insn	(x=0X189F0);
	op_hex		(x,	1);
	create_insn	(x=0X189F3);
	op_stkvar	(x,	0);
	set_cmt	(0X18A00,	"char *",	0);
	create_insn	(x=0X18A04);
	op_hex		(x,	1);
	create_insn	(x=0X18A0D);
	op_hex		(x,	1);
	create_insn	(0X18A14);
	set_cmt	(0X18A1B,	"char *",	0);
	create_insn	(x=0X18A1F);
	op_hex		(x,	1);
	create_insn	(x=0X18A28);
	op_hex		(x,	1);
	create_insn	(x=0X18A30);
	op_hex		(x,	1);
	create_insn	(0X18A44);
	create_insn	(x=0X18A47);
	op_hex		(x,	1);
	create_insn	(x=0X18A4A);
	op_hex		(x,	1);
	create_insn	(x=0X18A59);
	op_stkvar	(x,	0);
	create_insn	(0X18A60);
	create_insn	(x=0X18A67);
	op_hex		(x,	1);
	create_insn	(x=0X18A79);
	op_stkvar	(x,	0);
	create_insn	(x=0X18A7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18A8B);
	op_hex		(x,	1);
	create_insn	(x=0X18A9E);
	op_hex		(x,	1);
	create_insn	(0X18AA6);
	create_insn	(x=0X18AA9);
	op_hex		(x,	1);
	set_cmt	(0X18AAD,	"char *",	0);
	set_cmt	(0X18AAE,	"int",	0);
	create_insn	(x=0X18AB5);
	op_hex		(x,	1);
	create_insn	(0X18AC0);
	create_insn	(0X18ACA);
	create_insn	(0X18AD4);
	create_insn	(x=0X18AE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X18AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AEF);
	op_stkvar	(x,	0);
	set_cmt	(0X18B02,	"char *",	0);
	create_insn	(x=0X18B06);
	op_hex		(x,	1);
	set_cmt	(0X18B10,	"char *",	0);
	create_insn	(x=0X18B14);
	op_hex		(x,	1);
	create_insn	(x=0X18B22);
	op_stkvar	(x,	0);
	create_insn	(x=0X18B2B);
	op_stkvar	(x,	0);
	create_insn	(0X18B34);
	create_insn	(x=0X18B38);
	op_hex		(x,	1);
	create_insn	(x=0X18B3A);
	op_hex		(x,	1);
	create_insn	(0X18B4A);
	set_cmt	(0X18B4C,	"int",	0);
	create_insn	(x=0X18B50);
	op_hex		(x,	1);
	create_insn	(x=0X18B57);
	op_hex		(x,	1);
	create_insn	(x=0X18B5D);
	op_stkvar	(x,	0);
	set_cmt	(0X18B63,	"int",	0);
	create_insn	(x=0X18B64);
	op_stkvar	(x,	1);
	set_cmt	(0X18B6A,	"int",	0);
	set_cmt	(0X18B6E,	"int",	0);
	create_insn	(x=0X18B6F);
	op_stkvar	(x,	1);
	set_cmt	(0X18B73,	"int",	0);
	create_insn	(x=0X18B77);
	op_hex		(x,	1);
	create_insn	(x=0X18B82);
	op_stkvar	(x,	0);
	create_insn	(x=0X18B89);
	op_hex		(x,	1);
	create_insn	(x=0X18B8B);
	op_hex		(x,	1);
	create_insn	(x=0X18B94);
	op_hex		(x,	1);
	create_insn	(x=0X18B9A);
	op_stkvar	(x,	1);
	set_cmt	(0X18BA4,	"char *",	0);
	create_insn	(x=0X18BA8);
	op_hex		(x,	1);
	set_cmt	(0X18BB2,	"char *",	0);
	create_insn	(x=0X18BB6);
	op_hex		(x,	1);
	set_cmt	(0X18BC0,	"char *",	0);
	create_insn	(x=0X18BC5);
	op_hex		(x,	1);
	create_insn	(x=0X18BC7);
	op_hex		(x,	1);
	set_cmt	(0X18BC9,	"int",	0);
	create_insn	(x=0X18BD0);
	op_hex		(x,	1);
	set_cmt	(0X18BD7,	"char *",	0);
	create_insn	(x=0X18BDB);
	op_hex		(x,	1);
	create_insn	(x=0X18BE5);
	op_hex		(x,	1);
	create_insn	(x=0X18BE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BED);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C01);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C04);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C07);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C10);
	op_stkvar	(x,	0);
	create_insn	(0X18C19);
	create_insn	(x=0X18C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C47);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C64);
	op_stkvar	(x,	1);
	set_cmt	(0X18C74,	"__int32",	0);
	set_cmt	(0X18C79,	"int",	0);
	set_cmt	(0X18C7A,	"__int32",	0);
	create_insn	(0X18C86);
	create_insn	(x=0X18C96);
	op_hex		(x,	1);
	create_insn	(x=0X18C98);
	op_hex		(x,	1);
	set_cmt	(0X18C9E,	"int",	0);
	set_cmt	(0X18C9F,	"__int32",	0);
	set_cmt	(0X18CA4,	"__int32",	0);
	create_insn	(x=0X18CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CE0);
	op_stkvar	(x,	0);
	create_insn	(0X18CEE);
	create_insn	(x=0X18CF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D12);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D21);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D37);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D4B);
	op_hex		(x,	1);
	create_insn	(x=0X18D55);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D61);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D84);
	op_stkvar	(x,	1);
	set_cmt	(0X18D8E,	"char *",	0);
	create_insn	(x=0X18D92);
	op_hex		(x,	1);
	set_cmt	(0X18D9C,	"char *",	0);
	create_insn	(x=0X18DA0);
	op_hex		(x,	1);
	create_insn	(x=0X18DAA);
	op_hex		(x,	1);
	create_insn	(x=0X18DB4);
	op_stkvar	(x,	1);
	create_insn	(0X18DC6);
	create_insn	(x=0X18DCD);
	op_hex		(x,	1);
	create_insn	(x=0X18DD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DDA);
	op_hex		(x,	1);
	create_insn	(x=0X18DEB);
	op_hex		(x,	1);
	create_insn	(0X18DF4);
	create_insn	(x=0X18DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E02);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E15);
	op_hex		(x,	1);
	create_insn	(x=0X18E17);
	op_hex		(x,	1);
	create_insn	(x=0X18E1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E25);
	op_hex		(x,	1);
	create_insn	(x=0X18E27);
	op_hex		(x,	1);
	create_insn	(x=0X18E32);
	op_hex		(x,	1);
	create_insn	(0X18E38);
	set_cmt	(0X18E41,	"char *",	0);
	set_cmt	(0X18E45,	"int",	0);
	create_insn	(x=0X18E49);
	op_hex		(x,	1);
	create_insn	(0X18E50);
	set_name	(0X18E50,	"UpdateFlightModelAndHUD");
	create_insn	(x=0X18E53);
	op_hex		(x,	1);
	set_cmt	(0X18E56,	"int",	0);
	create_insn	(x=0X18E67);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X18E6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E72);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X18E7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E80);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E86);
	op_hex		(x,	1);
	create_insn	(0X18E96);
	create_insn	(x=0X18EA3);
	op_hex		(x,	1);
	set_cmt	(0X18EAD,	"int",	0);
	create_insn	(x=0X18EB1);
	op_hex		(x,	1);
	set_cmt	(0X18EB7,	"int",	0);
	set_cmt	(0X18EBB,	"int",	0);
	set_cmt	(0X18EBE,	"int",	0);
	set_cmt	(0X18EBF,	"int",	0);
	create_insn	(x=0X18EC3);
	op_hex		(x,	1);
	create_insn	(x=0X18ECF);
	op_hex		(x,	1);
	create_insn	(0X18EE1);
	create_insn	(0X18EEB);
	create_insn	(x=0X18EEF);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(0X18EF9);
	set_cmt	(0X18EFB,	"int",	0);
	create_insn	(x=0X18EFF);
	op_hex		(x,	1);
	create_insn	(x=0X18F15);
	op_hex		(x,	1);
	create_insn	(x=0X18F2B);
	op_hex		(x,	1);
	create_insn	(x=0X18F41);
	op_hex		(x,	1);
	create_insn	(x=0X18F57);
	op_hex		(x,	1);
	create_insn	(x=0X18F6D);
	op_hex		(x,	1);
	set_cmt	(0X18F73,	"int",	0);
	create_insn	(x=0X18F77);
	op_hex		(x,	1);
	create_insn	(x=0X18F89);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F93);
	op_hex		(x,	1);
	create_insn	(x=0X18FA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FB5);
	op_hex		(x,	1);
	create_insn	(x=0X18FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FCB);
	op_hex		(x,	1);
	create_insn	(x=0X18FCE);
	op_hex		(x,	1);
	set_cmt	(0X18FD9,	"int",	0);
	create_insn	(x=0X18FDD);
	op_hex		(x,	1);
	create_insn	(x=0X18FF3);
	op_hex		(x,	1);
	create_insn	(x=0X19009);
	op_hex		(x,	1);
	create_insn	(0X19018);
	set_cmt	(0X1901A,	"int",	0);
	create_insn	(x=0X1901E);
	op_hex		(x,	1);
	create_insn	(x=0X1902F);
	op_hex		(x,	1);
	create_insn	(x=0X1903E);
	op_hex		(x,	1);
	create_insn	(x=0X19041);
	op_stkvar	(x,	0);
	create_insn	(x=0X19053);
	op_stkvar	(x,	1);
	create_insn	(x=0X1905E);
	op_hex		(x,	1);
	create_insn	(x=0X19079);
	op_hex		(x,	1);
	create_insn	(x=0X1908C);
	op_hex		(x,	1);
	create_insn	(x=0X1908F);
	op_hex		(x,	1);
	create_insn	(x=0X19096);
	op_hex		(x,	1);
	create_insn	(x=0X190A1);
	op_enum		(x,	0,	GetEnum("Game"),0);
	create_insn	(x=0X190B7);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	op_hex		(x,	1);
	create_insn	(0X190C4);
	create_insn	(x=0X190CD);
	op_enum		(x,	1,	GetEnum("Game"),0);
	create_insn	(x=0X190D8);
	op_stkvar	(x,	0);
	set_cmt	(0X190DE,	"int",	0);
	create_insn	(x=0X190E2);
	op_hex		(x,	1);
	create_insn	(x=0X190E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X190EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X190FA);
	op_hex		(x,	1);
	create_insn	(x=0X190FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X19104);
	op_stkvar	(x,	1);
	create_insn	(x=0X19112);
	op_hex		(x,	1);
	create_insn	(x=0X19127);
	op_hex		(x,	1);
	set_cmt	(0X19131,	"int",	0);
	set_cmt	(0X19135,	"int",	0);
	create_insn	(x=0X1913A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1913D,	"char *",	0);
	create_insn	(x=0X19141);
	op_hex		(x,	1);
	set_cmt	(0X19155,	"int",	0);
	create_insn	(x=0X19159);
	op_hex		(x,	1);
	create_insn	(x=0X19195);
	op_hex		(x,	1);
	create_insn	(0X191A2);
	create_insn	(x=0X191A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X191AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X191B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X191C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X191C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X191C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X191EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X191F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X191FF);
	op_hex		(x,	1);
	create_insn	(x=0X19206);
	op_hex		(x,	1);
	create_insn	(x=0X19208);
	op_hex		(x,	1);
	create_insn	(x=0X1920D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X19216);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1921C,	"7 - air to air?",	0);
	create_insn	(x=0X1921C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(0X1922F);
	set_cmt	(0X19232,	"int",	0);
	create_insn	(x=0X19236);
	op_hex		(x,	1);
	create_insn	(x=0X19239);
	op_stkvar	(x,	0);
	create_insn	(x=0X19240);
	op_stkvar	(x,	0);
	create_insn	(x=0X19244);
	op_stkvar	(x,	0);
	create_insn	(x=0X1924B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19250);
	op_stkvar	(x,	0);
	set_cmt	(0X19256,	"int",	0);
	set_cmt	(0X19257,	"int",	0);
	create_insn	(x=0X19257);
	op_stkvar	(x,	0);
	create_insn	(x=0X1925D);
	op_hex		(x,	1);
	create_insn	(x=0X19263);
	op_stkvar	(x,	0);
	create_insn	(x=0X1926A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19270);
	op_hex		(x,	1);
	create_insn	(x=0X19278);
	op_stkvar	(x,	0);
	create_insn	(x=0X1927B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19281);
	op_stkvar	(x,	0);
	create_insn	(x=0X19284);
	op_stkvar	(x,	0);
	create_insn	(x=0X19288);
	op_stkvar	(x,	0);
	create_insn	(x=0X1928E);
	op_hex		(x,	1);
	create_insn	(x=0X19291);
	op_stkvar	(x,	1);
	create_insn	(x=0X19294);
	op_stkvar	(x,	0);
	create_insn	(x=0X19297);
	op_stkvar	(x,	1);
	create_insn	(x=0X1929A);
	op_stkvar	(x,	0);
	create_insn	(0X1929F);
	create_insn	(x=0X192B2);
	op_hex		(x,	1);
	create_insn	(0X192D5);
	create_insn	(x=0X192E1);
	op_hex		(x,	1);
	create_insn	(x=0X192E3);
	op_hex		(x,	1);
	create_insn	(x=0X192EB);
	op_hex		(x,	1);
	set_cmt	(0X192F8,	"int",	0);
	set_cmt	(0X192FC,	"int",	0);
	create_insn	(x=0X19301);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X19304,	"char *",	0);
	create_insn	(x=0X19308);
	op_hex		(x,	1);
	create_insn	(x=0X1930B);
	op_hex		(x,	1);
	set_cmt	(0X19316,	"int",	0);
	set_cmt	(0X1931A,	"int",	0);
	create_insn	(x=0X1931F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X19322,	"char *",	0);
	create_insn	(x=0X19326);
	op_hex		(x,	1);
	set_cmt	(0X19333,	"int",	0);
	set_cmt	(0X19337,	"int",	0);
	create_insn	(x=0X1933C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1933F,	"char *",	0);
	create_insn	(x=0X19343);
	op_hex		(x,	1);
	create_insn	(x=0X19366);
	op_hex		(x,	1);
	create_insn	(x=0X19369);
	op_stkvar	(x,	0);
	set_cmt	(0X1936F,	"int",	0);
	create_insn	(x=0X19373);
	op_hex		(x,	1);
	create_insn	(x=0X1937A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19381);
	op_stkvar	(x,	1);
	create_insn	(x=0X1938B);
	op_hex		(x,	1);
	create_insn	(x=0X19392);
	op_stkvar	(x,	1);
	create_insn	(x=0X1939D);
	op_stkvar	(x,	0);
	create_insn	(x=0X193A3);
	op_hex		(x,	1);
	create_insn	(x=0X193AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X193B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X193BF);
	op_hex		(x,	1);
	create_insn	(0X193C4);
	create_insn	(x=0X193CC);
	op_hex		(x,	1);
	set_cmt	(0X193EE,	"int",	0);
	set_cmt	(0X193F2,	"int",	0);
	create_insn	(x=0X193F3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X193F6,	"char *",	0);
	create_insn	(x=0X193FA);
	op_hex		(x,	1);
	create_insn	(x=0X193FD);
	op_hex		(x,	1);
	create_insn	(x=0X19404);
	op_hex		(x,	1);
	create_insn	(x=0X19406);
	op_hex		(x,	1);
	create_insn	(x=0X19409);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1940C,	"char *",	0);
	create_insn	(x=0X19410);
	op_hex		(x,	1);
	create_insn	(0X1942A);
	create_insn	(x=0X19435);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1943C);
	op_hex		(x,	1);
	set_cmt	(0X19457,	"int",	0);
	set_cmt	(0X1945B,	"int",	0);
	create_insn	(x=0X1945C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1945F,	"char *",	0);
	create_insn	(x=0X19463);
	op_hex		(x,	1);
	create_insn	(x=0X19466);
	op_hex		(x,	1);
	create_insn	(x=0X1946D);
	op_hex		(x,	1);
	create_insn	(x=0X1946F);
	op_hex		(x,	1);
	create_insn	(x=0X19472);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X19475,	"char *",	0);
	create_insn	(x=0X19479);
	op_hex		(x,	1);
	create_insn	(0X19485);
	create_insn	(0X19491);
	create_insn	(0X19496);
	create_insn	(x=0X194A1);
	op_hex		(x,	1);
	create_insn	(0X194A6);
	create_insn	(x=0X194A9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X194AC,	"char *",	0);
	set_cmt	(0X194B0,	"int",	0);
	create_insn	(x=0X194B4);
	op_hex		(x,	1);
	create_insn	(0X194B9);
	create_insn	(0X194BB);
	create_insn	(0X194C6);
	create_insn	(0X194D0);
	set_name	(0X194D0,	"SetHUDMessage");
	create_insn	(x=0X194D3);
	op_hex		(x,	1);
	create_insn	(x=0X194E0);
	op_stkvar	(x,	1);
	create_insn	(0X194E6);
	set_cmt	(0X194ED,	"char *",	0);
	create_insn	(x=0X194F1);
	op_hex		(x,	1);
	create_insn	(0X194F9);
	set_cmt	(0X19500,	"char *",	0);
	create_insn	(x=0X19504);
	op_hex		(x,	1);
	create_insn	(0X19509);
	set_cmt	(0X19510,	"char *",	0);
	create_insn	(x=0X19514);
	op_hex		(x,	1);
	create_insn	(0X19519);
	set_cmt	(0X19520,	"char *",	0);
	create_insn	(x=0X19524);
	op_hex		(x,	1);
	create_insn	(0X19529);
	set_cmt	(0X19530,	"char *",	0);
	create_insn	(x=0X19534);
	op_hex		(x,	1);
	create_insn	(0X19539);
	create_insn	(0X1953B);
	create_insn	(0X19550);
	set_cmt	(0X19557,	"char *",	0);
	set_cmt	(0X1955B,	"int",	0);
	create_insn	(x=0X1955F);
	op_hex		(x,	1);
	create_insn	(0X19564);
	create_insn	(0X19566);
	create_insn	(0X1956E);
	create_insn	(x=0X19570);
	op_stkvar	(x,	1);
	create_insn	(0X1957A);
	create_insn	(x=0X1957D);
	op_hex		(x,	1);
	create_insn	(x=0X19583);
	op_stkvar	(x,	0);
	create_insn	(x=0X19588);
	op_stkvar	(x,	0);
	create_insn	(x=0X1958E);
	op_hex		(x,	1);
	create_insn	(0X19595);
	set_name	(0X19595,	"InitHUD");
	create_insn	(0X195C9);
	set_name	(0X195C9,	"RenderScene");
	create_insn	(x=0X195CC);
	op_hex		(x,	1);
	create_insn	(0X195E0);
	set_cmt	(0X195E6,	"char *",	0);
	set_cmt	(0X195EA,	"int",	0);
	create_insn	(x=0X195EE);
	op_hex		(x,	1);
	create_insn	(x=0X195FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X19602);
	op_stkvar	(x,	1);
	create_insn	(x=0X19606);
	op_stkvar	(x,	0);
	set_cmt	(0X19612,	"int",	0);
	set_cmt	(0X19613,	"int",	0);
	create_insn	(x=0X1961A);
	op_hex		(x,	1);
	create_insn	(x=0X1961D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19624);
	op_hex		(x,	1);
	create_insn	(x=0X1963B);
	op_hex		(x,	1);
	create_insn	(x=0X1963D);
	op_hex		(x,	1);
	create_insn	(x=0X1963F);
	op_stkvar	(x,	0);
	create_insn	(x=0X19645);
	op_stkvar	(x,	1);
	create_insn	(x=0X19649);
	op_stkvar	(x,	0);
	create_insn	(x=0X1965D);
	op_hex		(x,	1);
	create_insn	(x=0X19660);
	op_stkvar	(x,	1);
	create_insn	(x=0X19669);
	op_hex		(x,	1);
	create_insn	(0X1967E);
	create_insn	(x=0X19685);
	op_hex		(x,	1);
	create_insn	(x=0X19691);
	op_hex		(x,	1);
	create_insn	(x=0X196A2);
	op_hex		(x,	1);
	create_insn	(x=0X196B0);
	op_hex		(x,	1);
	create_insn	(x=0X196BA);
	op_hex		(x,	1);
	create_insn	(x=0X196D1);
	op_hex		(x,	1);
	create_insn	(0X196D6);
	create_insn	(x=0X196DF);
	op_hex		(x,	1);
	create_insn	(x=0X196E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X196F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X196F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X196FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X19706);
	op_stkvar	(x,	1);
	create_insn	(x=0X19714);
	op_hex		(x,	1);
	create_insn	(x=0X1971B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1971F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1972E);
	op_hex		(x,	1);
	create_insn	(x=0X19744);
	op_stkvar	(x,	1);
	create_insn	(x=0X19749);
	op_stkvar	(x,	1);
	create_insn	(x=0X19751);
	op_hex		(x,	1);
	create_insn	(x=0X19754);
	op_stkvar	(x,	1);
	create_insn	(x=0X19761);
	op_hex		(x,	1);
	create_insn	(x=0X19769);
	op_hex		(x,	1);
	create_insn	(x=0X1976F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19776);
	op_stkvar	(x,	1);
	create_insn	(x=0X1977A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19789);
	op_hex		(x,	1);
	create_insn	(0X197A7);
	create_insn	(x=0X197AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X197B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X197B8);
	op_hex		(x,	1);
	create_insn	(x=0X197BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X197C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X197C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X197D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X197DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X197E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X197E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X197F6);
	op_hex		(x,	1);
	create_insn	(0X19814);
	create_insn	(x=0X19818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1981D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19825);
	op_hex		(x,	1);
	create_insn	(x=0X1982A);
	op_stkvar	(x,	1);
	create_insn	(0X1983E);
	create_insn	(x=0X19867);
	op_hex		(x,	1);
	create_insn	(0X19875);
	set_name	(0X19875,	"zoomIn");
	create_insn	(x=0X19878);
	op_hex		(x,	1);
	create_insn	(0X19885);
	create_insn	(x=0X198A2);
	op_hex		(x,	1);
	create_insn	(0X198B4);
	set_name	(0X198B4,	"zoomOut");
	create_insn	(x=0X198B7);
	op_hex		(x,	1);
	create_insn	(0X198C4);
	create_insn	(x=0X198E1);
	op_hex		(x,	1);
	create_insn	(0X198FA);
	set_name	(0X198FA,	"TransformXCoordinate");
	create_insn	(x=0X198FD);
	op_stkvar	(x,	1);
	create_insn	(0X19911);
	create_insn	(0X19915);
	set_name	(0X19915,	"TransformYCoordinate");
	create_insn	(x=0X19918);
	op_stkvar	(x,	1);
	create_insn	(x=0X19929);
	op_hex		(x,	1);
	create_insn	(x=0X1992D);
	op_hex		(x,	1);
	create_insn	(x=0X1992F);
	op_hex		(x,	1);
	create_insn	(0X19936);
	create_insn	(0X1993A);
	create_insn	(x=0X1993D);
	op_hex		(x,	1);
	create_insn	(x=0X19953);
	op_stkvar	(x,	0);
	create_insn	(x=0X19959);
	op_hex		(x,	1);
	create_insn	(x=0X1995C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1995F);
	op_stkvar	(x,	0);
	create_insn	(x=0X19965);
	op_hex		(x,	1);
	create_insn	(x=0X19968);
	op_stkvar	(x,	0);
	create_insn	(x=0X1996B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19974);
	op_stkvar	(x,	0);
	create_insn	(x=0X1997D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19985);
	op_stkvar	(x,	0);
	create_insn	(x=0X1998E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19993);
	op_stkvar	(x,	0);
	create_insn	(x=0X19996);
	op_stkvar	(x,	0);
	create_insn	(x=0X19999);
	op_stkvar	(x,	0);
	create_insn	(x=0X1999F);
	op_hex		(x,	1);
	create_insn	(x=0X199A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X199A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X199AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X199AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X199B6);
	op_hex		(x,	1);
	create_insn	(x=0X199B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X199BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X199C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X199C7);
	op_hex		(x,	1);
	create_insn	(x=0X199CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X199CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X199D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X199DA);
	op_hex		(x,	1);
	create_insn	(0X199E1);
	create_insn	(0X199E3);
	create_insn	(0X199E8);
	create_insn	(0X199EC);
	set_name	(0X199EC,	"TransformAndProjectObject");
	create_insn	(x=0X199FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A01);
	op_hex		(x,	1);
	create_insn	(x=0X19A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A09);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A0F);
	op_hex		(x,	1);
	create_insn	(x=0X19A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A17);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A2A);
	op_stkvar	(x,	1);
	create_insn	(0X19A42);
	create_insn	(0X19A44);
	create_insn	(0X19A48);
	create_insn	(0X19A4D);
	set_name	(0X19A4D,	"GetObjectScreenPosition");
	create_insn	(x=0X19A50);
	op_hex		(x,	1);
	create_insn	(x=0X19A5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A64);
	op_hex		(x,	1);
	create_insn	(x=0X19A67);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A70);
	op_hex		(x,	1);
	create_insn	(x=0X19A73);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A84);
	op_hex		(x,	1);
	create_insn	(x=0X19A87);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A92);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A98);
	op_hex		(x,	1);
	create_insn	(x=0X19A9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19ABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19ACC);
	op_hex		(x,	1);
	create_insn	(x=0X19ACF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AD2);
	op_stkvar	(x,	1);
	create_insn	(0X19AD7);
	create_insn	(0X19ADB);
	set_name	(0X19ADB,	"UpdateObjectAI");
	create_insn	(x=0X19ADE);
	op_hex		(x,	1);
	create_insn	(x=0X19AE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AE9);
	op_stkvar	(x,	0);
	set_cmt	(0X19AED,	"int",	0);
	create_insn	(x=0X19AED);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AF3);
	op_hex		(x,	1);
	create_insn	(x=0X19AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B02);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B05);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B12);
	op_stkvar	(x,	0);
	set_cmt	(0X19B15,	"int",	0);
	create_insn	(x=0X19B15);
	op_stkvar	(x,	0);
	set_cmt	(0X19B18,	"int",	0);
	create_insn	(x=0X19B1C);
	op_hex		(x,	1);
	create_insn	(x=0X19B1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B22);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B25);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B28);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B2E);
	op_hex		(x,	1);
	create_insn	(x=0X19B31);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B36);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B39);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B40);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B45);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B51);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B54);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B59);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B62);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B65);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B68);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B6E);
	op_hex		(x,	1);
	create_insn	(0X19B73);
	create_insn	(x=0X19B76);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B79);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B82);
	op_hex		(x,	1);
	create_insn	(x=0X19B85);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B88);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B8E);
	op_stkvar	(x,	0);
	create_insn	(0X19B94);
	create_insn	(0X19B98);
	create_insn	(x=0X19BAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BB5);
	op_hex		(x,	1);
	create_insn	(x=0X19BB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BBF);
	op_hex		(x,	1);
	create_insn	(x=0X19BC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BC9);
	op_hex		(x,	1);
	create_insn	(x=0X19BCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BD3);
	op_hex		(x,	1);
	create_insn	(x=0X19BDA);
	op_hex		(x,	1);
	create_insn	(0X19BE1);
	create_insn	(x=0X19BF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C05);
	op_hex		(x,	1);
	create_insn	(0X19C0C);
	create_insn	(x=0X19C0F);
	op_hex		(x,	1);
	create_insn	(x=0X19C1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C27);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C35);
	op_hex		(x,	1);
	create_insn	(x=0X19C3E);
	op_hex		(x,	1);
	create_insn	(x=0X19C41);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C5B);
	op_hex		(x,	1);
	create_insn	(x=0X19C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C70);
	op_stkvar	(x,	1);
	create_insn	(0X19C84);
	create_insn	(x=0X19C87);
	op_hex		(x,	1);
	create_insn	(x=0X19C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C91);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C97);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19CA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X19CA9);
	op_hex		(x,	1);
	create_insn	(x=0X19CB2);
	op_hex		(x,	1);
	create_insn	(x=0X19CB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CCF);
	op_hex		(x,	1);
	create_insn	(x=0X19CD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CED);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D00);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D1A);
	op_hex		(x,	1);
	create_insn	(x=0X19D29);
	op_hex		(x,	1);
	create_insn	(x=0X19D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D35);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D41);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D47);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D63);
	op_hex		(x,	1);
	create_insn	(x=0X19D7F);
	op_hex		(x,	1);
	create_insn	(0X19D86);
	create_insn	(x=0X19D9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DA9);
	op_hex		(x,	1);
	create_insn	(0X19DB0);
	create_insn	(x=0X19DC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DD4);
	op_hex		(x,	1);
	create_insn	(0X19DD9);
	create_insn	(x=0X19DEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DFB);
	op_hex		(x,	1);
	create_insn	(0X19E00);
	create_insn	(x=0X19E1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E20);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E23);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E29);
	op_hex		(x,	1);
	create_insn	(x=0X19E2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E31);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E34);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E37);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E3D);
	op_hex		(x,	1);
	create_insn	(0X19E44);
	create_insn	(x=0X19E4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19E55);
	op_stkvar	(x,	1);
	create_insn	(0X19E5D);
	set_name	(0X19E5D,	"DrawHUDElement");
	create_insn	(x=0X19E60);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E63);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E66);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E69);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E75);
	op_hex		(x,	1);
	create_insn	(x=0X19E78);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E81);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E8D);
	op_hex		(x,	1);
	create_insn	(0X19E94);
	set_cmt	(0X19E97,	"int",	0);
	create_insn	(x=0X19E97);
	op_stkvar	(x,	0);
	create_insn	(x=0X19E9D);
	op_hex		(x,	1);
	create_insn	(x=0X19EA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X19EA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19EA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19EA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X19EAF);
	op_hex		(x,	1);
	create_insn	(0X19EB6);
	create_insn	(x=0X19EC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EC8);
	op_hex		(x,	1);
	create_insn	(x=0X19ECA);
	op_hex		(x,	1);
	create_insn	(x=0X19ECE);
	op_hex		(x,	1);
	create_insn	(x=0X19ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EF9);
	op_hex		(x,	1);
	create_insn	(x=0X19EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F01);
	op_hex		(x,	1);
	create_insn	(x=0X19F03);
	op_hex		(x,	1);
	create_insn	(x=0X19F07);
	op_hex		(x,	1);
	create_insn	(x=0X19F0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19F2B);
	op_hex		(x,	1);
	create_insn	(x=0X19F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F33);
	op_hex		(x,	1);
	create_insn	(x=0X19F35);
	op_hex		(x,	1);
	create_insn	(x=0X19F39);
	op_hex		(x,	1);
	create_insn	(x=0X19F3B);
	op_stkvar	(x,	1);
	create_insn	(0X19F47);
	create_insn	(x=0X19F5F);
	op_hex		(x,	1);
	create_insn	(x=0X19F63);
	op_hex		(x,	1);
	create_insn	(x=0X19F6C);
	op_hex		(x,	1);
	create_insn	(x=0X19F6E);
	op_hex		(x,	1);
	create_insn	(x=0X19F7A);
	op_hex		(x,	1);
	create_insn	(x=0X19F8B);
	op_hex		(x,	1);
	create_insn	(x=0X19F8F);
	op_hex		(x,	1);
	create_insn	(x=0X19F98);
	op_hex		(x,	1);
	create_insn	(x=0X19F9A);
	op_hex		(x,	1);
	create_insn	(x=0X19FA6);
	op_hex		(x,	1);
	create_insn	(0X19FAD);
	set_name	(0X19FAD,	"DisplayMessageTop");
	create_insn	(x=0X19FB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X19FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19FB9);
	op_hex		(x,	1);
	set_cmt	(0X19FBC,	"char *",	0);
	create_insn	(x=0X19FBC);
	op_stkvar	(x,	0);
	set_cmt	(0X19FBF,	"int",	0);
	create_insn	(x=0X19FBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19FC5);
	op_hex		(x,	1);
	create_insn	(0X19FCC);
	set_name	(0X19FCC,	"ClearMessageArea");
	set_cmt	(0X19FCF,	"int",	0);
	create_insn	(x=0X19FCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19FD5);
	op_hex		(x,	1);
	create_insn	(x=0X19FD8);
	op_stkvar	(x,	0);
	set_cmt	(0X19FE1,	"int",	0);
	set_cmt	(0X19FE5,	"int",	0);
	set_cmt	(0X19FE9,	"int",	0);
	set_cmt	(0X19FED,	"int",	0);
	create_insn	(x=0X19FF1);
	op_hex		(x,	1);
	create_insn	(x=0X19FF4);
	op_stkvar	(x,	0);
	set_cmt	(0X19FFD,	"int",	0);
	set_cmt	(0X1A001,	"int",	0);
	set_cmt	(0X1A005,	"int",	0);
	set_cmt	(0X1A009,	"int",	0);
	create_insn	(x=0X1A00D);
	op_hex		(x,	1);
	create_insn	(x=0X1A010);
	op_stkvar	(x,	0);
	set_cmt	(0X1A019,	"int",	0);
	set_cmt	(0X1A01D,	"int",	0);
	set_cmt	(0X1A021,	"int",	0);
	set_cmt	(0X1A025,	"int",	0);
	create_insn	(x=0X1A029);
	op_hex		(x,	1);
	create_insn	(0X1A030);
	set_name	(0X1A030,	"DisplayMessageBottom");
	create_insn	(x=0X1A033);
	op_hex		(x,	1);
	set_cmt	(0X1A039,	"char *",	0);
	create_insn	(x=0X1A039);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A03F);
	op_hex		(x,	1);
	create_insn	(x=0X1A04F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A055);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A05A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A05F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A066);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A06B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A070);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A075);
	op_stkvar	(x,	0);
	set_cmt	(0X1A07C,	"int",	0);
	create_insn	(x=0X1A080);
	op_hex		(x,	1);
	create_insn	(x=0X1A083);
	op_stkvar	(x,	1);
	set_cmt	(0X1A089,	"int",	0);
	create_insn	(x=0X1A08A);
	op_stkvar	(x,	1);
	set_cmt	(0X1A090,	"int",	0);
	set_cmt	(0X1A091,	"int",	0);
	create_insn	(x=0X1A091);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A094);
	op_stkvar	(x,	1);
	set_cmt	(0X1A09A,	"int",	0);
	create_insn	(x=0X1A09E);
	op_hex		(x,	1);
	set_cmt	(0X1A0A4,	"int",	0);
	set_cmt	(0X1A0A5,	"int",	0);
	create_insn	(x=0X1A0A5);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0A8,	"char *",	0);
	create_insn	(x=0X1A0A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A0AE);
	op_hex		(x,	1);
	create_insn	(x=0X1A0B1);
	op_hex		(x,	1);
	create_insn	(x=0X1A0B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0B9);
	op_hex		(x,	1);
	set_cmt	(0X1A0BE,	"char *",	0);
	create_insn	(x=0X1A0BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A0C4);
	op_hex		(x,	1);
	set_cmt	(0X1A0CB,	"int",	0);
	create_insn	(0X1A0CB);
	set_name	(0X1A0CB,	"drawSomeStrings");
	set_cmt	(0X1A0CE,	"int",	0);
	create_insn	(x=0X1A0CE);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0D1,	"int",	0);
	create_insn	(x=0X1A0D1);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0D4,	"char *",	0);
	create_insn	(x=0X1A0D4);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0D7,	"char *",	0);
	create_insn	(x=0X1A0D7);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0DA,	"int *",	0);
	create_insn	(x=0X1A0E1);
	op_hex		(x,	1);
	set_cmt	(0X1A0E4,	"int",	0);
	create_insn	(x=0X1A0E4);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0E7,	"int",	0);
	create_insn	(x=0X1A0E7);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0EA,	"char *",	0);
	create_insn	(x=0X1A0EA);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0ED,	"char *",	0);
	create_insn	(x=0X1A0ED);
	op_stkvar	(x,	0);
	set_cmt	(0X1A0F0,	"int *",	0);
	create_insn	(x=0X1A0F7);
	op_hex		(x,	1);
	set_cmt	(0X1A0FE,	"int",	0);
	create_insn	(0X1A0FE);
	set_name	(0X1A0FE,	"draw2Strings");
	set_cmt	(0X1A108,	"int",	0);
	create_insn	(x=0X1A108);
	op_stkvar	(x,	0);
	set_cmt	(0X1A10B,	"int",	0);
	create_insn	(x=0X1A10B);
	op_stkvar	(x,	0);
	set_cmt	(0X1A10E,	"char *",	0);
	create_insn	(x=0X1A10E);
	op_stkvar	(x,	0);
	set_cmt	(0X1A111,	"char *",	0);
	create_insn	(x=0X1A111);
	op_stkvar	(x,	0);
	set_cmt	(0X1A114,	"int *",	0);
	create_insn	(x=0X1A11B);
	op_hex		(x,	1);
	set_cmt	(0X1A120,	"int",	0);
	create_insn	(x=0X1A120);
	op_stkvar	(x,	0);
	set_cmt	(0X1A123,	"int",	0);
	create_insn	(x=0X1A123);
	op_stkvar	(x,	0);
	set_cmt	(0X1A126,	"char *",	0);
	create_insn	(x=0X1A126);
	op_stkvar	(x,	0);
	set_cmt	(0X1A129,	"char *",	0);
	create_insn	(x=0X1A129);
	op_stkvar	(x,	0);
	set_cmt	(0X1A12C,	"int *",	0);
	create_insn	(x=0X1A133);
	op_hex		(x,	1);
	create_insn	(0X1A13A);
	set_name	(0X1A13A,	"drawString");
	create_insn	(x=0X1A13D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A145);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A148);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A14E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A151);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A157);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A15A);
	op_stkvar	(x,	1);
	set_cmt	(0X1A160,	"char *",	0);
	create_insn	(x=0X1A160);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A166);
	op_hex		(x,	1);
	set_cmt	(0X1A16A,	"char *",	0);
	create_insn	(x=0X1A16A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A170);
	op_hex		(x,	1);
	create_insn	(x=0X1A174);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A17C);
	op_hex		(x,	1);
	create_insn	(0X1A183);
	create_insn	(x=0X1A186);
	op_hex		(x,	1);
	create_insn	(x=0X1A18D);
	op_stkvar	(x,	1);
	set_cmt	(0X1A190,	"char *",	0);
	set_cmt	(0X1A191,	"int",	0);
	create_insn	(x=0X1A191);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A197);
	op_hex		(x,	1);
	set_cmt	(0X1A19A,	"int",	0);
	create_insn	(x=0X1A19A);
	op_stkvar	(x,	0);
	set_cmt	(0X1A19D,	"int",	0);
	create_insn	(x=0X1A19D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1A3);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1A6,	"char *",	0);
	create_insn	(x=0X1A1AA);
	op_hex		(x,	1);
	set_cmt	(0X1A1B1,	"union REGS *",	0);
	create_insn	(0X1A1B1);
	create_insn	(x=0X1A1B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1CA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1A1CE,	"union REGS *",	0);
	create_insn	(x=0X1A1CF);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	set_cmt	(0X1A1D2,	"int",	0);
	create_insn	(x=0X1A1D6);
	op_hex		(x,	1);
	create_insn	(0X1A1E0);
	set_cmt	(0X1A1E4,	"char *",	0);
	create_insn	(0X1A1E4);
	set_name	(0X1A1E4,	"tempStrcpy");
	create_insn	(x=0X1A1E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1EA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1A1ED,	"char *",	0);
	create_insn	(x=0X1A1F1);
	op_hex		(x,	1);
	create_insn	(x=0X1A1F9);
	op_hex		(x,	1);
	set_cmt	(0X1A204,	"char *",	0);
	create_insn	(0X1A204);
	create_insn	(x=0X1A207);
	op_stkvar	(x,	0);
	set_cmt	(0X1A20D,	"char *",	0);
	create_insn	(x=0X1A211);
	op_hex		(x,	1);
	create_insn	(x=0X1A219);
	op_hex		(x,	1);
	create_insn	(0X1A224);
	create_insn	(x=0X1A228);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A233);
	op_hex		(x,	1);
	create_insn	(x=0X1A23D);
	op_hex		(x,	1);
	create_insn	(x=0X1A240);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A245);
	op_hex		(x,	1);
	create_insn	(x=0X1A249);
	op_hex		(x,	1);
	create_insn	(x=0X1A24B);
	op_hex		(x,	1);
	create_insn	(0X1A256);
	create_insn	(0X1A25C);
	set_name	(0X1A25C,	"MakeRotationMatrix");
	create_insn	(x=0X1A25F);
	op_hex		(x,	1);
	create_insn	(x=0X1A267);
	op_stkvar	(x,	0);
	set_cmt	(0X1A26C,	"int",	0);
	create_insn	(x=0X1A270);
	op_hex		(x,	1);
	create_insn	(x=0X1A283);
	op_stkvar	(x,	0);
	create_insn	(0X1A28E);
	create_insn	(x=0X1A297);
	op_hex		(x,	1);
	set_cmt	(0X1A29D,	"int",	0);
	create_insn	(x=0X1A2A1);
	op_hex		(x,	1);
	create_insn	(x=0X1A2A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2D2);
	op_hex		(x,	1);
	create_insn	(x=0X1A2D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2DB);
	op_hex		(x,	1);
	create_insn	(x=0X1A2DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2E4);
	op_hex		(x,	1);
	create_insn	(x=0X1A2E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A301);
	op_hex		(x,	1);
	create_insn	(x=0X1A307);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A30D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A310);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A317);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A31E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A325);
	op_hex		(x,	1);
	create_insn	(x=0X1A343);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A346);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A34C);
	op_hex		(x,	1);
	create_insn	(x=0X1A34F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A353);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A356);
	op_hex		(x,	1);
	create_insn	(x=0X1A358);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A35D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A360);
	op_hex		(x,	1);
	create_insn	(x=0X1A362);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A368);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A36F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A373);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A37D);
	op_hex		(x,	1);
	create_insn	(x=0X1A383);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A389);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A393);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A397);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3A1);
	op_hex		(x,	1);
	create_insn	(x=0X1A3BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3C8);
	op_hex		(x,	1);
	create_insn	(x=0X1A3CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3D2);
	op_hex		(x,	1);
	create_insn	(x=0X1A3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3D9);
	op_stkvar	(x,	0);
	create_insn	(0X1A3E2);
	create_insn	(x=0X1A3E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3EA);
	op_hex		(x,	1);
	create_insn	(0X1A3F4);
	create_insn	(0X1A3FE);
	create_insn	(x=0X1A409);
	op_hex		(x,	1);
	create_insn	(0X1A416);
	create_insn	(x=0X1A420);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A434);
	op_hex		(x,	1);
	create_insn	(x=0X1A445);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A459);
	op_hex		(x,	1);
	create_insn	(x=0X1A45F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A46F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A47A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A47D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A487);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A48C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A493);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4AA);
	op_hex		(x,	1);
	create_insn	(x=0X1A4B1);
	op_hex		(x,	1);
	create_insn	(x=0X1A4B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4C2);
	op_stkvar	(x,	0);
	create_insn	(0X1A4CA);
	set_cmt	(0X1A4CD,	"int",	0);
	create_insn	(x=0X1A4D1);
	op_hex		(x,	1);
	create_insn	(x=0X1A4D7);
	op_stkvar	(x,	1);
	create_insn	(0X1A4F8);
	set_cmt	(0X1A4FB,	"int",	0);
	create_insn	(x=0X1A4FF);
	op_hex		(x,	1);
	create_insn	(x=0X1A505);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A50A);
	op_hex		(x,	1);
	set_cmt	(0X1A514,	"int",	0);
	create_insn	(x=0X1A518);
	op_hex		(x,	1);
	create_insn	(x=0X1A51B);
	op_stkvar	(x,	0);
	set_cmt	(0X1A524,	"int",	0);
	create_insn	(x=0X1A528);
	op_hex		(x,	1);
	create_insn	(x=0X1A52E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A53B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A545);
	op_hex		(x,	1);
	set_cmt	(0X1A54D,	"int",	0);
	create_insn	(x=0X1A54D);
	op_stkvar	(x,	0);
	set_cmt	(0X1A550,	"int",	0);
	create_insn	(x=0X1A550);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A556);
	op_hex		(x,	1);
	create_insn	(x=0X1A56B);
	op_hex		(x,	1);
	create_insn	(x=0X1A56E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A571);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A57A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A591);
	op_hex		(x,	1);
	create_insn	(x=0X1A59E);
	op_stkvar	(x,	1);
	create_insn	(0X1A5B6);
	create_insn	(x=0X1A5BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A5CB);
	op_hex		(x,	1);
	create_insn	(0X1A5D5);
	create_insn	(x=0X1A5E0);
	op_hex		(x,	1);
	create_insn	(0X1A5ED);
	create_insn	(x=0X1A5F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A60B);
	op_hex		(x,	1);
	create_insn	(x=0X1A60E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A613);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A61A);
	op_hex		(x,	1);
	create_insn	(x=0X1A62E);
	op_hex		(x,	1);
	create_insn	(x=0X1A634);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A637);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A645);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A651);
	op_hex		(x,	1);
	create_insn	(x=0X1A658);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A660);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A668);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A66D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A67E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A684);
	op_hex		(x,	1);
	create_insn	(x=0X1A687);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A68D);
	op_stkvar	(x,	0);
	create_insn	(0X1A695);
	create_insn	(x=0X1A6A0);
	op_hex		(x,	1);
	create_insn	(x=0X1A6BC);
	op_hex		(x,	1);
	create_insn	(x=0X1A6BF);
	op_stkvar	(x,	0);
	create_insn	(0X1A6C6);
	create_insn	(x=0X1A6D9);
	op_hex		(x,	1);
	create_insn	(x=0X1A6DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6EA);
	op_hex		(x,	1);
	create_insn	(x=0X1A6EE);
	op_hex		(x,	1);
	create_insn	(x=0X1A6F0);
	op_hex		(x,	1);
	create_insn	(x=0X1A706);
	op_hex		(x,	1);
	create_insn	(x=0X1A710);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A715);
	op_hex		(x,	1);
	create_insn	(x=0X1A719);
	op_hex		(x,	1);
	create_insn	(x=0X1A71B);
	op_hex		(x,	1);
	create_insn	(0X1A73A);
	create_insn	(0X1A740);
	set_cmt	(0X1A744,	"int",	0);
	create_insn	(x=0X1A744);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A74A);
	op_hex		(x,	1);
	create_insn	(x=0X1A767);
	op_hex		(x,	1);
	create_insn	(x=0X1A784);
	op_hex		(x,	1);
	create_insn	(x=0X1A7A1);
	op_hex		(x,	1);
	create_insn	(x=0X1A7BE);
	op_hex		(x,	1);
	create_insn	(0X1A7C4);
	create_insn	(x=0X1A7C7);
	op_hex		(x,	1);
	create_insn	(x=0X1A7D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7F1);
	op_stkvar	(x,	0);
	set_cmt	(0X1A7F4,	"int",	0);
	set_cmt	(0X1A7F5,	"int",	0);
	create_insn	(x=0X1A7FC);
	op_hex		(x,	1);
	create_insn	(x=0X1A7FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A80B);
	op_hex		(x,	1);
	set_cmt	(0X1A813,	"int",	0);
	create_insn	(x=0X1A813);
	op_stkvar	(x,	0);
	set_cmt	(0X1A816,	"int",	0);
	create_insn	(x=0X1A81D);
	op_hex		(x,	1);
	create_insn	(x=0X1A820);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A82C);
	op_hex		(x,	1);
	create_insn	(0X1A872);
	create_insn	(x=0X1A87B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A886);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8C3);
	op_hex		(x,	1);
	create_insn	(0X1A8C8);
	set_name	(0X1A8C8,	"TransformAndProjectObject_2");
	create_insn	(x=0X1A8D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A900);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A906);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A91A);
	op_hex		(x,	1);
	create_insn	(0X1A920);
	create_insn	(x=0X1A92E);
	op_hex		(x,	1);
	create_insn	(0X1A934);
	create_insn	(x=0X1A95D);
	op_hex		(x,	1);
	create_insn	(0X1A962);
	create_insn	(x=0X1A98B);
	op_hex		(x,	1);
	create_insn	(x=0X1A9B7);
	op_hex		(x,	1);
	create_insn	(0X1A9BC);
	set_name	(0X1A9BC,	"CheckCollisionsAndDamage");
	create_insn	(0X1A9DA);
	create_insn	(x=0X1A9F4);
	op_hex		(x,	1);
	create_insn	(0X1A9F8);
	create_insn	(x=0X1A9FB);
	op_hex		(x,	1);
	create_insn	(x=0X1AA00);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA42);
	op_hex		(x,	1);
	create_insn	(x=0X1AA50);
	op_hex		(x,	1);
	create_insn	(x=0X1AA57);
	op_hex		(x,	1);
	create_insn	(0X1AA61);
	create_insn	(0X1AA6B);
	create_insn	(0X1AA75);
	create_insn	(0X1AA7F);
	create_insn	(x=0X1AA89);
	op_hex		(x,	1);
	create_insn	(x=0X1AA93);
	op_hex		(x,	1);
	create_insn	(x=0X1AA9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AAAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AAC5);
	op_hex		(x,	1);
	create_insn	(x=0X1AAC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AADA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AADF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AAE5);
	op_stkvar	(x,	0);
	set_cmt	(0X1AAF5,	"int",	0);
	create_insn	(x=0X1AAF9);
	op_hex		(x,	1);
	create_insn	(x=0X1AB01);
	op_stkvar	(x,	0);
	create_insn	(0X1AB08);
	create_insn	(0X1AB10);
	create_insn	(x=0X1AB16);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB20);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB27);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB32);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB38);
	op_hex		(x,	1);
	set_cmt	(0X1AB46,	"int",	0);
	create_insn	(x=0X1AB4A);
	op_hex		(x,	1);
	create_insn	(x=0X1AB52);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB65);
	op_hex		(x,	1);
	create_insn	(x=0X1AB7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB84);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB92);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB97);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABAB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X1ABC0);
	create_insn	(x=0X1ABC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC04);
	op_hex		(x,	1);
	create_insn	(x=0X1AC16);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC32);
	op_hex		(x,	1);
	create_insn	(x=0X1AC34);
	op_hex		(x,	1);
	create_insn	(0X1AC3C);
	create_insn	(x=0X1AC46);
	op_hex		(x,	1);
	create_insn	(x=0X1AC48);
	op_hex		(x,	1);
	create_insn	(0X1AC50);
	create_insn	(x=0X1AC55);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC58);
	op_hex		(x,	1);
	create_insn	(0X1AC63);
	create_insn	(x=0X1AC6A);
	op_hex		(x,	1);
	create_insn	(0X1AC70);
	create_insn	(x=0X1AC7B);
	op_stkvar	(x,	0);
	create_insn	(0X1AC96);
	create_insn	(x=0X1AC98);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACB3);
	op_hex		(x,	1);
	create_insn	(x=0X1ACC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACE1);
	op_hex		(x,	1);
	create_insn	(x=0X1ACE4);
	op_stkvar	(x,	0);
	set_cmt	(0X1ACF2,	"int",	0);
	create_insn	(x=0X1ACF6);
	op_hex		(x,	1);
	create_insn	(x=0X1ACFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD05);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD16);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD1C);
	op_stkvar	(x,	0);
	create_insn	(0X1AD24);
	create_insn	(x=0X1AD27);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD2C);
	op_hex		(x,	1);
	create_insn	(x=0X1AD36);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD3C);
	op_hex		(x,	1);
	create_insn	(0X1AD4E);
	create_insn	(x=0X1AD51);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD56);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD5B);
	op_hex		(x,	1);
	create_insn	(x=0X1AD65);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD6A);
	op_hex		(x,	1);
	create_insn	(x=0X1AD87);
	op_hex		(x,	1);
	set_cmt	(0X1AD95,	"int",	0);
	create_insn	(x=0X1AD99);
	op_hex		(x,	1);
	create_insn	(x=0X1ADA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ADA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ADB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADC4);
	op_hex		(x,	1);
	create_insn	(x=0X1ADD1);
	op_stkvar	(x,	1);
	create_insn	(0X1ADE2);
	create_insn	(x=0X1ADE5);
	op_stkvar	(x,	1);
	create_insn	(0X1ADF5);
	create_insn	(x=0X1ADFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE0C);
	op_hex		(x,	1);
	set_cmt	(0X1AE1C,	"int",	0);
	create_insn	(x=0X1AE20);
	op_hex		(x,	1);
	create_insn	(x=0X1AE32);
	op_stkvar	(x,	1);
	set_cmt	(0X1AE47,	"int",	0);
	create_insn	(x=0X1AE4B);
	op_hex		(x,	1);
	create_insn	(x=0X1AE5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE67);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE71);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE76);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE7C);
	op_hex		(x,	1);
	create_insn	(x=0X1AE8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEA7);
	op_hex		(x,	1);
	create_insn	(x=0X1AEAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEB5);
	op_stkvar	(x,	1);
	create_insn	(0X1AEE4);
	create_insn	(x=0X1AEE7);
	op_hex		(x,	1);
	create_insn	(x=0X1AEF8);
	op_hex		(x,	1);
	create_insn	(0X1AEFD);
	set_cmt	(0X1AF00,	"int",	0);
	create_insn	(x=0X1AF04);
	op_hex		(x,	1);
	create_insn	(x=0X1AF1A);
	op_hex		(x,	1);
	create_insn	(x=0X1AF20);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF26);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF32);
	op_hex		(x,	1);
	create_insn	(x=0X1AF3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF46);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF49);
	op_stkvar	(x,	0);
	create_insn	(0X1AF52);
	create_insn	(x=0X1AF55);
	op_stkvar	(x,	1);
	create_insn	(0X1AF64);
	create_insn	(x=0X1AF73);
	op_hex		(x,	1);
	create_insn	(0X1AF80);
	create_insn	(x=0X1AF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF8F);
	op_hex		(x,	1);
	create_insn	(0X1AFA3);
	create_insn	(x=0X1AFC3);
	op_hex		(x,	1);
	create_insn	(x=0X1AFC5);
	op_hex		(x,	1);
	create_insn	(0X1AFCD);
	create_insn	(x=0X1AFD7);
	op_hex		(x,	1);
	create_insn	(x=0X1AFD9);
	op_hex		(x,	1);
	create_insn	(0X1AFE1);
	create_insn	(x=0X1AFF3);
	op_hex		(x,	1);
	create_insn	(x=0X1AFF8);
	op_stkvar	(x,	0);
	create_insn	(0X1B003);
	set_cmt	(0X1B006,	"int",	0);
	create_insn	(x=0X1B00A);
	op_hex		(x,	1);
	create_insn	(x=0X1B020);
	op_hex		(x,	1);
	create_insn	(0X1B026);
	create_insn	(x=0X1B03C);
	op_hex		(x,	1);
	create_insn	(0X1B05A);
	create_insn	(x=0X1B06E);
	op_hex		(x,	1);
	create_insn	(x=0X1B070);
	op_hex		(x,	1);
	create_insn	(0X1B078);
	create_insn	(x=0X1B081);
	op_hex		(x,	1);
	create_insn	(x=0X1B083);
	op_hex		(x,	1);
	create_insn	(0X1B08B);
	create_insn	(x=0X1B094);
	op_hex		(x,	1);
	create_insn	(x=0X1B097);
	op_hex		(x,	1);
	create_insn	(0X1B0A1);
	create_insn	(0X1B0AC);
	create_insn	(0X1B0BD);
	create_insn	(x=0X1B0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0F1);
	op_hex		(x,	1);
	create_insn	(x=0X1B100);
	op_hex		(x,	1);
	create_insn	(x=0X1B13E);
	op_hex		(x,	1);
	create_insn	(0X1B147);
	create_insn	(x=0X1B14A);
	op_hex		(x,	1);
	create_insn	(x=0X1B15B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B162);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B165);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B16E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B189);
	op_hex		(x,	1);
	create_insn	(x=0X1B193);
	op_stkvar	(x,	0);
	create_insn	(0X1B19E);
	set_cmt	(0X1B1A1,	"int",	0);
	create_insn	(x=0X1B1A5);
	op_hex		(x,	1);
	create_insn	(x=0X1B1BA);
	op_hex		(x,	1);
	create_insn	(0X1B1BF);
	create_insn	(x=0X1B1C2);
	op_hex		(x,	1);
	create_insn	(x=0X1B1C4);
	op_hex		(x,	1);
	create_insn	(x=0X1B1CD);
	op_hex		(x,	1);
	create_insn	(x=0X1B1D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1F8);
	op_hex		(x,	1);
	create_insn	(x=0X1B1FC);
	op_hex		(x,	1);
	create_insn	(x=0X1B1FE);
	op_hex		(x,	1);
	create_insn	(0X1B20C);
	create_insn	(x=0X1B21B);
	op_hex		(x,	1);
	create_insn	(x=0X1B221);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B227);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B22D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B230);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B235);
	op_hex		(x,	1);
	create_insn	(x=0X1B239);
	op_hex		(x,	1);
	create_insn	(x=0X1B23B);
	op_hex		(x,	1);
	create_insn	(x=0X1B243);
	op_hex		(x,	1);
	create_insn	(x=0X1B24E);
	op_hex		(x,	1);
	create_insn	(x=0X1B259);
	op_hex		(x,	1);
	create_insn	(x=0X1B263);
	op_hex		(x,	1);
	create_insn	(x=0X1B270);
	op_stkvar	(x,	0);
	create_insn	(0X1B279);
	create_insn	(x=0X1B27C);
	op_hex		(x,	1);
	create_insn	(x=0X1B27E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B281);
	op_hex		(x,	1);
	create_insn	(x=0X1B284);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B28A);
	op_stkvar	(x,	0);
	create_insn	(0X1B294);
	set_cmt	(0X1B297,	"int",	0);
	create_insn	(x=0X1B29B);
	op_hex		(x,	1);
	create_insn	(x=0X1B29E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2AF);
	op_hex		(x,	1);
	create_insn	(x=0X1B2B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2CF);
	op_stkvar	(x,	0);
	create_insn	(0X1B2D7);
	create_insn	(x=0X1B2DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B2E3);
	op_hex		(x,	1);
	create_insn	(0X1B2EC);
	create_insn	(x=0X1B2EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B2F9);
	op_hex		(x,	1);
	create_insn	(x=0X1B2FD);
	op_hex		(x,	1);
	create_insn	(x=0X1B2FF);
	op_hex		(x,	1);
	set_cmt	(0X1B309,	"int",	0);
	create_insn	(x=0X1B30D);
	op_hex		(x,	1);
	create_insn	(x=0X1B315);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B31A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B31F);
	op_hex		(x,	1);
	create_insn	(x=0X1B323);
	op_hex		(x,	1);
	create_insn	(x=0X1B325);
	op_hex		(x,	1);
	set_cmt	(0X1B32F,	"int",	0);
	create_insn	(x=0X1B335);
	op_hex		(x,	1);
	create_insn	(x=0X1B338);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B33D);
	op_hex		(x,	1);
	create_insn	(x=0X1B341);
	op_hex		(x,	1);
	create_insn	(x=0X1B343);
	op_hex		(x,	1);
	set_cmt	(0X1B34D,	"int",	0);
	create_insn	(x=0X1B34E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B354);
	op_hex		(x,	1);
	create_insn	(x=0X1B35B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B360);
	op_stkvar	(x,	0);
	set_cmt	(0X1B363,	"int",	0);
	create_insn	(x=0X1B367);
	op_hex		(x,	1);
	create_insn	(x=0X1B36A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B36D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B37A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B37F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B387);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B38C);
	op_hex		(x,	1);
	create_insn	(x=0X1B397);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B39A);
	op_hex		(x,	1);
	create_insn	(x=0X1B3A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B3A6);
	op_hex		(x,	1);
	set_cmt	(0X1B3B0,	"char *",	0);
	create_insn	(x=0X1B3B4);
	op_hex		(x,	1);
	create_insn	(x=0X1B3BE);
	op_hex		(x,	1);
	create_insn	(x=0X1B3C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3CC);
	op_hex		(x,	1);
	create_insn	(x=0X1B3D0);
	op_hex		(x,	1);
	create_insn	(x=0X1B3D2);
	op_hex		(x,	1);
	create_insn	(0X1B3DD);
	create_insn	(x=0X1B3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3E5);
	op_hex		(x,	1);
	create_insn	(x=0X1B3E9);
	op_hex		(x,	1);
	create_insn	(x=0X1B3EB);
	op_hex		(x,	1);
	set_cmt	(0X1B3F5,	"int",	0);
	create_insn	(x=0X1B3F9);
	op_hex		(x,	1);
	create_insn	(x=0X1B3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B401);
	op_hex		(x,	1);
	create_insn	(x=0X1B405);
	op_hex		(x,	1);
	create_insn	(x=0X1B407);
	op_hex		(x,	1);
	set_cmt	(0X1B411,	"int",	0);
	create_insn	(x=0X1B417);
	op_hex		(x,	1);
	create_insn	(x=0X1B41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B41F);
	op_hex		(x,	1);
	create_insn	(x=0X1B423);
	op_hex		(x,	1);
	create_insn	(x=0X1B425);
	op_hex		(x,	1);
	set_cmt	(0X1B42F,	"int",	0);
	create_insn	(x=0X1B435);
	op_hex		(x,	1);
	create_insn	(x=0X1B440);
	op_stkvar	(x,	0);
	set_cmt	(0X1B443,	"int",	0);
	create_insn	(x=0X1B447);
	op_hex		(x,	1);
	create_insn	(x=0X1B44A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B452);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B45E);
	op_hex		(x,	1);
	create_insn	(x=0X1B46E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B476);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B481);
	op_hex		(x,	1);
	create_insn	(x=0X1B485);
	op_hex		(x,	1);
	create_insn	(x=0X1B487);
	op_hex		(x,	1);
	create_insn	(x=0X1B4A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B4AB);
	op_hex		(x,	1);
	create_insn	(x=0X1B4AF);
	op_hex		(x,	1);
	create_insn	(x=0X1B4B1);
	op_hex		(x,	1);
	create_insn	(0X1B4BF);
	create_insn	(x=0X1B4E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B4E6);
	op_hex		(x,	1);
	create_insn	(x=0X1B4EA);
	op_hex		(x,	1);
	create_insn	(x=0X1B4EC);
	op_hex		(x,	1);
	create_insn	(x=0X1B4FF);
	op_hex		(x,	1);
	create_insn	(x=0X1B502);
	op_stkvar	(x,	0);
	create_insn	(0X1B50D);
	create_insn	(x=0X1B513);
	op_hex		(x,	1);
	create_insn	(0X1B51D);
	create_insn	(x=0X1B529);
	op_hex		(x,	1);
	create_insn	(x=0X1B52B);
	op_hex		(x,	1);
	create_insn	(x=0X1B533);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B542);
	op_hex		(x,	1);
	create_insn	(x=0X1B544);
	op_hex		(x,	1);
	create_insn	(0X1B54C);
	create_insn	(x=0X1B551);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B557);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B565);
	op_hex		(x,	1);
	create_insn	(x=0X1B57B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B586);
	op_hex		(x,	1);
	create_insn	(x=0X1B58E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B594);
	op_hex		(x,	1);
	set_cmt	(0X1B59E,	"char *",	0);
	create_insn	(x=0X1B5A2);
	op_hex		(x,	1);
	create_insn	(x=0X1B5AC);
	op_hex		(x,	1);
	create_insn	(0X1B5BE);
	create_insn	(0X1B5C8);
	create_insn	(x=0X1B5D7);
	op_hex		(x,	1);
	create_insn	(0X1B5E4);
	set_cmt	(0X1B5EE,	"int",	0);
	create_insn	(x=0X1B5F2);
	op_hex		(x,	1);
	create_insn	(x=0X1B5F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B5F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B5FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B602);
	op_stkvar	(x,	0);
	create_insn	(0X1B60B);
	create_insn	(x=0X1B612);
	op_hex		(x,	1);
	set_cmt	(0X1B618,	"int",	0);
	create_insn	(x=0X1B61C);
	op_hex		(x,	1);
	create_insn	(x=0X1B626);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B629);
	op_hex		(x,	1);
	create_insn	(x=0X1B62F);
	op_hex		(x,	1);
	create_insn	(x=0X1B632);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B63A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B63D);
	op_hex		(x,	1);
	create_insn	(x=0X1B643);
	op_hex		(x,	1);
	create_insn	(x=0X1B646);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B659);
	op_hex		(x,	1);
	create_insn	(0X1B65E);
	create_insn	(x=0X1B665);
	op_hex		(x,	1);
	create_insn	(x=0X1B66B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B678);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B67B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B681);
	op_hex		(x,	1);
	create_insn	(x=0X1B684);
	op_stkvar	(x,	0);
	set_cmt	(0X1B687,	"int",	0);
	set_cmt	(0X1B688,	"int",	0);
	create_insn	(x=0X1B688);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B68E);
	op_hex		(x,	1);
	create_insn	(x=0X1B695);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B698);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B69B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B6A1);
	op_hex		(x,	1);
	create_insn	(x=0X1B6AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B6AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B6BC);
	op_hex		(x,	1);
	create_insn	(0X1B6C2);
	create_insn	(x=0X1B6C9);
	op_hex		(x,	1);
	create_insn	(0X1B6D2);
	set_name	(0X1B6D8,	"TriggerSoundEffect");
	create_insn	(0X1B6E2);
	create_insn	(0X1B6FB);
	create_insn	(x=0X1B702);
	op_hex		(x,	1);
	set_cmt	(0X1B708,	"int",	0);
	create_insn	(x=0X1B70C);
	op_hex		(x,	1);
	create_insn	(x=0X1B722);
	op_hex		(x,	1);
	create_insn	(0X1B735);
	create_insn	(0X1B73F);
	create_insn	(0X1B749);
	create_insn	(x=0X1B75F);
	op_hex		(x,	1);
	create_insn	(x=0X1B766);
	op_hex		(x,	1);
	create_insn	(x=0X1B768);
	op_hex		(x,	1);
	create_insn	(x=0X1B777);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B786);
	op_hex		(x,	1);
	create_insn	(x=0X1B793);
	op_hex		(x,	1);
	create_insn	(x=0X1B795);
	op_hex		(x,	1);
	create_insn	(0X1B7B4);
	create_insn	(0X1B7C0);
	set_cmt	(0X1B7C2,	"int",	0);
	create_insn	(x=0X1B7C6);
	op_hex		(x,	1);
	create_insn	(x=0X1B7C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B7D6);
	op_hex		(x,	1);
	create_insn	(x=0X1B7D8);
	op_hex		(x,	1);
	create_insn	(x=0X1B7E1);
	op_hex		(x,	1);
	create_insn	(0X1B7ED);
	create_insn	(x=0X1B7EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B7F9);
	op_stkvar	(x,	0);
	create_insn	(0X1B811);
	create_insn	(x=0X1B815);
	op_hex		(x,	1);
	create_insn	(x=0X1B817);
	op_hex		(x,	1);
	create_insn	(0X1B823);
	set_cmt	(0X1B826,	"int",	0);
	create_insn	(x=0X1B82A);
	op_hex		(x,	1);
	create_insn	(x=0X1B83E);
	op_hex		(x,	1);
	create_insn	(x=0X1B850);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B880);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B888);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B892);
	op_hex		(x,	1);
	create_insn	(x=0X1B894);
	op_hex		(x,	1);
	create_insn	(0X1B8A7);
	set_cmt	(0X1B8AA,	"int",	0);
	create_insn	(x=0X1B8AE);
	op_hex		(x,	1);
	create_insn	(0X1B8B3);
	create_insn	(x=0X1B8BB);
	op_stkvar	(x,	0);
	create_insn	(0X1B8CD);
	set_cmt	(0X1B8CF,	"int",	0);
	create_insn	(x=0X1B8D3);
	op_hex		(x,	1);
	create_insn	(x=0X1B8DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B8DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B8E5);
	op_stkvar	(x,	1);
	create_insn	(0X1B8ED);
	create_insn	(x=0X1B8FC);
	op_hex		(x,	1);
	create_insn	(x=0X1B923);
	op_hex		(x,	1);
	set_cmt	(0X1B92D,	"int",	0);
	create_insn	(x=0X1B93E);
	op_hex		(x,	1);
	set_cmt	(0X1B940,	"char *",	0);
	create_insn	(x=0X1B947);
	op_hex		(x,	1);
	create_insn	(x=0X1B94A);
	op_hex		(x,	1);
	create_insn	(0X1B96B);
	create_insn	(0X1B97C);
	create_insn	(0X1B986);
	create_insn	(x=0X1B989);
	op_hex		(x,	1);
	create_insn	(x=0X1B98C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9B1);
	op_hex		(x,	1);
	create_insn	(x=0X1B9B8);
	op_hex		(x,	1);
	create_insn	(x=0X1B9BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9C4);
	op_hex		(x,	1);
	create_insn	(x=0X1B9CB);
	op_hex		(x,	1);
	set_cmt	(0X1B9D1,	"int",	0);
	set_cmt	(0X1B9D5,	"int",	0);
	set_cmt	(0X1B9DD,	"char *",	0);
	create_insn	(x=0X1B9E1);
	op_hex		(x,	1);
	create_insn	(x=0X1B9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9EF);
	op_hex		(x,	1);
	create_insn	(x=0X1B9F2);
	op_hex		(x,	1);
	set_cmt	(0X1B9FB,	"char *",	0);
	create_insn	(x=0X1B9FF);
	op_hex		(x,	1);
	set_cmt	(0X1BA05,	"int",	0);
	set_cmt	(0X1BA09,	"int",	0);
	set_cmt	(0X1BA0D,	"char *",	0);
	create_insn	(x=0X1BA11);
	op_hex		(x,	1);
	create_insn	(x=0X1BA14);
	op_hex		(x,	1);
	set_cmt	(0X1BA1F,	"char *",	0);
	create_insn	(x=0X1BA23);
	op_hex		(x,	1);
	create_insn	(x=0X1BA26);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA31);
	op_hex		(x,	1);
	set_cmt	(0X1BA33,	"char *",	0);
	create_insn	(x=0X1BA3A);
	op_hex		(x,	1);
	create_insn	(x=0X1BA41);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA4C);
	op_hex		(x,	1);
	create_insn	(x=0X1BA4F);
	op_hex		(x,	1);
	set_cmt	(0X1BA51,	"char *",	0);
	create_insn	(x=0X1BA58);
	op_hex		(x,	1);
	create_insn	(0X1BA64);
	set_cmt	(0X1BA6B,	"char *",	0);
	create_insn	(x=0X1BA6F);
	op_hex		(x,	1);
	create_insn	(x=0X1BA72);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA7D);
	op_hex		(x,	1);
	set_cmt	(0X1BA86,	"char *",	0);
	create_insn	(x=0X1BA8A);
	op_hex		(x,	1);
	set_cmt	(0X1BA90,	"int",	0);
	set_cmt	(0X1BA94,	"int",	0);
	set_cmt	(0X1BA98,	"char *",	0);
	create_insn	(x=0X1BA9C);
	op_hex		(x,	1);
	create_insn	(x=0X1BA9F);
	op_hex		(x,	1);
	set_cmt	(0X1BAAA,	"char *",	0);
	create_insn	(x=0X1BAAE);
	op_hex		(x,	1);
	create_insn	(x=0X1BACE);
	op_hex		(x,	1);
	set_cmt	(0X1BAD4,	"int",	0);
	create_insn	(x=0X1BAD8);
	op_hex		(x,	1);
	create_insn	(x=0X1BAED);
	op_hex		(x,	1);
	create_insn	(0X1BAF3);
	set_cmt	(0X1BAFF,	"int",	0);
	set_cmt	(0X1BB03,	"int",	0);
	set_cmt	(0X1BB0B,	"char *",	0);
	create_insn	(x=0X1BB0F);
	op_hex		(x,	1);
	create_insn	(0X1BB15);
	set_cmt	(0X1BB21,	"int",	0);
	set_cmt	(0X1BB25,	"int",	0);
	set_cmt	(0X1BB2D,	"char *",	0);
	create_insn	(x=0X1BB31);
	op_hex		(x,	1);
	create_insn	(x=0X1BB36);
	op_hex		(x,	1);
	create_insn	(x=0X1BB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB4F);
	op_hex		(x,	1);
	create_insn	(x=0X1BB52);
	op_hex		(x,	1);
	create_insn	(x=0X1BB59);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB60);
	op_hex		(x,	1);
	create_insn	(x=0X1BB7C);
	op_hex		(x,	1);
	set_cmt	(0X1BB86,	"int",	0);
	set_cmt	(0X1BB8A,	"int",	0);
	set_cmt	(0X1BB92,	"char *",	0);
	create_insn	(x=0X1BB96);
	op_hex		(x,	1);
	set_cmt	(0X1BBA4,	"int",	0);
	create_insn	(x=0X1BBA8);
	op_hex		(x,	1);
	create_insn	(x=0X1BBBD);
	op_hex		(x,	1);
	create_insn	(0X1BBCD);
	create_insn	(x=0X1BBD7);
	op_hex		(x,	1);
	create_insn	(0X1BBE1);
	create_insn	(x=0X1BBF9);
	op_hex		(x,	1);
	create_insn	(0X1BC06);
	create_insn	(0X1BC12);
	set_cmt	(0X1BC14,	"int",	0);
	create_insn	(x=0X1BC18);
	op_hex		(x,	1);
	create_insn	(x=0X1BC1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BC35);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BC42);
	op_stkvar	(x,	1);
	set_cmt	(0X1BC51,	"int",	0);
	create_insn	(x=0X1BC55);
	op_hex		(x,	1);
	create_insn	(x=0X1BC69);
	op_hex		(x,	1);
	create_insn	(x=0X1BC7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BC9B);
	op_hex		(x,	1);
	create_insn	(x=0X1BC9D);
	op_hex		(x,	1);
	create_insn	(0X1BCAE);
	set_cmt	(0X1BCB1,	"int",	0);
	create_insn	(x=0X1BCB5);
	op_hex		(x,	1);
	create_insn	(x=0X1BCB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BCCA);
	op_hex		(x,	1);
	create_insn	(0X1BCD7);
	create_insn	(0X1BCE1);
	create_insn	(0X1BCEB);
	create_insn	(x=0X1BCEE);
	op_hex		(x,	1);
	create_insn	(x=0X1BCF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BCF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD28);
	op_hex		(x,	1);
	create_insn	(x=0X1BD31);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD49);
	op_hex		(x,	1);
	create_insn	(x=0X1BD50);
	op_hex		(x,	1);
	set_cmt	(0X1BD56,	"int",	0);
	set_cmt	(0X1BD5A,	"int",	0);
	set_cmt	(0X1BD62,	"char *",	0);
	create_insn	(x=0X1BD66);
	op_hex		(x,	1);
	create_insn	(x=0X1BD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD75);
	op_stkvar	(x,	0);
	set_cmt	(0X1BD83,	"char *",	0);
	create_insn	(x=0X1BD87);
	op_hex		(x,	1);
	create_insn	(x=0X1BD8A);
	op_stkvar	(x,	1);
	set_cmt	(0X1BD98,	"char *",	0);
	create_insn	(x=0X1BD9C);
	op_hex		(x,	1);
	set_cmt	(0X1BDA2,	"int",	0);
	set_cmt	(0X1BDA6,	"int",	0);
	set_cmt	(0X1BDAE,	"char *",	0);
	create_insn	(x=0X1BDB2);
	op_hex		(x,	1);
	create_insn	(x=0X1BDB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDC3);
	op_hex		(x,	1);
	set_cmt	(0X1BDCD,	"int",	0);
	set_cmt	(0X1BDD1,	"int",	0);
	set_cmt	(0X1BDD9,	"char *",	0);
	create_insn	(x=0X1BDDD);
	op_hex		(x,	1);
	create_insn	(x=0X1BDE7);
	op_hex		(x,	1);
	create_insn	(x=0X1BDF1);
	op_stkvar	(x,	1);
	set_cmt	(0X1BDFB,	"int",	0);
	set_cmt	(0X1BDFC,	"__int32",	0);
	set_cmt	(0X1BE06,	"int",	0);
	set_cmt	(0X1BE07,	"__int32",	0);
	create_insn	(x=0X1BE0D);
	op_hex		(x,	1);
	create_insn	(x=0X1BE0F);
	op_hex		(x,	1);
	create_insn	(0X1BE17);
	set_cmt	(0X1BE1A,	"int",	0);
	set_cmt	(0X1BE1B,	"int",	0);
	create_insn	(x=0X1BE22);
	op_hex		(x,	1);
	set_cmt	(0X1BE25,	"int",	0);
	create_insn	(x=0X1BE29);
	op_hex		(x,	1);
	create_insn	(x=0X1BE2C);
	op_hex		(x,	1);
	create_insn	(x=0X1BE59);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BE5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE73);
	op_hex		(x,	1);
	set_cmt	(0X1BE7D,	"int",	0);
	create_insn	(x=0X1BE85);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE95,	"char *",	0);
	create_insn	(x=0X1BE99);
	op_hex		(x,	1);
	create_insn	(0X1BEA6);
	create_insn	(0X1BEB0);
	create_insn	(x=0X1BEB4);
	op_hex		(x,	1);
	create_insn	(x=0X1BEB6);
	op_hex		(x,	1);
	create_insn	(x=0X1BEC5);
	op_stkvar	(x,	0);
	set_cmt	(0X1BED0,	"int",	0);
	create_insn	(0X1BED0);
	create_insn	(x=0X1BED7);
	op_hex		(x,	1);
	create_insn	(0X1BEE2);
	create_insn	(x=0X1BEE5);
	op_stkvar	(x,	0);
	set_cmt	(0X1BEEB,	"int",	0);
	create_insn	(x=0X1BEEC);
	op_stkvar	(x,	1);
	set_cmt	(0X1BEF1,	"int",	0);
	create_insn	(x=0X1BEF5);
	op_hex		(x,	1);
	create_insn	(x=0X1BEFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF07);
	op_hex		(x,	1);
	create_insn	(x=0X1BF0D);
	op_stkvar	(x,	0);
	set_cmt	(0X1BF10,	"int",	0);
	set_cmt	(0X1BF11,	"int",	0);
	create_insn	(x=0X1BF18);
	op_hex		(x,	1);
	create_insn	(x=0X1BF1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF22);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF2C);
	op_hex		(x,	1);
	create_insn	(x=0X1BF35);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF42);
	op_hex		(x,	1);
	set_cmt	(0X1BF53,	"int",	0);
	set_cmt	(0X1BF54,	"int",	0);
	create_insn	(x=0X1BF5B);
	op_hex		(x,	1);
	create_insn	(x=0X1BF5E);
	op_hex		(x,	1);
	create_insn	(x=0X1BF60);
	op_hex		(x,	1);
	create_insn	(0X1BF76);
	set_cmt	(0X1BF79,	"int",	0);
	create_insn	(x=0X1BF7D);
	op_hex		(x,	1);
	create_insn	(x=0X1BF93);
	op_hex		(x,	1);
	set_cmt	(0X1BF99,	"int",	0);
	create_insn	(x=0X1BF9D);
	op_hex		(x,	1);
	create_insn	(x=0X1BFB3);
	op_hex		(x,	1);
	create_insn	(x=0X1BFB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BFBC);
	op_stkvar	(x,	0);
	create_insn	(0X1BFC5);
	create_insn	(0X1BFCF);
	create_insn	(x=0X1BFDE);
	op_hex		(x,	1);
	set_cmt	(0X1BFF3,	"int",	0);
	set_cmt	(0X1BFF4,	"int",	0);
	create_insn	(x=0X1BFFB);
	op_hex		(x,	1);
	create_insn	(x=0X1C010);
	op_hex		(x,	1);
	create_insn	(x=0X1C01D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C032);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C03A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C045);
	op_hex		(x,	1);
	create_insn	(x=0X1C050);
	op_hex		(x,	1);
	create_insn	(0X1C058);
	create_insn	(x=0X1C066);
	op_hex		(x,	1);
	create_insn	(x=0X1C071);
	op_hex		(x,	1);
	set_cmt	(0X1C07A,	"int",	0);
	create_insn	(x=0X1C07E);
	op_hex		(x,	1);
	create_insn	(x=0X1C097);
	op_hex		(x,	1);
	create_insn	(x=0X1C0AF);
	op_hex		(x,	1);
	create_insn	(x=0X1C0CC);
	op_hex		(x,	1);
	set_cmt	(0X1C0D2,	"int",	0);
	create_insn	(x=0X1C0D6);
	op_hex		(x,	1);
	create_insn	(x=0X1C0F2);
	op_hex		(x,	1);
	create_insn	(x=0X1C10E);
	op_hex		(x,	1);
	create_insn	(x=0X1C12A);
	op_hex		(x,	1);
	create_insn	(x=0X1C146);
	op_hex		(x,	1);
	set_cmt	(0X1C171,	"int",	0);
	create_insn	(x=0X1C178);
	op_hex		(x,	1);
	create_insn	(x=0X1C190);
	op_hex		(x,	1);
	create_insn	(x=0X1C1B0);
	op_hex		(x,	1);
	set_name	(0X1C1B3,	"UpdateGroundObjectStates");
	create_insn	(0X1C1B9);
	create_insn	(x=0X1C1BC);
	op_hex		(x,	1);
	create_insn	(0X1C1CA);
	create_insn	(x=0X1C1D1);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1C1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1D9);
	op_hex		(x,	1);
	create_insn	(x=0X1C1DB);
	op_hex		(x,	1);
	create_insn	(x=0X1C1DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C1E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C1EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C1FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C200);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C203);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C206);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C20C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C20F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C213);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C219);
	op_hex		(x,	1);
	create_insn	(x=0X1C21C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C21F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C222);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C225);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C22B);
	op_hex		(x,	1);
	create_insn	(x=0X1C22E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C231);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C234);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C237);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C23D);
	op_hex		(x,	1);
	create_insn	(x=0X1C240);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C243);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C246);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C249);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C24F);
	op_hex		(x,	1);
	create_insn	(x=0X1C255);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C258);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C25B);
	op_hex		(x,	1);
	create_insn	(x=0X1C260);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C263);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C266);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C26C);
	op_hex		(x,	1);
	create_insn	(x=0X1C26F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C272);
	op_hex		(x,	1);
	create_insn	(x=0X1C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C27A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C27D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C283);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C289);
	op_hex		(x,	1);
	create_insn	(x=0X1C28C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C28F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C292);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C295);
	op_hex		(x,	1);
	create_insn	(x=0X1C297);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C29B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2A1);
	op_hex		(x,	1);
	create_insn	(x=0X1C2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2A7);
	op_hex		(x,	1);
	create_insn	(x=0X1C2A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2B9);
	op_hex		(x,	1);
	create_insn	(x=0X1C2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2BF);
	op_hex		(x,	1);
	create_insn	(x=0X1C2C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2D6);
	op_hex		(x,	1);
	create_insn	(x=0X1C2D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E5);
	op_hex		(x,	1);
	create_insn	(x=0X1C2EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2F0);
	op_hex		(x,	1);
	create_insn	(0X1C2F8);
	create_insn	(x=0X1C2FB);
	op_hex		(x,	1);
	set_cmt	(0X1C316,	"int",	0);
	set_cmt	(0X1C31A,	"int",	0);
	set_cmt	(0X1C322,	"char *",	0);
	create_insn	(x=0X1C326);
	op_hex		(x,	1);
	set_cmt	(0X1C32C,	"int",	0);
	create_insn	(x=0X1C330);
	op_hex		(x,	1);
	create_insn	(x=0X1C333);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C338);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C350);
	op_hex		(x,	1);
	create_insn	(x=0X1C353);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C35A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C35D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C364);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C36A);
	op_hex		(x,	1);
	create_insn	(0X1C371);
	set_cmt	(0X1C37E,	"int",	0);
	create_insn	(x=0X1C37E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C384);
	op_hex		(x,	1);
	create_insn	(x=0X1C38A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C392);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C39E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C3C1);
	op_hex		(x,	1);
	set_cmt	(0X1C3E1,	"int",	0);
	set_cmt	(0X1C3EB,	"int",	0);
	set_cmt	(0X1C3EC,	"char *",	0);
	create_insn	(x=0X1C3EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C3F2);
	op_hex		(x,	1);
	create_insn	(x=0X1C3F5);
	op_hex		(x,	1);
	set_cmt	(0X1C3FE,	"char *",	0);
	create_insn	(x=0X1C3FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C404);
	op_hex		(x,	1);
	create_insn	(0X1C40B);
	create_insn	(x=0X1C40E);
	op_hex		(x,	1);
	set_cmt	(0X1C418,	"char *",	0);
	create_insn	(x=0X1C41C);
	op_hex		(x,	1);
	set_cmt	(0X1C426,	"char *",	0);
	create_insn	(x=0X1C427);
	op_stkvar	(x,	1);
	set_cmt	(0X1C42E,	"int",	0);
	create_insn	(x=0X1C432);
	op_hex		(x,	1);
	set_cmt	(0X1C439,	"char *",	0);
	create_insn	(x=0X1C43D);
	op_hex		(x,	1);
	set_cmt	(0X1C447,	"char *",	0);
	create_insn	(x=0X1C44B);
	op_hex		(x,	1);
	set_cmt	(0X1C455,	"char *",	0);
	create_insn	(x=0X1C456);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C459);
	op_hex		(x,	1);
	create_insn	(x=0X1C45C);
	op_hex		(x,	1);
	set_cmt	(0X1C464,	"int",	0);
	create_insn	(x=0X1C468);
	op_hex		(x,	1);
	set_cmt	(0X1C46F,	"char *",	0);
	create_insn	(x=0X1C473);
	op_hex		(x,	1);
	set_cmt	(0X1C47D,	"char *",	0);
	create_insn	(x=0X1C481);
	op_hex		(x,	1);
	create_insn	(0X1C488);
	create_insn	(x=0X1C48B);
	op_hex		(x,	1);
	create_insn	(x=0X1C491);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C494);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C497);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C49E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4AF);
	op_hex		(x,	1);
	create_insn	(x=0X1C4C5);
	op_hex		(x,	1);
	create_insn	(x=0X1C4C7);
	op_hex		(x,	1);
	create_insn	(x=0X1C4CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4E3);
	op_hex		(x,	1);
	create_insn	(x=0X1C4E5);
	op_hex		(x,	1);
	create_insn	(x=0X1C4ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C509);
	op_hex		(x,	1);
	create_insn	(x=0X1C50B);
	op_hex		(x,	1);
	create_insn	(x=0X1C513);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C516);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C519);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C51C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C525);
	op_hex		(x,	1);
	create_insn	(x=0X1C528);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C52B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C52E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C531);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C534);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C53E);
	op_hex		(x,	1);
	create_insn	(x=0X1C541);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C544);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C547);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C54A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C54D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C557);
	op_hex		(x,	1);
	create_insn	(x=0X1C55A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C55D);
	op_stkvar	(x,	0);
	create_insn	(0X1C56D);
	create_insn	(x=0X1C574);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1C577);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1C57A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1C57D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1C580);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C583);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C58D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C594);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C599);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C59F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5B4);
	op_stkvar	(x,	0);
	set_cmt	(0X1C5B7,	"__int32",	0);
	create_insn	(x=0X1C5B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5BD);
	op_stkvar	(x,	1);
	set_cmt	(0X1C5C9,	"__int32",	0);
	create_insn	(x=0X1C5D3);
	op_stkvar	(x,	0);
	set_cmt	(0X1C5D6,	"__int32",	0);
	create_insn	(x=0X1C5D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5DC);
	op_stkvar	(x,	1);
	set_cmt	(0X1C5E8,	"__int32",	0);
	create_insn	(x=0X1C5EF);
	op_hex		(x,	1);
	create_insn	(x=0X1C5F1);
	op_hex		(x,	1);
	create_insn	(0X1C607);
	create_insn	(x=0X1C60E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C611);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C616);
	op_hex		(x,	1);
	create_insn	(x=0X1C618);
	op_hex		(x,	1);
	create_insn	(0X1C620);
	create_insn	(0X1C661);
	create_insn	(x=0X1C664);
	op_hex		(x,	1);
	create_insn	(x=0X1C667);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C66A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C66D);
	op_hex		(x,	1);
	create_insn	(x=0X1C676);
	op_hex		(x,	1);
	create_insn	(x=0X1C67A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C67D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C680);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C683);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C686);
	op_hex		(x,	1);
	create_insn	(x=0X1C68F);
	op_hex		(x,	1);
	create_insn	(x=0X1C693);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C696);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C699);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C69F);
	op_hex		(x,	1);
	create_insn	(x=0X1C6A8);
	op_hex		(x,	1);
	create_insn	(x=0X1C6AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C6AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C6B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6B5);
	op_stkvar	(x,	1);
	create_insn	(0X1C6BA);
	create_insn	(0X1C6BE);
	set_name	(0X1C6BE,	"MatMul");
	create_insn	(x=0X1C6C1);
	op_hex		(x,	1);
	create_insn	(x=0X1C6C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6D8);
	op_hex		(x,	1);
	create_insn	(x=0X1C6DA);
	op_hex		(x,	1);
	create_insn	(0X1C6E2);
	create_insn	(x=0X1C6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6EA);
	op_hex		(x,	1);
	create_insn	(x=0X1C6EC);
	op_hex		(x,	1);
	create_insn	(0X1C6F4);
	create_insn	(x=0X1C6F9);
	op_hex		(x,	1);
	create_insn	(0X1C706);
	create_insn	(x=0X1C710);
	op_hex		(x,	1);
	create_insn	(x=0X1C712);
	op_hex		(x,	1);
	create_insn	(x=0X1C71A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C729);
	op_hex		(x,	1);
	create_insn	(x=0X1C72B);
	op_hex		(x,	1);
	create_insn	(0X1C733);
	create_insn	(x=0X1C738);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C742);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C748);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C74D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C758);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C761);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C766);
	op_stkvar	(x,	1);
	create_insn	(0X1C76B);
	create_insn	(x=0X1C76D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C773);
	op_stkvar	(x,	1);
	create_insn	(0X1C796);
	create_insn	(0X1C798);
	create_insn	(0X1C79D);
	create_insn	(0X1C7A2);
	create_insn	(x=0X1C7A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7BC);
	op_hex		(x,	1);
	create_insn	(0X1C7C1);
	create_insn	(0X1C7C6);
	create_insn	(x=0X1C7CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7E0);
	op_hex		(x,	1);
	create_insn	(0X1C7E5);
	create_insn	(0X1C7EA);
	create_insn	(x=0X1C7ED);
	op_hex		(x,	1);
	create_insn	(x=0X1C7F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C802);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C809);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C812);
	op_hex		(x,	1);
	create_insn	(x=0X1C818);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C81B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C821);
	op_hex		(x,	1);
	create_insn	(0X1C829);
	create_insn	(0X1C82D);
	set_name	(0X1C82D,	"LoadDigitalSoundBin");
	set_cmt	(0X1C83A,	"int",	0);
	create_insn	(x=0X1C841);
	op_hex		(x,	1);
	create_insn	(x=0X1C84C);
	op_hex		(x,	1);
	create_insn	(x=0X1C84E);
	op_hex		(x,	1);
	create_insn	(0X1C856);
	create_insn	(0X1C860);
	create_insn	(0X1C864);
	create_insn	(x=0X1C867);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C86E);
	op_hex		(x,	1);
	create_insn	(x=0X1C875);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C87B);
	op_hex		(x,	1);
	create_insn	(0X1C888);
	create_insn	(0X1C891);
	create_insn	(x=0X1C893);
	op_stkvar	(x,	1);
	create_insn	(0X1C8A0);
	create_insn	(0X1C8A4);
	set_name	(0X1C8A4,	"DrawCockpitInstruments");
	create_insn	(x=0X1C8A7);
	op_hex		(x,	1);
	create_insn	(x=0X1C8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8B5);
	op_hex		(x,	1);
	create_insn	(x=0X1C8BC);
	op_hex		(x,	1);
	create_insn	(x=0X1C8BF);
	op_stkvar	(x,	0);
	create_insn	(0X1C8D6);
	create_insn	(0X1C8DA);
	create_insn	(0X1C8DE);
	set_name	(0X1C8DE,	"load15Flt3d3");
	create_insn	(x=0X1C8E1);
	op_hex		(x,	1);
	create_insn	(x=0X1C8E4);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1C8E8);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C8EB,	"arg_0",	0);
	create_insn	(x=0X1C8EF);
	op_hex		(x,	1);
	create_insn	(x=0X1C8F2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1C8F6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C8F9,	"char *",	0);
	create_insn	(x=0X1C8FD);
	op_hex		(x,	1);
	create_insn	(x=0X1C907);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C90A,	"char *",	0);
	set_cmt	(0X1C912,	"size_t",	0);
	create_insn	(0X1C912);
	set_cmt	(0X1C919,	"size_t",	0);
	create_insn	(x=0X1C91E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C921,	"void *",	0);
	create_insn	(x=0X1C925);
	op_hex		(x,	1);
	set_cmt	(0X1C928,	"size_t",	0);
	set_cmt	(0X1C92F,	"size_t",	0);
	create_insn	(x=0X1C934);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C937,	"void *",	0);
	create_insn	(x=0X1C93B);
	op_hex		(x,	1);
	set_cmt	(0X1C93E,	"size_t",	0);
	set_cmt	(0X1C942,	"size_t",	0);
	create_insn	(x=0X1C94A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C94D,	"void *",	0);
	create_insn	(x=0X1C951);
	op_hex		(x,	1);
	set_cmt	(0X1C954,	"size_t",	0);
	set_cmt	(0X1C95B,	"size_t",	0);
	create_insn	(x=0X1C960);
	op_stkvar	(x,	1);
	set_cmt	(0X1C963,	"void *",	0);
	create_insn	(x=0X1C967);
	op_hex		(x,	1);
	create_insn	(x=0X1C96A);
	op_stkvar	(x,	1);
	set_cmt	(0X1C96D,	"struct SREGS *",	0);
	create_insn	(x=0X1C971);
	op_hex		(x,	1);
	create_insn	(x=0X1C974);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X228D0);
	op_plain_offset	(x,	129,	0X228D0);
	create_insn	(x=0X1C979);
	op_stkvar	(x,	0);
	op_seg		(x,	1);
	create_insn	(x=0X1C980);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C98B);
	op_stkvar	(x,	0);
	set_cmt	(0X1C98E,	"size_t",	0);
	set_cmt	(0X1C992,	"size_t",	0);
	create_insn	(x=0X1C997);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C99A,	"void *",	0);
	create_insn	(x=0X1C99E);
	op_hex		(x,	1);
	set_cmt	(0X1C9A1,	"unsigned int",	0);
	create_insn	(x=0X1C9A1);
	op_stkvar	(x,	0);
	set_cmt	(0X1C9A4,	"unsigned int",	0);
	create_insn	(x=0X1C9A4);
	op_stkvar	(x,	0);
	set_cmt	(0X1C9A7,	"unsigned int",	0);
	create_insn	(x=0X1C9A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9AA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1C9AD,	"unsigned int",	0);
	set_cmt	(0X1C9AE,	"unsigned int",	0);
	create_insn	(x=0X1C9AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9B4);
	op_hex		(x,	1);
	create_insn	(x=0X1C9B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9C0);
	op_stkvar	(x,	0);
	set_cmt	(0X1C9C6,	"FILE *",	0);
	create_insn	(0X1C9D2);
	set_name	(0X1C9D2,	"Load3DT_TerrainData");
	create_insn	(x=0X1C9D5);
	op_hex		(x,	1);
	create_insn	(x=0X1C9D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9DE);
	op_hex		(x,	1);
	create_insn	(x=0X1C9E1);
	op_stkvar	(x,	0);
	set_name	(0X1C9EE,	"Load3DG_GraphicsData");
	create_insn	(0X1C9F0);
	create_insn	(x=0X1C9F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA04);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA07);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA22);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA25);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA2F);
	op_hex		(x,	1);
	create_insn	(x=0X1CA45);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA48);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA67);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA71);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA80);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA92);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CAAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CAB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CAC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CAC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAC7);
	op_stkvar	(x,	0);
	set_cmt	(0X1CACA,	"__int32",	0);
	create_insn	(x=0X1CACA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAD0);
	op_hex		(x,	1);
	create_insn	(x=0X1CADF);
	op_stkvar	(x,	0);
	set_cmt	(0X1CAE2,	"__int32",	0);
	create_insn	(x=0X1CAE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAE8);
	op_hex		(x,	1);
	create_insn	(x=0X1CAF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB04);
	op_hex		(x,	1);
	create_insn	(x=0X1CB0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB15);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB21);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB31);
	op_seg		(x,	1);
	create_insn	(x=0X1CB3B);
	op_hex		(x,	1);
	create_insn	(0X1CB42);
	create_insn	(x=0X1CB45);
	op_hex		(x,	1);
	create_insn	(x=0X1CB4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB63);
	op_hex		(x,	1);
	create_insn	(x=0X1CB6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB73);
	op_hex		(x,	1);
	create_insn	(x=0X1CB76);
	op_stkvar	(x,	0);
	create_insn	(0X1CB8A);
	create_insn	(x=0X1CB92);
	op_stkvar	(x,	0);
	create_insn	(0X1CB9B);
	create_insn	(x=0X1CBA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBCF);
	op_hex		(x,	1);
	create_insn	(x=0X1CBD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBDE);
	op_hex		(x,	1);
	create_insn	(x=0X1CBE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBE8);
	op_hex		(x,	1);
	create_insn	(x=0X1CBEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CBF7);
	op_hex		(x,	1);
	create_insn	(x=0X1CBFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC01);
	op_hex		(x,	1);
	create_insn	(x=0X1CC04);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC07);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC2B);
	op_hex		(x,	1);
	create_insn	(x=0X1CC2D);
	op_hex		(x,	1);
	create_insn	(x=0X1CC2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC32);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC38);
	op_stkvar	(x,	1);
	create_insn	(0X1CC42);
	create_insn	(x=0X1CC4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC8A);
	op_stkvar	(x,	0);
	set_cmt	(0X1CC8D,	"int",	0);
	create_insn	(x=0X1CC8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC93);
	op_hex		(x,	1);
	set_cmt	(0X1CC9E,	"int",	0);
	create_insn	(x=0X1CC9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCA4);
	op_hex		(x,	1);
	create_insn	(x=0X1CCAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCB2);
	op_hex		(x,	1);
	create_insn	(x=0X1CCB4);
	op_hex		(x,	1);
	create_insn	(x=0X1CCBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCC0);
	op_hex		(x,	1);
	create_insn	(x=0X1CCC2);
	op_hex		(x,	1);
	create_insn	(x=0X1CCC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCD9);
	op_hex		(x,	1);
	create_insn	(x=0X1CCDB);
	op_hex		(x,	1);
	create_insn	(x=0X1CCDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCE9);
	op_hex		(x,	1);
	create_insn	(x=0X1CCEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD02);
	op_stkvar	(x,	0);
	set_cmt	(0X1CD07,	"int",	0);
	create_insn	(x=0X1CD07);
	op_stkvar	(x,	0);
	set_cmt	(0X1CD0A,	"int",	0);
	create_insn	(x=0X1CD0A);
	op_stkvar	(x,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X1CD10);
	op_hex		(x,	1);
	create_insn	(x=0X1CD13);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD18);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD24);
	op_hex		(x,	1);
	create_insn	(x=0X1CD29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD2E);
	op_stkvar	(x,	0);
	set_cmt	(0X1CD31,	"int",	0);
	create_insn	(x=0X1CD31);
	op_stkvar	(x,	0);
	set_cmt	(0X1CD34,	"int",	0);
	create_insn	(x=0X1CD34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD3A);
	op_hex		(x,	1);
	create_insn	(x=0X1CD3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD42);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD53);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD62);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD69);
	op_hex		(x,	1);
	create_insn	(x=0X1CD6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD91);
	op_stkvar	(x,	0);
	create_insn	(0X1CD9A);
	set_cmt	(0X1CD9E,	"int",	0);
	set_cmt	(0X1CD9F,	"__int32",	0);
	create_insn	(x=0X1CDA3);
	op_hex		(x,	1);
	create_insn	(x=0X1CDA5);
	op_hex		(x,	1);
	set_cmt	(0X1CDA8,	"int",	0);
	set_cmt	(0X1CDA9,	"__int32",	0);
	create_insn	(x=0X1CDAF);
	op_hex		(x,	1);
	create_insn	(x=0X1CDB1);
	op_hex		(x,	1);
	create_insn	(x=0X1CDBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE0E);
	op_hex		(x,	1);
	create_insn	(x=0X1CE1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE21);
	op_hex		(x,	1);
	create_insn	(x=0X1CE29);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE2C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1CE32);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE37);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE3A);
	op_hex		(x,	1);
	create_insn	(x=0X1CE3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE60);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE7F);
	op_hex		(x,	1);
	create_insn	(x=0X1CEA2);
	op_hex		(x,	1);
	create_insn	(x=0X1CEA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEC4);
	op_seg		(x,	1);
	create_insn	(x=0X1CECE);
	op_hex		(x,	1);
	create_insn	(x=0X1CED9);
	op_stkvar	(x,	0);
	set_cmt	(0X1CEE6,	"char *",	0);
	create_insn	(x=0X1CEEA);
	op_hex		(x,	1);
	set_cmt	(0X1CEF4,	"char *",	0);
	set_cmt	(0X1CEFF,	"int",	0);
	create_insn	(x=0X1CF03);
	op_hex		(x,	1);
	set_cmt	(0X1CF0A,	"char *",	0);
	create_insn	(x=0X1CF0E);
	op_hex		(x,	1);
	set_cmt	(0X1CF14,	"int",	0);
	set_cmt	(0X1CF18,	"int",	0);
	set_cmt	(0X1CF20,	"char *",	0);
	create_insn	(x=0X1CF24);
	op_hex		(x,	1);
	create_insn	(0X1CF32);
	set_name	(0X1CF32,	"TrgMul");
	create_insn	(x=0X1CF35);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1CF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF3F);
	op_hex		(x,	1);
	create_insn	(x=0X1CF42);
	op_hex		(x,	1);
	create_insn	(x=0X1CF4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF4D);
	op_hex		(x,	1);
	create_insn	(x=0X1CF57);
	op_seg		(x,	1);
	create_insn	(x=0X1CF5D);
	op_seg		(x,	1);
	create_insn	(0X1CF64);
	create_insn	(x=0X1CF67);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF77);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF82);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF89);
	op_stkvar	(x,	1);
	create_insn	(0X1CF8E);
	set_name	(0X1CF8E,	"forceRange");
	create_insn	(x=0X1CF91);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFA1);
	op_stkvar	(x,	1);
	create_insn	(0X1CFA6);
	set_name	(0X1CFA6,	"Dist2D");
	create_insn	(x=0X1CFA9);
	op_hex		(x,	1);
	set_cmt	(0X1CFAC,	"int",	0);
	create_insn	(x=0X1CFAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFB2);
	op_hex		(x,	1);
	create_insn	(x=0X1CFB5);
	op_stkvar	(x,	0);
	set_cmt	(0X1CFB8,	"int",	0);
	create_insn	(x=0X1CFB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFBE);
	op_hex		(x,	1);
	create_insn	(x=0X1CFC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFDD);
	op_hex		(x,	1);
	create_insn	(x=0X1CFE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D001);
	op_stkvar	(x,	1);
	create_insn	(0X1D008);
	set_name	(0X1D008,	"ARCTAN");
	create_insn	(x=0X1D00B);
	op_hex		(x,	1);
	create_insn	(x=0X1D00F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D015);
	op_stkvar	(x,	0);
	create_insn	(0X1D022);
	create_insn	(x=0X1D02A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D030);
	op_stkvar	(x,	0);
	create_insn	(0X1D03E);
	set_cmt	(0X1D046,	"int",	0);
	create_insn	(x=0X1D046);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D04C);
	op_hex		(x,	1);
	set_cmt	(0X1D04F,	"int",	0);
	create_insn	(x=0X1D04F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D057);
	op_hex		(x,	1);
	set_cmt	(0X1D05E,	"int",	0);
	create_insn	(x=0X1D05E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D064);
	op_hex		(x,	1);
	create_insn	(x=0X1D06A);
	op_hex		(x,	1);
	create_insn	(x=0X1D06C);
	op_hex		(x,	1);
	create_insn	(x=0X1D072);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D075);
	op_stkvar	(x,	0);
	set_cmt	(0X1D078,	"int",	0);
	create_insn	(x=0X1D078);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D07E);
	op_hex		(x,	1);
	create_insn	(x=0X1D081);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D084);
	op_stkvar	(x,	0);
	set_cmt	(0X1D08C,	"int",	0);
	create_insn	(x=0X1D08C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D092);
	op_hex		(x,	1);
	create_insn	(x=0X1D098);
	op_hex		(x,	1);
	create_insn	(x=0X1D09A);
	op_hex		(x,	1);
	create_insn	(x=0X1D0A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0A3);
	op_stkvar	(x,	0);
	set_cmt	(0X1D0A6,	"int",	0);
	create_insn	(x=0X1D0A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0AC);
	op_hex		(x,	1);
	create_insn	(x=0X1D0AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0B7);
	op_stkvar	(x,	1);
	set_cmt	(0X1D0BC,	"__int32",	0);
	create_insn	(x=0X1D0BD);
	op_stkvar	(x,	0);
	set_cmt	(0X1D0C0,	"__int32",	0);
	create_insn	(x=0X1D0C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0C6);
	op_stkvar	(x,	0);
	set_cmt	(0X1D0CA,	"int",	0);
	set_cmt	(0X1D0CB,	"__int32",	0);
	set_cmt	(0X1D0D0,	"int",	0);
	set_cmt	(0X1D0D1,	"__int32",	0);
	create_insn	(x=0X1D0D5);
	op_stkvar	(x,	1);
	set_cmt	(0X1D0D8,	"int",	0);
	create_insn	(x=0X1D0DC);
	op_hex		(x,	1);
	set_cmt	(0X1D0E0,	"int",	0);
	set_cmt	(0X1D0E1,	"__int32",	0);
	create_insn	(x=0X1D0E7);
	op_hex		(x,	1);
	create_insn	(x=0X1D0E9);
	op_hex		(x,	1);
	set_cmt	(0X1D0FC,	"int",	0);
	set_cmt	(0X1D0FD,	"__int32",	0);
	create_insn	(x=0X1D103);
	op_hex		(x,	1);
	create_insn	(x=0X1D105);
	op_hex		(x,	1);
	create_insn	(x=0X1D10B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D10E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D114);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D11A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D123);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D128);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D12E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D134);
	op_stkvar	(x,	1);
	create_insn	(0X1D13C);
	create_insn	(x=0X1D142);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D148);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D14E);
	op_stkvar	(x,	1);
	set_name	(0X1D14E,	"DrawTextLine");
	create_insn	(x=0X1D156);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D15E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D16A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D170);
	op_stkvar	(x,	0);
	create_insn	(0X1D178);
	set_name	(0X1D178,	"sinX");
	create_insn	(x=0X1D17B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D17E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D184);
	op_hex		(x,	1);
	create_insn	(x=0X1D18B);
	op_hex		(x,	1);
	create_insn	(0X1D190);
	set_name	(0X1D190,	"cosX");
	set_cmt	(0X1D193,	"int",	0);
	create_insn	(x=0X1D193);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D196);
	op_stkvar	(x,	1);
	set_cmt	(0X1D19C,	"int",	0);
	create_insn	(x=0X1D1A0);
	op_hex		(x,	1);
	create_insn	(0X1D1A6);
	create_insn	(0X1D1BA);
	create_insn	(0X1D1C8);
	set_name	(0X1D1C8,	"abs_word");
	create_insn	(x=0X1D1CB);
	op_stkvar	(x,	0);
	set_name	(0X1D1D4,	"DrawFormattedNumber");
	create_insn	(x=0X1D1D6);
	op_stkvar	(x,	0);
	create_insn	(0X1D1E2);
	create_insn	(0X1D1E8);
	set_cmt	(0X1D1F5,	"unsigned int",	0);
	create_insn	(x=0X1D1FC);
	op_hex		(x,	1);
	create_insn	(0X1D200);
	set_name	(0X1D200,	"randlmul");
	create_insn	(x=0X1D203);
	op_stkvar	(x,	1);
	set_cmt	(0X1D207,	"int",	0);
	set_cmt	(0X1D208,	"__int32",	0);
	set_cmt	(0X1D20D,	"int",	0);
	set_cmt	(0X1D20E,	"__int32",	0);
	create_insn	(x=0X1D214);
	op_hex		(x,	1);
	create_insn	(x=0X1D216);
	op_hex		(x,	1);
	create_insn	(0X1D21E);
	create_insn	(x=0X1D221);
	op_hex		(x,	1);
	create_insn	(x=0X1D22B);
	op_stkvar	(x,	0);
	create_insn	(0X1D232);
	create_insn	(x=0X1D23D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D245);
	op_hex		(x,	1);
	create_insn	(0X1D24A);
	create_insn	(x=0X1D24C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D24F);
	op_hex		(x,	1);
	create_insn	(x=0X1D255);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D258);
	op_stkvar	(x,	1);
	create_insn	(0X1D260);
	set_name	(0X1D260,	"keyDispatch");
	create_insn	(x=0X1D263);
	op_hex		(x,	1);
	set_cmt	(0X1D267,	"char *",	0);
	create_insn	(x=0X1D270);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D278);
	op_stkvar	(x,	1);
	create_insn	(0X1D27E);
	create_insn	(0X1D284);
	create_insn	(x=0X1D29A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D29E);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D2A1,	"char *",	0);
	create_insn	(x=0X1D2A5);
	op_hex		(x,	1);
	create_insn	(x=0X1D2AA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D2AE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D2B1,	"char *",	0);
	create_insn	(x=0X1D2B5);
	op_hex		(x,	1);
	create_insn	(x=0X1D2BA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D2BE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_name	(0X1D2BE,	"CheckWingmanCommands");
	set_cmt	(0X1D2C1,	"char *",	0);
	create_insn	(x=0X1D2C5);
	op_hex		(x,	1);
	create_insn	(0X1D2CA);
	create_insn	(0X1D2CC);
	create_insn	(x=0X1D2DC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D2E0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D2E3,	"char *",	0);
	create_insn	(x=0X1D2E7);
	op_hex		(x,	1);
	create_insn	(x=0X1D2EA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D2F1);
	op_hex		(x,	1);
	create_insn	(0X1D2F7);
	create_insn	(0X1D2FD);
	create_insn	(0X1D303);
	create_insn	(x=0X1D30A);
	op_hex		(x,	1);
	create_insn	(0X1D310);
	create_insn	(x=0X1D317);
	op_hex		(x,	1);
	create_insn	(0X1D31D);
	create_insn	(x=0X1D326);
	op_hex		(x,	1);
	create_insn	(x=0X1D33C);
	op_hex		(x,	1);
	create_insn	(x=0X1D33F);
	op_hex		(x,	1);
	create_insn	(0X1D34C);
	create_insn	(0X1D361);
	create_insn	(x=0X1D367);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D36B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D36E,	"char *",	0);
	create_insn	(x=0X1D372);
	op_hex		(x,	1);
	set_cmt	(0X1D37C,	"char *",	0);
	set_cmt	(0X1D37D,	"int",	0);
	create_insn	(x=0X1D384);
	op_hex		(x,	1);
	create_insn	(x=0X1D388);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D38B,	"char *",	0);
	create_insn	(x=0X1D38F);
	op_hex		(x,	1);
	create_insn	(x=0X1D392);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D399);
	op_hex		(x,	1);
	create_insn	(0X1D3A2);
	create_insn	(x=0X1D3B3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D3B7);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D3BA,	"char *",	0);
	create_insn	(x=0X1D3BE);
	op_hex		(x,	1);
	set_cmt	(0X1D3C8,	"char *",	0);
	set_cmt	(0X1D3CD,	"int",	0);
	create_insn	(x=0X1D3D1);
	op_hex		(x,	1);
	create_insn	(x=0X1D3D5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D3D8,	"char *",	0);
	create_insn	(x=0X1D3DC);
	op_hex		(x,	1);
	create_insn	(x=0X1D3DF);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D3E6);
	op_hex		(x,	1);
	create_insn	(x=0X1D3EC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D3F0);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D3F3,	"char *",	0);
	create_insn	(x=0X1D3F7);
	op_hex		(x,	1);
	create_insn	(x=0X1D3FE);
	op_stkvar	(x,	1);
	set_cmt	(0X1D401,	"char *",	0);
	set_cmt	(0X1D402,	"int",	0);
	create_insn	(x=0X1D409);
	op_hex		(x,	1);
	create_insn	(x=0X1D40D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D410,	"char *",	0);
	create_insn	(x=0X1D414);
	op_hex		(x,	1);
	create_insn	(x=0X1D417);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D41E);
	op_hex		(x,	1);
	create_insn	(x=0X1D424);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D428);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D42B,	"char *",	0);
	create_insn	(x=0X1D42F);
	op_hex		(x,	1);
	set_cmt	(0X1D439,	"char *",	0);
	set_cmt	(0X1D43A,	"int",	0);
	create_insn	(x=0X1D441);
	op_hex		(x,	1);
	create_insn	(x=0X1D445);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D448,	"char *",	0);
	create_insn	(x=0X1D44C);
	op_hex		(x,	1);
	create_insn	(x=0X1D44F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D456);
	op_hex		(x,	1);
	create_insn	(0X1D45C);
	create_insn	(0X1D47A);
	create_insn	(0X1D480);
	create_insn	(x=0X1D487);
	op_hex		(x,	1);
	create_insn	(x=0X1D48D);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D491);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D494,	"char *",	0);
	create_insn	(x=0X1D498);
	op_hex		(x,	1);
	create_insn	(x=0X1D49F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D4A2,	"char *",	0);
	set_cmt	(0X1D4AA,	"int",	0);
	create_insn	(x=0X1D4AE);
	op_hex		(x,	1);
	create_insn	(x=0X1D4B2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D4B5,	"char *",	0);
	create_insn	(x=0X1D4B9);
	op_hex		(x,	1);
	create_insn	(x=0X1D4BC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D4C3);
	op_hex		(x,	1);
	create_insn	(x=0X1D4CC);
	op_hex		(x,	1);
	create_insn	(x=0X1D4DE);
	op_hex		(x,	1);
	create_insn	(x=0X1D4E3);
	op_hex		(x,	1);
	create_insn	(x=0X1D4EF);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	op_hex		(x,	1);
	create_insn	(0X1D4F7);
	create_insn	(0X1D516);
	create_insn	(0X1D524);
	create_insn	(0X1D530);
	create_insn	(0X1D54F);
	create_insn	(x=0X1D560);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D564);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D567,	"char *",	0);
	create_insn	(x=0X1D56B);
	op_hex		(x,	1);
	create_insn	(x=0X1D579);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D57C,	"char *",	0);
	set_cmt	(0X1D57D,	"int",	0);
	create_insn	(x=0X1D584);
	op_hex		(x,	1);
	create_insn	(x=0X1D588);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D58B,	"char *",	0);
	create_insn	(x=0X1D58F);
	op_hex		(x,	1);
	create_insn	(x=0X1D594);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D598);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D59B,	"char *",	0);
	create_insn	(x=0X1D59F);
	op_hex		(x,	1);
	create_insn	(x=0X1D5A2);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D5A9);
	op_hex		(x,	1);
	create_insn	(0X1D5AF);
	create_insn	(x=0X1D5C5);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D5CC);
	op_hex		(x,	1);
	create_insn	(x=0X1D5D1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_name	(0X1D5D5,	"Sqrt");
	create_insn	(x=0X1D5D8);
	op_hex		(x,	1);
	create_insn	(x=0X1D5DD);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D5E4);
	op_hex		(x,	1);
	create_insn	(0X1D5EF);
	create_insn	(x=0X1D5F1);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(x=0X1D5F6);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(x=0X1D5FB);
	op_enum		(x,	1,	GetEnum("Misc"),0);
	create_insn	(0X1D602);
	create_insn	(0X1D605);
	create_insn	(x=0X1D612);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D619);
	op_hex		(x,	1);
	create_insn	(0X1D61E);
	create_insn	(x=0X1D621);
	op_dec		(x,	1);
	create_insn	(x=0X1D626);
	op_dec		(x,	1);
	create_insn	(x=0X1D62C);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D633);
	op_hex		(x,	1);
	create_insn	(x=0X1D639);
	op_hex		(x,	1);
	create_insn	(0X1D641);
	create_insn	(0X1D64A);
	create_insn	(0X1D653);
	create_insn	(0X1D65C);
	create_insn	(0X1D665);
	create_insn	(0X1D66E);
	create_insn	(0X1D677);
	create_insn	(0X1D680);
	create_insn	(0X1D689);
	create_insn	(0X1D692);
	create_insn	(0X1D69B);
	create_insn	(0X1D6A4);
	create_insn	(0X1D6AD);
	set_name	(0X1D6AD,	"sgn");
	create_insn	(0X1D6B6);
	create_insn	(0X1D6C0);
	create_insn	(x=0X1D6C8);
	op_hex		(x,	1);
	create_insn	(x=0X1D6D6);
	op_hex		(x,	1);
	create_insn	(x=0X1D6D9);
	op_dec		(x,	1);
	create_insn	(x=0X1D6E0);
	op_hex		(x,	1);
	create_insn	(x=0X1D6E3);
	op_dec		(x,	1);
	set_cmt	(0X1D6E6,	"int",	0);
	create_insn	(x=0X1D6EF);
	op_hex		(x,	1);
	set_cmt	(0X1D6F6,	"int",	0);
	create_insn	(x=0X1D6FF);
	op_hex		(x,	1);
	create_insn	(x=0X1D717);
	op_hex		(x,	1);
	create_insn	(0X1D71C);
	create_insn	(x=0X1D720);
	op_enum		(x,	0,	GetEnum("Pointers"),0);
	create_insn	(0X1D744);
	create_insn	(0X1D747);
	create_insn	(0X1D74F);
	create_insn	(0X1D754);
	create_insn	(0X1D75C);
	create_insn	(0X1D766);
	create_insn	(0X1D770);
	create_insn	(0X1D778);
	create_insn	(0X1D77B);
	create_insn	(0X1D783);
	create_insn	(0X1D78B);
	create_insn	(0X1D793);
	create_insn	(0X1D79B);
	create_insn	(0X1D79E);
	create_insn	(0X1D7A6);
	create_insn	(0X1D7B0);
	set_cmt	(0X1D7B8,	"S",	0);
	create_insn	(0X1D7B8);
	create_insn	(0X1D7C0);
	create_insn	(0X1D7C3);
	create_insn	(0X1D7CB);
	create_insn	(0X1D7D3);
	create_insn	(0X1D7DB);
	create_insn	(0X1D7E3);
	create_insn	(0X1D7EB);
	create_insn	(0X1D7EE);
	create_insn	(0X1D7F6);
	create_insn	(0X1D800);
	create_insn	(0X1D80A);
	create_insn	(0X1D812);
	create_insn	(0X1D81A);
	create_insn	(0X1D81C);
	create_insn	(0X1D824);
	create_insn	(0X1D82C);
	create_insn	(0X1D834);
	create_insn	(0X1D83C);
	create_insn	(0X1D83E);
	set_name	(0X1D83E,	"DrawUIBox");
	create_insn	(0X1D846);
	create_insn	(0X1D850);
	create_insn	(0X1D858);
	create_insn	(0X1D860);
	create_insn	(0X1D862);
	create_insn	(0X1D86A);
	create_insn	(0X1D872);
	create_insn	(0X1D87A);
	create_insn	(0X1D882);
	create_insn	(0X1D88A);
	create_insn	(x=0X1D88C);
	op_hex		(x,	1);
	create_insn	(x=0X1D897);
	op_stkvar	(x,	1);
	create_insn	(0X1D89D);
	create_insn	(0X1D8A3);
	create_insn	(x=0X1D8B0);
	op_hex		(x,	1);
	create_insn	(x=0X1D8B2);
	op_hex		(x,	1);
	set_name	(0X1D8B4,	"HandleMenuLogic_sub");
	create_insn	(0X1D8BA);
	create_insn	(0X1D8C5);
	create_insn	(x=0X1D8D2);
	op_hex		(x,	1);
	create_insn	(x=0X1D8D4);
	op_hex		(x,	1);
	create_insn	(0X1D8DC);
	create_insn	(0X1D8E6);
	create_insn	(x=0X1D8F3);
	op_hex		(x,	1);
	create_insn	(x=0X1D8F5);
	op_hex		(x,	1);
	create_insn	(0X1D8FD);
	create_insn	(0X1D907);
	create_insn	(x=0X1D914);
	op_hex		(x,	1);
	create_insn	(x=0X1D916);
	op_hex		(x,	1);
	create_insn	(0X1D91E);
	create_insn	(0X1D928);
	create_insn	(0X1D92A);
	create_insn	(0X1D932);
	create_insn	(0X1D93A);
	create_insn	(0X1D94B);
	create_insn	(x=0X1D96A);
	op_hex		(x,	1);
	create_insn	(x=0X1D981);
	op_hex		(x,	1);
	create_insn	(0X1D98D);
	create_insn	(x=0X1D995);
	op_hex		(x,	1);
	create_insn	(0X1D9A1);
	create_insn	(x=0X1D9AC);
	op_hex		(x,	1);
	create_insn	(x=0X1D9AF);
	op_hex		(x,	1);
	create_insn	(0X1D9BB);
	create_insn	(0X1D9C7);
	create_insn	(x=0X1D9D2);
	op_hex		(x,	1);
	set_cmt	(0X1D9DB,	"char *",	0);
	create_insn	(0X1D9DB);
	set_name	(0X1D9DB,	"selectMissile");
	create_insn	(x=0X1D9E2);
	op_hex		(x,	1);
	create_insn	(x=0X1D9E4);
	op_hex		(x,	1);
	create_insn	(x=0X1D9E9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1D9F1);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1D9F4,	"char *",	0);
	create_insn	(x=0X1D9F8);
	op_hex		(x,	1);
	create_insn	(x=0X1D9FF);
	op_hex		(x,	1);
	create_insn	(x=0X1DA01);
	op_hex		(x,	1);
	create_insn	(x=0X1DA03);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_insn	(x=0X1DA0A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1DA0F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1DA13);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1DA16,	"char *",	0);
	create_insn	(x=0X1DA1A);
	op_hex		(x,	1);
	create_insn	(x=0X1DA24);
	op_hex		(x,	1);
	create_insn	(x=0X1DA27);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1DA2E);
	op_hex		(x,	1);
	create_insn	(0X1DA35);
	set_name	(0X1DA35,	"makeSound");
	create_insn	(x=0X1DA3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA47);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA55);
	op_hex		(x,	1);
	create_insn	(0X1DA5F);
	create_insn	(x=0X1DA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DA73);
	op_hex		(x,	1);
	create_insn	(x=0X1DA7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA86);
	op_hex		(x,	1);
	create_insn	(0X1DA8D);
	create_insn	(0X1DAA5);
	create_insn	(0X1DAAE);
	create_insn	(x=0X1DACF);
	op_hex		(x,	1);
	create_insn	(x=0X1DAD5);
	op_hex		(x,	1);
	create_insn	(0X1DADD);
	create_insn	(x=0X1DAF6);
	op_hex		(x,	1);
	create_insn	(x=0X1DB07);
	op_hex		(x,	1);
	create_insn	(x=0X1DB0D);
	op_hex		(x,	1);
	create_insn	(0X1DB2B);
	set_name	(0X1DB2B,	"SetDifficultyParameters");
	create_insn	(x=0X1DB2E);
	op_hex		(x,	1);
	create_insn	(x=0X1DB31);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB38);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB41);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DB44);
	op_hex		(x,	1);
	create_insn	(x=0X1DB49);
	op_stkvar	(x,	1);
	create_insn	(0X1DB62);
	create_insn	(x=0X1DB77);
	op_hex		(x,	1);
	create_insn	(x=0X1DB7D);
	op_hex		(x,	1);
	create_insn	(0X1DB9C);
	create_insn	(x=0X1DBAC);
	op_hex		(x,	1);
	create_insn	(0X1DBB7);
	set_cmt	(0X1DBE0,	"union REGS *",	0);
	create_insn	(0X1DBE0);
	set_cmt	(0X1DBF1,	"union REGS *",	0);
	set_cmt	(0X1DBF5,	"int",	0);
	create_insn	(x=0X1DBF9);
	op_hex		(x,	1);
	create_insn	(0X1DC00);
	create_insn	(0X1DC60);
	create_insn	(0X1DCA6);
	create_insn	(x=0X1DCA9);
	op_hex		(x,	1);
	create_insn	(x=0X1DCB5);
	op_hex		(x,	1);
	create_insn	(x=0X1DCC8);
	op_hex		(x,	1);
	create_insn	(0X1DCDC);
	create_insn	(x=0X1DCDF);
	op_hex		(x,	1);
	create_insn	(x=0X1DCEB);
	op_hex		(x,	1);
	create_insn	(x=0X1DD01);
	op_hex		(x,	1);
	create_insn	(0X1DD14);
	create_insn	(x=0X1DD17);
	op_hex		(x,	1);
	create_insn	(x=0X1DD23);
	op_hex		(x,	1);
	create_insn	(x=0X1DD39);
	op_hex		(x,	1);
	set_cmt	(0X1DD4C,	"int",	0);
	create_insn	(0X1DD4C);
	set_name	(0X1DD4C,	"openFileWrapper");
	set_cmt	(0X1DD4F,	"mode",	0);
	create_insn	(x=0X1DD4F);
	op_stkvar	(x,	0);
	set_cmt	(0X1DD52,	"char *",	0);
	create_insn	(x=0X1DD52);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD58);
	op_hex		(x,	1);
	create_insn	(0X1DD5E);
	create_insn	(x=0X1DD61);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD64);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD6A);
	op_hex		(x,	1);
	create_insn	(0X1DD70);
	set_name	(0X1DD70,	"closeFileWrapper");
	create_insn	(x=0X1DD73);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD79);
	op_hex		(x,	1);
	create_insn	(0X1DD7E);
	create_insn	(x=0X1DD81);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD84);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD87);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD8D);
	op_hex		(x,	1);
	create_insn	(0X1DD92);
	create_insn	(x=0X1DD95);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD98);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDA4);
	op_hex		(x,	1);
	create_insn	(0X1DDAA);
	create_insn	(x=0X1DDAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDBF);
	op_hex		(x,	1);
	create_insn	(0X1DDC4);
	set_name	(0X1DDC4,	"openFile");
	create_insn	(x=0X1DDCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDD4);
	op_stkvar	(x,	1);
	set_cmt	(0X1DDD7,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read, 1 - write, 2 - read & write",	0);
	create_insn	(x=0X1DDD7);
	op_hex		(x,	0);
	create_insn	(x=0X1DDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDE3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1DDEC);
	create_insn	(x=0X1DDF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDFC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1DE02);
	create_insn	(x=0X1DE04);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1DE07);
	op_stkvar	(x,	1);
	create_insn	(0X1DE0D);
	create_insn	(0X1DE1B);
	set_name	(0X1DE1B,	"createFile");
	create_insn	(x=0X1DE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DE2B);
	op_stkvar	(x,	1);
	set_cmt	(0X1DE2E,	"DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT)\nCX = attributes for file\nDS:DX -> ASCIZ filename (may include drive and path)",	0);
	create_insn	(x=0X1DE2E);
	op_hex		(x,	0);
	create_insn	(x=0X1DE37);
	op_stkvar	(x,	1);
	create_insn	(0X1DE43);
	create_insn	(x=0X1DE50);
	op_stkvar	(x,	1);
	create_insn	(0X1DE59);
	create_insn	(x=0X1DE5E);
	op_stkvar	(x,	1);
	create_insn	(0X1DE64);
	create_insn	(0X1DE72);
	set_name	(0X1DE72,	"closeFile");
	create_insn	(x=0X1DE7B);
	op_stkvar	(x,	1);
	set_cmt	(0X1DE7E,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1DE7E);
	op_hex		(x,	0);
	create_insn	(x=0X1DE82);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1DE8B);
	create_insn	(0X1DE93);
	create_insn	(0X1DE94);
	set_name	(0X1DE94,	"readFile1");
	create_insn	(x=0X1DEA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEA7);
	op_stkvar	(x,	1);
	set_cmt	(0X1DEAA,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1DEAA);
	op_hex		(x,	0);
	create_insn	(x=0X1DEAE);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1DEB7);
	create_insn	(0X1DEBF);
	set_name	(0X1DEBF,	"readFile2");
	create_insn	(x=0X1DEC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DED1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DED4);
	op_stkvar	(x,	1);
	set_cmt	(0X1DED7,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1DED7);
	op_hex		(x,	0);
	create_insn	(x=0X1DEDC);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1DEE5);
	create_insn	(0X1DEED);
	create_insn	(0X1DF16);
	set_name	(0X1DF16,	"read512FromFileIntoBuf");
	create_insn	(x=0X1DF19);
	op_seg		(x,	1);
	create_insn	(x=0X1DF25);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	set_cmt	(0X1DF28,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1DF28);
	op_hex		(x,	0);
	create_insn	(0X1DF34);
	create_insn	(0X1DF37);
	create_insn	(0X1DF4F);
	create_insn	(x=0X1DF59);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF61);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF67);
	op_stkvar	(x,	1);
	set_cmt	(0X1DF6A,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1DF6A);
	op_hex		(x,	0);
	create_insn	(0X1DF78);
	create_insn	(0X1DF80);
	set_cmt	(0X1DF84,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X1DF84);
	op_hex		(x,	0);
	create_insn	(0X1DF91);
	create_insn	(x=0X1DF96);
	op_hex		(x,	1);
	set_cmt	(0X1DF98,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"",	0);
	create_insn	(x=0X1DF98);
	op_hex		(x,	0);
	create_insn	(x=0X1DF9B);
	op_hex		(x,	1);
	set_name	(0X1DF9B,	"printString_1DF9B");
	set_cmt	(0X1DF9D,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"",	0);
	create_insn	(x=0X1DF9D);
	op_hex		(x,	0);
	create_insn	(x=0X1DFB3);
	op_hex		(x,	1);
	set_cmt	(0X1DFB5,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"",	0);
	create_insn	(x=0X1DFB5);
	op_hex		(x,	0);
	create_insn	(x=0X1DFB7);
	op_hex		(x,	1);
	set_cmt	(0X1DFBA,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X1DFBA);
	op_hex		(x,	0);
	create_insn	(0X1DFBC);
	set_name	(0X1DFBC,	"openBlitClosePic");
	set_cmt	(0X1DFC6,	"int",	0);
	set_cmt	(0X1DFCA,	"mode",	0);
	set_cmt	(0X1DFCB,	"char *",	0);
	create_insn	(x=0X1DFCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFD1);
	op_hex		(x,	1);
	create_insn	(x=0X1DFD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFE3);
	op_hex		(x,	1);
	create_insn	(x=0X1DFE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFEC);
	op_hex		(x,	1);
	create_insn	(0X1DFF5);
	create_insn	(x=0X1E00A);
	op_hex		(x,	1);
	create_insn	(x=0X1E019);
	op_hex		(x,	1);
	create_insn	(x=0X1E022);
	op_hex		(x,	1);
	create_insn	(0X1E02B);
	create_insn	(x=0X1E040);
	op_hex		(x,	1);
	create_insn	(x=0X1E04F);
	op_hex		(x,	1);
	create_insn	(x=0X1E058);
	op_hex		(x,	1);
	create_insn	(0X1E061);
	create_insn	(x=0X1E076);
	op_hex		(x,	1);
	create_insn	(x=0X1E08C);
	op_hex		(x,	1);
	create_insn	(x=0X1E098);
	op_hex		(x,	1);
	create_insn	(x=0X1E0A1);
	op_hex		(x,	1);
	create_insn	(0X1E0AA);
	set_name	(0X1E0AA,	"picBlit");
	create_insn	(x=0X1E0B1);
	op_plain_offset	(x,	1,	0X10000);
	op_plain_offset	(x,	129,	0X10000);
	create_insn	(x=0X1E0B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0F3);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X1E11C);
	create_insn	(x=0X1E129);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E12F);
	op_stkvar	(x,	1);
	create_insn	(0X1E184);
	create_insn	(x=0X1E19D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1A3);
	op_stkvar	(x,	1);
	create_insn	(0X1E1F8);
	create_insn	(x=0X1E205);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E20B);
	op_stkvar	(x,	1);
	create_insn	(0X1E260);
	set_name	(0X1E260,	"nullsub_1");
	create_insn	(0X1E262);
	set_name	(0X1E262,	"DecompressAndBlitRow");
	create_insn	(x=0X1E26E);
	op_hex		(x,	1);
	create_insn	(0X1E28C);
	set_name	(0X1E28C,	"RLE_DecompressHelper");
	create_insn	(0X1E2D3);
	create_insn	(0X1E309);
	set_name	(0X1E309,	"RLE_DecompressLoop");
	create_insn	(x=0X1E310);
	op_hex		(x,	1);
	create_byte	(0X1E334);
	create_insn	(0X1E335);
	create_insn	(0X1E344);
	create_insn	(x=0X1E359);
	op_hex		(x,	1);
	create_insn	(x=0X1E35B);
	op_hex		(x,	1);
	create_insn	(x=0X1E35D);
	op_hex		(x,	1);
	create_insn	(x=0X1E35F);
	op_hex		(x,	1);
	create_insn	(x=0X1E361);
	op_hex		(x,	1);
	create_byte	(0X1E36C);
	create_insn	(0X1E36D);
	create_insn	(0X1E382);
	set_name	(0X1E382,	"LZW_Decompress");
	create_insn	(0X1E38C);
	create_insn	(0X1E3C2);
	create_insn	(0X1E3F5);
	create_insn	(x=0X1E41A);
	op_hex		(x,	1);
	create_insn	(x=0X1E432);
	op_hex		(x,	1);
	set_name	(0X1E432,	"start");
	set_cmt	(0X1E434,	"DOS - GET DOS VERSION\nReturn: AL = major version number (00h for DOS 1.x)",	0);
	create_insn	(x=0X1E434);
	op_hex		(x,	0);
	set_cmt	(0X1E43A,	"DOS - PROGRAM TERMINATION\nreturns to DOS--identical to INT 21/AH=00h",	0);
	create_insn	(x=0X1E43A);
	op_hex		(x,	0);
	create_insn	(x=0X1E43C);
	op_seg		(x,	1);
	create_insn	(x=0X1E451);
	op_hex		(x,	1);
	create_insn	(x=0X1E463);
	op_hex		(x,	1);
	set_cmt	(0X1E466,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X1E466);
	op_hex		(x,	0);
	create_insn	(x=0X1E468);
	op_hex		(x,	1);
	create_insn	(x=0X1E48C);
	op_hex		(x,	1);
	set_cmt	(0X1E48E,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X1E48E);
	op_hex		(x,	0);
	set_cmt	(0X1E4B7,	"argv",	0);
	set_cmt	(0X1E4BB,	"argc",	0);
	set_cmt	(0X1E4C2,	"int",	0);
	create_insn	(x=0X1E4C6);
	op_seg		(x,	1);
	set_name	(0X1E4C6,	"__cintDIV");
	set_name	(0X1E4D5,	"__amsg_exit");
	set_cmt	(0X1E4DF,	"int",	0);
	create_insn	(x=0X1E4E4);
	op_hex		(x,	1);
	set_name	(0X1E4E4,	"__cinit");
	set_cmt	(0X1E4E6,	"DOS - GET DOS VERSION\nReturn: AL = major version number (00h for DOS 1.x)",	0);
	create_insn	(x=0X1E4E6);
	op_hex		(x,	0);
	create_insn	(x=0X1E4EB);
	op_hex		(x,	1);
	set_cmt	(0X1E4EE,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector",	0);
	create_insn	(x=0X1E4EE);
	op_hex		(x,	0);
	set_cmt	(0X1E500,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X1E500);
	op_hex		(x,	0);
	create_insn	(0X1E527);
	create_insn	(0X1E562);
	create_insn	(x=0X1E57C);
	op_hex		(x,	1);
	create_insn	(x=0X1E581);
	op_hex		(x,	1);
	set_cmt	(0X1E584,	"DOS - 2+ - IOCTL - GET DEVICE INFORMATION\nBX = file or device handle",	0);
	create_insn	(x=0X1E584);
	op_hex		(x,	0);
	create_insn	(x=0X1E588);
	op_hex		(x,	1);
	create_insn	(x=0X1E58D);
	op_hex		(x,	1);
	create_insn	(0X1E5A8);
	set_name	(0X1E5A8,	"_exit");
	create_insn	(0X1E5BF);
	set_name	(0X1E5BF,	"__exit");
	create_insn	(x=0X1E5DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5EC);
	op_hex		(x,	1);
	create_insn	(x=0X1E5F3);
	op_hex		(x,	1);
	set_cmt	(0X1E5F5,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1E5F5);
	op_hex		(x,	0);
	create_insn	(x=0X1E5FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E600);
	op_hex		(x,	1);
	set_cmt	(0X1E602,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X1E602);
	op_hex		(x,	0);
	create_insn	(0X1E604);
	set_name	(0X1E604,	"__ctermsub");
	create_insn	(x=0X1E616);
	op_hex		(x,	1);
	set_cmt	(0X1E619,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X1E619);
	op_hex		(x,	0);
	create_insn	(x=0X1E62B);
	op_hex		(x,	1);
	set_cmt	(0X1E62D,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X1E62D);
	op_hex		(x,	0);
	create_insn	(0X1E631);
	create_insn	(0X1E63F);
	create_insn	(0X1E640);
	create_insn	(0X1E652);
	create_insn	(0X1E654);
	set_name	(0X1E654,	"__chkstk");
	create_insn	(0X1E665);
	create_insn	(0X1E66A);
	set_name	(0X1E66A,	"_fclose");
	create_insn	(x=0X1E66D);
	op_hex		(x,	1);
	set_cmt	(0X1E671,	"int",	0);
	create_insn	(x=0X1E672);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E678);
	op_hex		(x,	1);
	create_insn	(x=0X1E681);
	op_hex		(x,	1);
	set_cmt	(0X1E68A,	"FILE *",	0);
	create_insn	(0X1E68A);
	create_insn	(x=0X1E68E);
	op_hex		(x,	1);
	create_insn	(x=0X1E69F);
	op_hex		(x,	1);
	create_insn	(x=0X1E6A3);
	op_hex		(x,	1);
	create_insn	(x=0X1E6A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6B0);
	op_hex		(x,	1);
	set_cmt	(0X1E6B7,	"int",	0);
	create_insn	(x=0X1E6BB);
	op_hex		(x,	1);
	create_insn	(x=0X1E6C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6CC);
	op_stkvar	(x,	1);
	set_cmt	(0X1E6CF,	"char *",	0);
	create_insn	(x=0X1E6D3);
	op_hex		(x,	1);
	create_insn	(x=0X1E6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6E8);
	op_stkvar	(x,	1);
	set_cmt	(0X1E6EB,	"char *",	0);
	create_insn	(x=0X1E6EF);
	op_hex		(x,	1);
	create_insn	(x=0X1E6F4);
	op_stkvar	(x,	0);
	set_cmt	(0X1E6FB,	"char *",	0);
	create_insn	(x=0X1E6FB);
	op_stkvar	(x,	0);
	set_cmt	(0X1E6FE,	"int",	0);
	create_insn	(x=0X1E6FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E704);
	op_hex		(x,	1);
	create_insn	(x=0X1E707);
	op_stkvar	(x,	1);
	set_cmt	(0X1E70A,	"char *",	0);
	create_insn	(x=0X1E70E);
	op_hex		(x,	1);
	create_insn	(0X1E724);
	set_name	(0X1E724,	"_fopen");
	create_insn	(x=0X1E727);
	op_hex		(x,	1);
	set_cmt	(0X1E734,	"int",	0);
	create_insn	(x=0X1E735);
	op_stkvar	(x,	0);
	set_cmt	(0X1E738,	"char *",	0);
	create_insn	(x=0X1E738);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E73E);
	op_hex		(x,	1);
	create_insn	(0X1E744);
	create_insn	(0X1E74C);
	set_name	(0X1E74C,	"_fread");
	create_insn	(x=0X1E74F);
	op_hex		(x,	1);
	set_cmt	(0X1E753,	"unsigned int",	0);
	create_insn	(x=0X1E754);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E757);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E75A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E75D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E760);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E763);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E769);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E76F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E776);
	op_hex		(x,	1);
	create_insn	(0X1E77F);
	create_insn	(x=0X1E78B);
	op_hex		(x,	1);
	create_insn	(x=0X1E78F);
	op_hex		(x,	1);
	create_insn	(x=0X1E791);
	op_hex		(x,	1);
	create_insn	(0X1E79B);
	create_insn	(x=0X1E7A1);
	op_hex		(x,	1);
	create_insn	(x=0X1E7A8);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1E7AF);
	op_stkvar	(x,	0);
	create_insn	(0X1E7B8);
	create_insn	(x=0X1E7B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7BC);
	op_stkvar	(x,	0);
	set_cmt	(0X1E7BF,	"void *",	0);
	create_insn	(x=0X1E7BF);
	op_stkvar	(x,	0);
	set_cmt	(0X1E7C2,	"int",	0);
	create_insn	(x=0X1E7C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7C8);
	op_hex		(x,	1);
	create_insn	(0X1E7D4);
	create_insn	(x=0X1E7DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7E2);
	op_stkvar	(x,	0);
	create_insn	(0X1E7EB);
	create_insn	(0X1E7EE);
	set_cmt	(0X1E7FE,	"FILE *",	0);
	create_insn	(0X1E7FE);
	create_insn	(x=0X1E802);
	op_hex		(x,	1);
	create_insn	(x=0X1E810);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E813);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E81A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E81D);
	op_hex		(x,	1);
	create_insn	(0X1E826);
	create_insn	(x=0X1E832);
	op_hex		(x,	1);
	create_insn	(x=0X1E836);
	op_hex		(x,	1);
	create_insn	(x=0X1E838);
	op_hex		(x,	1);
	create_insn	(0X1E842);
	create_insn	(x=0X1E844);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E84B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E854);
	op_stkvar	(x,	0);
	set_cmt	(0X1E858,	"void *",	0);
	create_insn	(x=0X1E858);
	op_stkvar	(x,	0);
	set_cmt	(0X1E85F,	"int",	0);
	create_insn	(x=0X1E863);
	op_hex		(x,	1);
	create_insn	(0X1E879);
	create_insn	(x=0X1E87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E881);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E886);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E88C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E88F);
	op_stkvar	(x,	0);
	set_cmt	(0X1E894,	"FILE *",	0);
	create_insn	(0X1E894);
	create_insn	(x=0X1E898);
	op_hex		(x,	1);
	create_insn	(x=0X1E8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8C6);
	op_stkvar	(x,	0);
	set_cmt	(0X1E8C9,	"void *",	0);
	set_cmt	(0X1E8CC,	"void *",	0);
	create_insn	(x=0X1E8CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8D2);
	op_hex		(x,	1);
	create_insn	(x=0X1E8D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8F3);
	op_stkvar	(x,	0);
	set_cmt	(0X1E8F6,	"void *",	0);
	create_insn	(x=0X1E8F6);
	op_stkvar	(x,	0);
	set_cmt	(0X1E8F9,	"int",	0);
	create_insn	(x=0X1E8F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8FF);
	op_hex		(x,	1);
	create_insn	(0X1E915);
	create_insn	(x=0X1E91A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E91D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E920);
	op_stkvar	(x,	0);
	create_insn	(0X1E929);
	create_insn	(0X1E92C);
	create_insn	(0X1E932);
	set_name	(0X1E932,	"_lseek");
	create_insn	(x=0X1E935);
	op_hex		(x,	1);
	create_insn	(x=0X1E938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E946);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1E94D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E957);
	op_hex		(x,	1);
	set_cmt	(0X1E95A,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from present location",	0);
	create_insn	(x=0X1E95A);
	op_hex		(x,	0);
	create_insn	(x=0X1E95E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1E965);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E973);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E976);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E97B);
	op_hex		(x,	1);
	set_cmt	(0X1E97E,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X1E97E);
	op_hex		(x,	0);
	create_insn	(x=0X1E980);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E983);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E988);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E98B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E98E);
	op_hex		(x,	1);
	set_cmt	(0X1E991,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from beginning of file",	0);
	create_insn	(x=0X1E991);
	op_hex		(x,	0);
	create_insn	(x=0X1E995);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E998);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E99B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E99E);
	op_hex		(x,	1);
	set_cmt	(0X1E9A0,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: \n0-from beginnig,1-from current,2-from end",	0);
	create_insn	(x=0X1E9A0);
	op_hex		(x,	0);
	create_insn	(x=0X1E9A4);
	op_hex		(x,	1);
	create_insn	(0X1E9AC);
	set_name	(0X1E9AC,	"_strcat");
	create_insn	(x=0X1E9B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9D5);
	op_hex		(x,	1);
	create_insn	(x=0X1E9DD);
	op_hex		(x,	1);
	create_insn	(0X1E9EC);
	set_name	(0X1E9EC,	"_strcpy");
	create_insn	(x=0X1E9F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA05);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA0A);
	op_hex		(x,	1);
	create_insn	(x=0X1EA10);
	op_hex		(x,	1);
	create_insn	(0X1EA1E);
	set_name	(0X1EA1E,	"_strlen");
	create_insn	(x=0X1EA27);
	op_stkvar	(x,	1);
	create_insn	(0X1EA3A);
	set_name	(0X1EA3A,	"_itoa");
	create_insn	(x=0X1EA41);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA4F);
	op_stkvar	(x,	1);
	create_insn	(0X1EA56);
	set_name	(0X1EA56,	"_kbhit");
	create_insn	(x=0X1EA5F);
	op_hex		(x,	1);
	set_cmt	(0X1EA61,	"DOS - CHECK STANDARD INPUT STATUS\nReturn: AL = FFh if character available\n00h if no character",	0);
	create_insn	(x=0X1EA61);
	op_hex		(x,	0);
	create_insn	(0X1EA66);
	set_name	(0X1EA66,	"_getche");
	create_insn	(0X1EA6A);
	set_name	(0X1EA6A,	"_getch");
	create_insn	(0X1EA7B);
	set_cmt	(0X1EA7C,	"DOS - ",	0);
	create_insn	(x=0X1EA7C);
	op_hex		(x,	0);
	create_insn	(0X1EA82);
	set_name	(0X1EA82,	"_int86");
	create_insn	(x=0X1EA87);
	op_hex		(x,	1);
	create_insn	(x=0X1EA8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA91);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EACC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAD2);
	op_stkvar	(x,	1);
	create_insn	(0X1EAEC);
	create_insn	(x=0X1EAF7);
	op_hex		(x,	1);
	create_insn	(0X1EB00);
	set_name	(0X1EB00,	"_movedata");
	create_insn	(x=0X1EB06);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB09);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB12);
	op_stkvar	(x,	1);
	create_insn	(0X1EB1E);
	set_name	(0X1EB1E,	"_segread");
	create_insn	(x=0X1EB21);
	op_stkvar	(x,	1);
	create_insn	(0X1EB34);
	set_name	(0X1EB34,	"_outp");
	create_insn	(x=0X1EB37);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB3A);
	op_stkvar	(x,	1);
	create_insn	(0X1EB42);
	set_name	(0X1EB42,	"_strupr");
	create_insn	(x=0X1EB45);
	op_stkvar	(x,	1);
	create_insn	(0X1EB64);
	set_name	(0X1EB64,	"_memcpy");
	create_insn	(x=0X1EB6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB72);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB77);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB7C);
	op_hex		(x,	1);
	create_insn	(x=0X1EB82);
	op_hex		(x,	1);
	create_insn	(0X1EB90);
	set_name	(0X1EB90,	"_abs");
	create_insn	(x=0X1EB93);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EB99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB9E);
	op_stkvar	(x,	1);
	create_insn	(0X1EBA6);
	set_name	(0X1EBA6,	"_labs");
	create_insn	(x=0X1EBA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBBB);
	op_stkvar	(x,	1);
	create_insn	(0X1EBC8);
	set_name	(0X1EBC8,	"_srand");
	create_insn	(x=0X1EBCB);
	op_stkvar	(x,	1);
	create_insn	(0X1EBDA);
	set_name	(0X1EBDA,	"_rand");
	set_cmt	(0X1EBE0,	"int",	0);
	set_cmt	(0X1EBE1,	"__int32",	0);
	set_cmt	(0X1EBE2,	"int",	0);
	set_cmt	(0X1EBE6,	"__int32",	0);
	create_insn	(x=0X1EBFC);
	op_hex		(x,	1);
	create_insn	(0X1EC00);
	set_name	(0X1EC00,	"__bios_keybrd");
	create_insn	(x=0X1EC03);
	op_stkvar	(x,	1);
	set_cmt	(0X1EC06,	"KEYBOARD - ",	0);
	create_insn	(x=0X1EC06);
	op_hex		(x,	0);
	create_insn	(x=0X1EC0A);
	op_stkvar	(x,	0);
	create_insn	(0X1EC14);
	set_name	(0X1EC14,	"__aNldiv");
	create_insn	(x=0X1EC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC31);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC46);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC49);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC53);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC5C);
	op_stkvar	(x,	1);
	create_insn	(0X1EC65);
	create_insn	(x=0X1EC67);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC70);
	op_hex		(x,	1);
	create_insn	(x=0X1EC72);
	op_hex		(x,	1);
	create_insn	(x=0X1EC74);
	op_hex		(x,	1);
	create_insn	(x=0X1EC76);
	op_hex		(x,	1);
	create_insn	(x=0X1EC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC94);
	op_stkvar	(x,	1);
	create_insn	(0X1ECB0);
	set_name	(0X1ECB0,	"__aNlmul");
	create_insn	(x=0X1ECB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECC0);
	op_stkvar	(x,	1);
	create_insn	(0X1ECCB);
	create_insn	(x=0X1ECCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECD7);
	op_stkvar	(x,	1);
	create_insn	(0X1ECE4);
	set_name	(0X1ECE4,	"unknown_libname_1");
	create_insn	(x=0X1ECE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECF5);
	op_stkvar	(x,	1);
	create_insn	(0X1ED04);
	set_name	(0X1ED04,	"unknown_libname_2");
	create_insn	(x=0X1ED07);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED15);
	op_stkvar	(x,	1);
	create_insn	(0X1ED24);
	set_name	(0X1ED24,	"__aNuldiv");
	create_insn	(x=0X1ED29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED33);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED3C);
	op_stkvar	(x,	1);
	create_insn	(0X1ED45);
	create_insn	(x=0X1ED47);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED50);
	op_hex		(x,	1);
	create_insn	(x=0X1ED52);
	op_hex		(x,	1);
	create_insn	(x=0X1ED54);
	op_hex		(x,	1);
	create_insn	(x=0X1ED56);
	op_hex		(x,	1);
	create_insn	(x=0X1ED60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED74);
	op_stkvar	(x,	1);
	create_insn	(0X1ED86);
	set_name	(0X1ED86,	"__FF_MSGBANNER");
	create_insn	(0X1EDA6);
	set_name	(0X1EDA6,	"__fptrap");
	create_insn	(0X1EDAC);
	set_name	(0X1EDAC,	"__nullcheck");
	create_insn	(x=0X1EDBA);
	op_hex		(x,	1);
	create_insn	(0X1EDCE);
	set_name	(0X1EDCE,	"__NMSG_TEXT");
	create_insn	(x=0X1EDD5);
	op_stkvar	(x,	1);
	create_insn	(0X1EDF0);
	create_insn	(0X1EDF9);
	set_name	(0X1EDF9,	"__NMSG_WRITE");
	create_insn	(x=0X1EDFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE17);
	op_hex		(x,	1);
	set_cmt	(0X1EE19,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1EE19);
	op_hex		(x,	0);
	create_insn	(0X1EE22);
	set_name	(0X1EE22,	"__dosret0");
	create_insn	(0X1EE2A);
	set_name	(0X1EE2A,	"__dosreturn");
	create_insn	(0X1EE35);
	set_name	(0X1EE35,	"__dosretax");
	create_insn	(0X1EE42);
	set_name	(0X1EE42,	"__maperror");
	create_insn	(0X1EE48);
	set_name	(0X1EE58,	"DrawPolygon3D");
	create_insn	(0X1EE62);
	create_insn	(0X1EE72);
	create_insn	(0X1EE76);
	set_name	(0X1EE76,	"__filbuf");
	create_insn	(x=0X1EE79);
	op_hex		(x,	1);
	set_cmt	(0X1EE7C,	"unsigned int",	0);
	create_insn	(x=0X1EE7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE8B);
	op_hex		(x,	1);
	create_insn	(x=0X1EE8F);
	op_hex		(x,	1);
	create_insn	(x=0X1EE94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE97);
	op_hex		(x,	1);
	create_insn	(x=0X1EE9D);
	op_hex		(x,	1);
	create_insn	(x=0X1EEAA);
	op_hex		(x,	1);
	create_insn	(x=0X1EEB0);
	op_hex		(x,	1);
	create_insn	(x=0X1EEB6);
	op_hex		(x,	1);
	create_insn	(x=0X1EEBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEBD);
	op_hex		(x,	1);
	create_insn	(x=0X1EEC0);
	op_hex		(x,	1);
	create_insn	(x=0X1EED2);
	op_hex		(x,	1);
	create_insn	(x=0X1EED6);
	op_hex		(x,	1);
	create_insn	(x=0X1EED8);
	op_hex		(x,	1);
	create_insn	(x=0X1EEE3);
	op_hex		(x,	1);
	create_insn	(0X1EEE8);
	create_insn	(x=0X1EEED);
	op_stkvar	(x,	1);
	set_cmt	(0X1EEF3,	"void *",	0);
	set_cmt	(0X1EEFA,	"int",	0);
	create_insn	(x=0X1EEFE);
	op_hex		(x,	1);
	create_insn	(0X1EF18);
	create_insn	(0X1EF26);
	create_insn	(0X1EF36);
	set_name	(0X1EF36,	"__freebuf");
	create_insn	(x=0X1EF3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF3D);
	op_hex		(x,	1);
	create_insn	(x=0X1EF43);
	op_hex		(x,	1);
	create_insn	(x=0X1EF4F);
	op_hex		(x,	1);
	create_insn	(x=0X1EF52);
	op_hex		(x,	1);
	create_insn	(0X1EF64);
	set_name	(0X1EF64,	"__openfile");
	create_insn	(x=0X1EF67);
	op_hex		(x,	1);
	create_insn	(x=0X1EF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF6F);
	op_stkvar	(x,	1);
	create_insn	(0X1EF8A);
	create_insn	(x=0X1EF8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF93);
	op_stkvar	(x,	1);
	create_insn	(0X1EF98);
	create_insn	(x=0X1EF9B);
	op_stkvar	(x,	0);
	create_insn	(0X1EFA2);
	create_insn	(x=0X1EFA8);
	op_hex		(x,	1);
	create_insn	(x=0X1EFAE);
	op_hex		(x,	1);
	create_insn	(x=0X1EFB2);
	op_hex		(x,	1);
	create_insn	(x=0X1EFB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFDA);
	op_hex		(x,	1);
	create_insn	(x=0X1EFDF);
	op_hex		(x,	1);
	create_insn	(0X1EFE6);
	create_insn	(x=0X1EFE8);
	op_hex		(x,	1);
	create_insn	(x=0X1EFF2);
	op_hex		(x,	1);
	create_insn	(x=0X1EFF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFFB);
	op_stkvar	(x,	0);
	set_cmt	(0X1F001,	"int",	0);
	set_cmt	(0X1F003,	"char *",	0);
	create_insn	(x=0X1F003);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F009);
	op_hex		(x,	1);
	create_insn	(x=0X1F00C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F016);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F02B);
	op_hex		(x,	1);
	create_insn	(x=0X1F02F);
	op_hex		(x,	1);
	create_insn	(x=0X1F034);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F039);
	op_stkvar	(x,	1);
	set_name	(0X1F03C,	"DrawGouraudPolygon");
	create_insn	(x=0X1F04E);
	op_stkvar	(x,	1);
	create_insn	(0X1F05C);
	set_name	(0X1F05C,	"_fflush");
	create_insn	(x=0X1F05F);
	op_hex		(x,	1);
	set_cmt	(0X1F063,	"unsigned int",	0);
	create_insn	(x=0X1F064);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F06C);
	op_hex		(x,	1);
	create_insn	(x=0X1F072);
	op_hex		(x,	1);
	create_insn	(x=0X1F084);
	op_hex		(x,	1);
	create_insn	(x=0X1F088);
	op_hex		(x,	1);
	create_insn	(x=0X1F08A);
	op_hex		(x,	1);
	create_insn	(x=0X1F096);
	op_stkvar	(x,	0);
	set_cmt	(0X1F09E,	"void *",	0);
	set_cmt	(0X1F0A5,	"int",	0);
	create_insn	(x=0X1F0A9);
	op_hex		(x,	1);
	create_insn	(x=0X1F0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0B1);
	op_hex		(x,	1);
	create_insn	(0X1F0CA);
	set_name	(0X1F0CA,	"__getstream");
	create_insn	(x=0X1F0CD);
	op_hex		(x,	1);
	create_insn	(x=0X1F0D8);
	op_hex		(x,	1);
	create_insn	(0X1F0F4);
	create_insn	(0X1F104);
	set_name	(0X1F104,	"_close");
	create_insn	(x=0X1F107);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F116);
	op_hex		(x,	1);
	set_cmt	(0X1F118,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1F118);
	op_hex		(x,	0);
	create_insn	(0X1F124);
	set_name	(0X1F124,	"_read");
	create_insn	(x=0X1F127);
	op_hex		(x,	1);
	create_insn	(x=0X1F12A);
	op_stkvar	(x,	1);
	create_insn	(0X1F139);
	create_insn	(x=0X1F13B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F140);
	op_hex		(x,	1);
	create_insn	(x=0X1F147);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F14A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F14D);
	op_hex		(x,	1);
	set_cmt	(0X1F14F,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1F14F);
	op_hex		(x,	0);
	create_insn	(x=0X1F157);
	op_hex		(x,	1);
	create_insn	(x=0X1F15E);
	op_hex		(x,	1);
	create_insn	(x=0X1F175);
	op_hex		(x,	1);
	create_insn	(x=0X1F183);
	op_hex		(x,	1);
	create_insn	(0X1F18A);
	create_insn	(0X1F198);
	create_insn	(x=0X1F1A4);
	op_hex		(x,	1);
	create_insn	(x=0X1F1AB);
	op_hex		(x,	1);
	set_cmt	(0X1F1AE,	"DOS - 2+ - IOCTL - GET DEVICE INFORMATION\nBX = file or device handle",	0);
	create_insn	(x=0X1F1AE);
	op_hex		(x,	0);
	create_insn	(x=0X1F1B0);
	op_hex		(x,	1);
	create_insn	(x=0X1F1B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1B9);
	op_hex		(x,	1);
	set_cmt	(0X1F1BB,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1F1BB);
	op_hex		(x,	0);
	create_insn	(x=0X1F1C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1CA);
	op_hex		(x,	1);
	set_cmt	(0X1F1CC,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1F1CC);
	op_hex		(x,	0);
	create_insn	(x=0X1F1D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1DF);
	op_hex		(x,	1);
	set_cmt	(0X1F1E2,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from present location",	0);
	create_insn	(x=0X1F1E2);
	op_hex		(x,	0);
	create_insn	(x=0X1F1E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1F9);
	op_stkvar	(x,	0);
	create_insn	(0X1F202);
	set_name	(0X1F202,	"__cltoasub");
	set_name	(0X1F20E,	"__cxtoa");
	create_insn	(0X1F262);
	set_name	(0X1F262,	"_remove");
	create_insn	(x=0X1F265);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F268);
	op_hex		(x,	1);
	set_cmt	(0X1F26A,	"DOS - 2+ - DELETE A FILE (UNLINK)\nDS:DX -> ASCIZ pathname of file to delete (no wildcards allowed)",	0);
	create_insn	(x=0X1F26A);
	op_hex		(x,	0);
	create_insn	(0X1F270);
	set_name	(0X1F270,	"__aNlshl");
	create_insn	(x=0X1F274);
	op_hex		(x,	1);
	create_insn	(x=0X1F276);
	op_hex		(x,	1);
	create_insn	(0X1F27C);
	set_name	(0X1F27C,	"__aNlshr");
	create_insn	(x=0X1F280);
	op_hex		(x,	1);
	create_insn	(x=0X1F282);
	op_hex		(x,	1);
	create_insn	(0X1F288);
	set_name	(0X1F288,	"__getbuf");
	create_insn	(x=0X1F28B);
	op_hex		(x,	1);
	create_insn	(x=0X1F28F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F29B);
	op_hex		(x,	1);
	create_insn	(x=0X1F29F);
	op_hex		(x,	1);
	create_insn	(x=0X1F2A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F2AE);
	op_hex		(x,	1);
	create_insn	(x=0X1F2B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2BB);
	op_hex		(x,	1);
	create_insn	(x=0X1F2BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2CD);
	op_hex		(x,	1);
	create_insn	(x=0X1F2D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2E0);
	op_stkvar	(x,	1);
	create_insn	(0X1F2F4);
	set_name	(0X1F2F4,	"_open");
	create_insn	(x=0X1F2F7);
	op_hex		(x,	1);
	create_insn	(x=0X1F2FC);
	op_stkvar	(x,	0);
	set_name	(0X1F2FC,	"__copensub");
	create_insn	(x=0X1F2FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F304);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F308);
	op_hex		(x,	1);
	create_insn	(x=0X1F30D);
	op_hex		(x,	1);
	create_insn	(x=0X1F312);
	op_hex		(x,	1);
	create_insn	(x=0X1F319);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F31D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F320);
	op_hex		(x,	1);
	create_insn	(x=0X1F324);
	op_hex		(x,	1);
	set_cmt	(0X1F326,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read, 1 - write, 2 - read & write",	0);
	create_insn	(x=0X1F326);
	op_hex		(x,	0);
	create_insn	(x=0X1F32F);
	op_hex		(x,	1);
	create_insn	(0X1F338);
	create_insn	(0X1F33C);
	create_insn	(x=0X1F33F);
	op_hex		(x,	1);
	create_insn	(x=0X1F347);
	op_hex		(x,	1);
	set_cmt	(0X1F349,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1F349);
	op_hex		(x,	0);
	create_insn	(x=0X1F350);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F354);
	op_hex		(x,	1);
	set_cmt	(0X1F357,	"DOS - 2+ - IOCTL - GET DEVICE INFORMATION\nBX = file or device handle",	0);
	create_insn	(x=0X1F357);
	op_hex		(x,	0);
	create_insn	(x=0X1F359);
	op_hex		(x,	1);
	create_insn	(x=0X1F35E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F362);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F36B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F36E);
	op_hex		(x,	1);
	create_insn	(x=0X1F373);
	op_hex		(x,	1);
	create_insn	(x=0X1F37A);
	op_hex		(x,	1);
	set_cmt	(0X1F37C,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1F37C);
	op_hex		(x,	0);
	create_insn	(x=0X1F381);
	op_hex		(x,	1);
	set_cmt	(0X1F383,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1F383);
	op_hex		(x,	0);
	create_insn	(x=0X1F385);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F388);
	op_hex		(x,	1);
	set_cmt	(0X1F38B,	"DOS - 2+ - GET FILE ATTRIBUTES\nDS:DX -> ASCIZ file name or directory\nname without trailing slash",	0);
	create_insn	(x=0X1F38B);
	op_hex		(x,	0);
	create_insn	(x=0X1F390);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F399);
	op_hex		(x,	1);
	create_insn	(0X1F3A1);
	create_insn	(x=0X1F3A6);
	op_hex		(x,	1);
	set_cmt	(0X1F3A9,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X1F3A9);
	op_hex		(x,	0);
	create_insn	(x=0X1F3AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3B0);
	op_hex		(x,	1);
	set_cmt	(0X1F3B2,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X1F3B2);
	op_hex		(x,	0);
	create_insn	(x=0X1F3B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3C2);
	op_hex		(x,	1);
	set_cmt	(0X1F3C5,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X1F3C5);
	op_hex		(x,	0);
	create_insn	(x=0X1F3C9);
	op_hex		(x,	1);
	set_cmt	(0X1F3CB,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1F3CB);
	op_hex		(x,	0);
	create_insn	(x=0X1F3D1);
	op_hex		(x,	1);
	set_cmt	(0X1F3D4,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from beginning of file",	0);
	create_insn	(x=0X1F3D4);
	op_hex		(x,	0);
	create_byte	(0X1F3D8);
	create_insn	(x=0X1F3D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3E6);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F3EC);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F3F3);
	op_hex		(x,	1);
	create_insn	(x=0X1F3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3F9);
	op_hex		(x,	1);
	set_cmt	(0X1F3FB,	"DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT)\nCX = attributes for file\nDS:DX -> ASCIZ filename (may include drive and path)",	0);
	create_insn	(x=0X1F3FB);
	op_hex		(x,	0);
	create_insn	(0X1F402);
	create_insn	(x=0X1F403);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F409);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F410);
	op_hex		(x,	1);
	set_cmt	(0X1F412,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1F412);
	op_hex		(x,	0);
	create_insn	(x=0X1F414);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F417);
	op_hex		(x,	1);
	create_insn	(x=0X1F419);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F41F);
	op_hex		(x,	1);
	set_cmt	(0X1F421,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read, 1 - write, 2 - read & write",	0);
	create_insn	(x=0X1F421);
	op_hex		(x,	0);
	create_insn	(x=0X1F426);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F42C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F433);
	op_hex		(x,	1);
	create_insn	(x=0X1F436);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F439);
	op_hex		(x,	1);
	set_cmt	(0X1F43C,	"DOS - 2+ - SET FILE ATTRIBUTES\nDS:DX -> ASCIZ file name\nCX = file attribute bits",	0);
	create_insn	(x=0X1F43C);
	op_hex		(x,	0);
	create_insn	(x=0X1F440);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F446);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F449);
	op_hex		(x,	1);
	set_cmt	(0X1F44C,	"DOS - 2+ - GET FILE ATTRIBUTES\nDS:DX -> ASCIZ file name or directory\nname without trailing slash",	0);
	create_insn	(x=0X1F44C);
	op_hex		(x,	0);
	create_insn	(x=0X1F452);
	op_hex		(x,	1);
	create_insn	(x=0X1F459);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1F460);
	op_hex		(x,	1);
	create_insn	(x=0X1F469);
	op_hex		(x,	1);
	set_cmt	(0X1F46B,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X1F46B);
	op_hex		(x,	0);
	create_insn	(x=0X1F473);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F476);
	op_hex		(x,	1);
	create_insn	(0X1F483);
	create_insn	(0X1F487);
	set_name	(0X1F487,	"__cXENIXtoDOSmode");
	create_insn	(x=0X1F490);
	op_hex		(x,	1);
	create_insn	(x=0X1F494);
	op_hex		(x,	1);
	create_insn	(0X1F498);
	set_name	(0X1F498,	"_write");
	create_insn	(x=0X1F49B);
	op_hex		(x,	1);
	create_insn	(x=0X1F49E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4AE);
	op_hex		(x,	1);
	set_cmt	(0X1F4BC,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X1F4BC);
	op_hex		(x,	0);
	create_insn	(x=0X1F4C0);
	op_hex		(x,	1);
	create_insn	(x=0X1F4C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4F1);
	op_hex		(x,	1);
	create_insn	(x=0X1F509);
	op_stkvar	(x,	1);
	create_insn	(0X1F51D);
	create_insn	(x=0X1F529);
	op_stkvar	(x,	0);
	create_insn	(0X1F52E);
	create_insn	(0X1F533);
	create_insn	(0X1F537);
	create_insn	(0X1F539);
	create_insn	(0X1F53E);
	create_insn	(x=0X1F54A);
	op_hex		(x,	1);
	set_cmt	(0X1F54C,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1F54C);
	op_hex		(x,	0);
	create_insn	(x=0X1F55D);
	op_hex		(x,	1);
	create_insn	(x=0X1F566);
	op_hex		(x,	1);
	create_insn	(0X1F578);
	create_insn	(0X1F57E);
	create_insn	(x=0X1F58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F598);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F59B);
	op_hex		(x,	1);
	set_cmt	(0X1F59D,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X1F59D);
	op_hex		(x,	0);
	create_insn	(0X1F5A5);
	create_insn	(x=0X1F5A9);
	op_hex		(x,	1);
	create_insn	(0X1F5BA);
	create_insn	(0X1F5C0);
	set_name	(0X1F5C0,	"unknown_libname_3");
	create_insn	(x=0X1F5C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5CA);
	op_hex		(x,	1);
	create_insn	(0X1F5D2);
	set_name	(0X1F5D2,	"unknown_libname_4");
	create_insn	(0X1F5EE);
	create_insn	(x=0X1F5EF);
	op_hex		(x,	1);
	create_insn	(x=0X1F608);
	op_stkvar	(x,	1);
	create_insn	(0X1F618);
	set_name	(0X1F618,	"_flushall");
	create_insn	(x=0X1F61B);
	op_hex		(x,	1);
	create_insn	(x=0X1F628);
	op_hex		(x,	1);
	set_cmt	(0X1F62E,	"FILE *",	0);
	create_insn	(x=0X1F632);
	op_hex		(x,	1);
	create_insn	(0X1F64A);
	set_name	(0X1F64A,	"_stackavail");
	create_insn	(0X1F658);
	create_insn	(0X1F65C);
	create_insn	(0X1F65F);
	set_name	(0X1F65F,	"__amalloc");
	create_insn	(x=0X1F662);
	op_hex		(x,	1);
	create_insn	(x=0X1F671);
	op_hex		(x,	1);
	create_insn	(x=0X1F67F);
	op_hex		(x,	1);
	create_insn	(0X1F68F);
	create_insn	(0X1F69F);
	create_insn	(0X1F6B7);
	create_insn	(x=0X1F6C7);
	op_hex		(x,	1);
	create_insn	(x=0X1F6D7);
	op_hex		(x,	1);
	create_insn	(0X1F6E7);
	create_insn	(0X1F6F2);
	create_insn	(0X1F70A);
	create_insn	(x=0X1F716);
	op_hex		(x,	1);
	create_insn	(0X1F72D);
	create_insn	(0X1F742);
	set_name	(0X1F742,	"__amexpand");
	create_insn	(x=0X1F746);
	op_hex		(x,	1);
	create_insn	(x=0X1F759);
	op_hex		(x,	1);
	create_insn	(x=0X1F774);
	op_hex		(x,	1);
	create_insn	(0X1F77C);
	set_name	(0X1F77C,	"__amlink");
	create_insn	(0X1F79E);
	set_name	(0X1F79E,	"__amallocbrk");
	create_insn	(x=0X1F7AF);
	op_hex		(x,	1);
	create_insn	(0X1F7BE);
	set_name	(0X1F7BE,	"_brkctl");
	create_insn	(x=0X1F7C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F7CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7D0);
	op_stkvar	(x,	1);
	create_insn	(0X1F7DD);
	create_insn	(x=0X1F7EB);
	op_stkvar	(x,	0);
	create_insn	(0X1F808);
	create_insn	(x=0X1F80D);
	op_hex		(x,	1);
	create_insn	(x=0X1F813);
	op_hex		(x,	1);
	set_cmt	(0X1F815,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired",	0);
	create_insn	(x=0X1F815);
	op_hex		(x,	0);
	create_insn	(0X1F82C);
	create_insn	(0X1F842);
	create_insn	(x=0X1F859);
	op_hex		(x,	1);
	create_insn	(x=0X1F85B);
	op_hex		(x,	1);
	create_insn	(x=0X1F85D);
	op_hex		(x,	1);
	create_insn	(x=0X1F85F);
	op_hex		(x,	1);
	create_insn	(x=0X1F86E);
	op_hex		(x,	1);
	set_cmt	(0X1F870,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X1F870);
	op_hex		(x,	0);
	set_name	(0X1F881,	"ClipPolygonToViewport");
	create_insn	(0X1F882);
	create_insn	(x=0X1F889);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F894);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F897);
	op_stkvar	(x,	1);
	create_insn	(0X1F8E6);
	create_insn	(x=0X1F8EE);
	op_hex		(x,	1);
	create_insn	(x=0X1F8F0);
	op_hex		(x,	1);
	set_cmt	(0X1F8F8,	"Projects a 3D point to 2D screen coordinates.",	1);
	create_insn	(0X1F8F8);
	set_name	(0X1F8F8,	"ProjectAndCalculateScreenCoords");
	create_insn	(x=0X1F903);
	op_hex		(x,	1);
	create_insn	(x=0X1F946);
	op_hex		(x,	1);
	create_insn	(x=0X1F948);
	op_hex		(x,	1);
	create_insn	(x=0X1F94A);
	op_hex		(x,	1);
	create_insn	(x=0X1F94C);
	op_hex		(x,	1);
	create_insn	(0X1F967);
	create_insn	(0X1F97B);
	create_insn	(0X1F993);
	set_name	(0X1F993,	"SetCustomInterruptVector");
	create_insn	(x=0X1F99F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X1F9AE);
	op_seg		(x,	1);
	create_insn	(0X1F9B7);
	set_name	(0X1F9B7,	"RestoreOriginalInterruptVector");
	create_insn	(0X1F9CC);
	set_cmt	(0X1F9DD,	"Manages the clipping and drawing of a line segment.",	1);
	create_insn	(0X1F9DD);
	set_name	(0X1F9DD,	"ClipAndDrawLineManager");
	create_insn	(0X1FA27);
	create_insn	(0X1FAA3);
	create_insn	(0X1FAA7);
	create_insn	(0X1FABB);
	set_cmt	(0X1FABF,	"Clips a line to the viewport boundaries.",	1);
	create_insn	(0X1FABF);
	set_name	(0X1FAD1,	"ClipLineToViewport");
	create_insn	(0X1FAF6);
	create_insn	(0X1FB1D);
	create_insn	(x=0X1FB4D);
	op_hex		(x,	1);
	create_insn	(0X1FB52);
	create_insn	(x=0X1FB83);
	op_hex		(x,	1);
	create_insn	(0X1FB88);
	create_insn	(x=0X1FB8B);
	op_hex		(x,	1);
	create_insn	(x=0X1FB94);
	op_hex		(x,	1);
	create_insn	(x=0X1FB9B);
	op_hex		(x,	1);
	create_insn	(x=0X1FBAD);
	op_hex		(x,	1);
	create_insn	(0X1FBB4);
	create_insn	(0X1FBD5);
	create_insn	(0X1FBEC);
	set_cmt	(0X1FC03,	"Calculates the outcode for a point, used in Cohen-Sutherland line clipping.",	1);
	create_insn	(0X1FC03);
	set_name	(0X1FC03,	"CalculateOutcode");
	create_insn	(x=0X1FC10);
	op_hex		(x,	1);
	create_insn	(x=0X1FC1C);
	op_hex		(x,	1);
	create_insn	(x=0X1FC29);
	op_hex		(x,	1);
	create_insn	(x=0X1FC35);
	op_hex		(x,	1);
	create_insn	(0X1FC3A);
	create_insn	(x=0X1FC46);
	op_hex		(x,	1);
	create_insn	(x=0X1FC4A);
	op_hex		(x,	1);
	create_insn	(x=0X1FC5A);
	op_hex		(x,	1);
	create_insn	(x=0X1FC5E);
	op_hex		(x,	1);
	create_insn	(x=0X1FC6C);
	op_hex		(x,	1);
	create_insn	(x=0X1FC73);
	op_hex		(x,	1);
	create_insn	(x=0X1FC7B);
	op_hex		(x,	1);
	create_insn	(x=0X1FC83);
	op_hex		(x,	1);
	create_insn	(0X1FC8B);
	set_cmt	(0X1FC8E,	"Uses a bisection method to find the intersection of a line with the clipping boundary.",	1);
	create_insn	(0X1FC8E);
	set_name	(0X1FC8E,	"ClipLineSegment_Bisection");
	create_insn	(0X1FC98);
	create_insn	(x=0X1FCB3);
	op_hex		(x,	1);
	create_insn	(x=0X1FCB5);
	op_hex		(x,	1);
	create_insn	(x=0X1FCBF);
	op_hex		(x,	1);
	create_insn	(x=0X1FCC1);
	op_hex		(x,	1);
	create_insn	(0X1FCF2);
	create_insn	(0X1FCF3);
	set_cmt	(0X1FD04,	"Internal helper for the bisection-based line clipping.",	1);
	create_insn	(0X1FD04);
	set_name	(0X1FD04,	"ClipLineSegment_Bisection_Int");
	create_insn	(0X1FD0E);
	create_insn	(x=0X1FD29);
	op_hex		(x,	1);
	create_insn	(x=0X1FD2B);
	op_hex		(x,	1);
	create_insn	(x=0X1FD35);
	op_hex		(x,	1);
	create_insn	(x=0X1FD37);
	op_hex		(x,	1);
	create_insn	(0X1FD6F);
	create_insn	(0X1FD72);
	create_insn	(0X1FD8B);
	create_insn	(0X1FD9C);
	create_insn	(0X1FDAD);
	create_insn	(x=0X1FDB4);
	op_hex		(x,	1);
	create_insn	(x=0X1FDBC);
	op_hex		(x,	1);
	create_insn	(x=0X1FDC3);
	op_hex		(x,	1);
	create_insn	(x=0X1FDCB);
	op_hex		(x,	1);
	create_insn	(0X1FDD0);
	create_insn	(x=0X1FDE2);
	op_hex		(x,	1);
	create_insn	(x=0X1FDE6);
	op_hex		(x,	1);
	create_insn	(0X1FE06);
	create_insn	(0X1FE0A);
	create_insn	(x=0X1FE1C);
	op_hex		(x,	1);
	create_insn	(x=0X1FE20);
	op_hex		(x,	1);
	create_insn	(0X1FE39);
	create_insn	(0X1FE3B);
	create_insn	(0X1FE42);
	create_insn	(0X1FE5C);
	create_insn	(x=0X1FE74);
	op_hex		(x,	1);
	create_insn	(0X1FE96);
	create_insn	(0X1FE9C);
	create_byte	(0X1FEA4);
	create_insn	(0X1FEA5);
	create_byte	(0X1FEAA);
	create_insn	(0X1FEAB);
	create_insn	(0X1FEB4);
	create_insn	(x=0X1FEC4);
	op_hex		(x,	1);
	create_insn	(0X1FEC8);
	create_insn	(0X1FECC);
	create_insn	(0X1FED6);
	create_insn	(0X1FED8);
	create_insn	(0X1FEEC);
	create_insn	(x=0X1FEEF);
	op_stkvar	(x,	1);
	create_insn	(0X1FEFE);
	create_insn	(0X1FF20);
	create_insn	(x=0X1FF31);
	op_hex		(x,	1);
	create_insn	(x=0X1FF52);
	op_hex		(x,	1);
	create_insn	(x=0X1FF5A);
	op_hex		(x,	1);
	create_insn	(x=0X1FF5C);
	op_hex		(x,	1);
	create_insn	(x=0X1FF65);
	op_hex		(x,	1);
	create_insn	(x=0X1FF6B);
	op_hex		(x,	1);
	create_insn	(x=0X1FF6D);
	op_hex		(x,	1);
	create_insn	(x=0X1FF77);
	op_hex		(x,	1);
	create_insn	(x=0X1FF85);
	op_hex		(x,	1);
	create_insn	(x=0X1FF9A);
	op_hex		(x,	1);
	create_insn	(x=0X1FF9C);
	op_hex		(x,	1);
	create_insn	(x=0X1FFA5);
	op_hex		(x,	1);
	create_insn	(x=0X1FFAB);
	op_hex		(x,	1);
	create_insn	(x=0X1FFAD);
	op_hex		(x,	1);
	create_insn	(x=0X1FFB7);
	op_hex		(x,	1);
	create_insn	(x=0X1FFBE);
	op_hex		(x,	1);
	create_insn	(x=0X1FFC0);
	op_hex		(x,	1);
	create_insn	(x=0X1FFD0);
	op_hex		(x,	1);
	create_insn	(x=0X1FFD7);
	op_hex		(x,	1);
	create_insn	(x=0X1FFD9);
	op_hex		(x,	1);
	create_insn	(0X20018);
	create_insn	(0X20042);
	create_insn	(x=0X200E8);
	op_hex		(x,	1);
	create_insn	(0X200FE);
	set_cmt	(0X20104,	"Main function to process and prepare a 3D object for rendering.",	1);
	create_insn	(0X20104);
	set_name	(0X20104,	"Process3DObjectData");
	create_insn	(x=0X20109);
	op_stkvar	(x,	1);
	create_insn	(x=0X2010F);
	op_stkvar	(x,	1);
	create_insn	(x=0X20115);
	op_stkvar	(x,	1);
	create_insn	(x=0X2011B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2012B);
	op_stkvar	(x,	1);
	create_insn	(x=0X20136);
	op_stkvar	(x,	1);
	create_insn	(x=0X20141);
	op_stkvar	(x,	1);
	create_insn	(x=0X20162);
	op_hex		(x,	1);
	create_insn	(x=0X2016B);
	op_hex		(x,	1);
	create_byte	(0X20180);
	create_insn	(0X20181);
	set_cmt	(0X20188,	"Transforms a 3D point from object space to view space and then projects to screen space.",	1);
	create_insn	(0X20188);
	set_name	(0X20188,	"TransformAndProjectPoint");
	create_insn	(x=0X201A4);
	op_hex		(x,	1);
	create_insn	(x=0X201A6);
	op_hex		(x,	1);
	create_insn	(x=0X201CB);
	op_hex		(x,	1);
	create_insn	(x=0X201CD);
	op_hex		(x,	1);
	create_insn	(x=0X201F2);
	op_hex		(x,	1);
	create_insn	(x=0X201F4);
	op_hex		(x,	1);
	create_insn	(x=0X20208);
	op_hex		(x,	1);
	create_insn	(x=0X20220);
	op_hex		(x,	1);
	create_insn	(x=0X20232);
	op_hex		(x,	1);
	create_insn	(x=0X20234);
	op_hex		(x,	1);
	create_insn	(x=0X20256);
	op_hex		(x,	1);
	create_insn	(x=0X20258);
	op_hex		(x,	1);
	create_insn	(x=0X2025A);
	op_hex		(x,	1);
	create_insn	(x=0X2025E);
	op_hex		(x,	1);
	create_insn	(x=0X2026E);
	op_hex		(x,	1);
	create_insn	(x=0X20270);
	op_hex		(x,	1);
	create_insn	(0X20282);
	create_insn	(0X20289);
	create_insn	(x=0X2028C);
	op_hex		(x,	1);
	create_insn	(x=0X20290);
	op_hex		(x,	1);
	create_insn	(x=0X20293);
	op_hex		(x,	1);
	create_insn	(0X202AC);
	create_insn	(0X202B1);
	create_insn	(0X202B2);
	create_insn	(0X202B6);
	create_insn	(x=0X202B8);
	op_hex		(x,	1);
	create_insn	(x=0X202BB);
	op_hex		(x,	1);
	create_insn	(0X202C7);
	create_insn	(x=0X202CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X202CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X202D1);
	op_stkvar	(x,	1);
	create_insn	(0X202DA);
	create_insn	(0X202E8);
	create_insn	(0X202F6);
	set_cmt	(0X20300,	"Inserts an object into a Z-sorted list for rendering using the Painter's Algorithm.",	1);
	create_insn	(0X20300);
	set_name	(0X20300,	"SortObjectForDrawing");
	create_insn	(0X2032C);
	create_insn	(x=0X20342);
	op_hex		(x,	1);
	create_insn	(x=0X2034B);
	op_hex		(x,	1);
	create_insn	(x=0X2034D);
	op_hex		(x,	1);
	create_insn	(x=0X203A6);
	op_hex		(x,	1);
	create_insn	(x=0X203D1);
	op_hex		(x,	1);
	set_cmt	(0X203E0,	"Draws all objects in the sorted list, from back to front.",	1);
	create_insn	(0X203E0);
	set_name	(0X203E0,	"DrawSortedObjects");
	create_insn	(0X2043B);
	create_insn	(0X2043C);
	create_insn	(0X2044A);
	set_cmt	(0X20467,	"Dispatches to specific primitive drawing routines based on object data stream.",	1);
	create_insn	(0X20467);
	set_name	(0X20467,	"Draw3DObjectDispatcher");
	create_insn	(x=0X20479);
	op_hex		(x,	1);
	create_insn	(x=0X2048B);
	op_hex		(x,	1);
	create_insn	(x=0X2048D);
	op_hex		(x,	1);
	create_insn	(x=0X2048F);
	op_hex		(x,	1);
	create_insn	(x=0X20491);
	op_hex		(x,	1);
	create_insn	(x=0X2049D);
	op_hex		(x,	1);
	create_insn	(0X204A8);
	create_insn	(0X204AB);
	create_insn	(0X204E0);
	set_cmt	(0X20534,	"Sets up matrices and other parameters before transforming an object.",	1);
	create_insn	(0X20534);
	set_name	(0X20534,	"SetupObjectTransformation");
	create_insn	(x=0X2053A);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X2054F);
	create_insn	(x=0X20575);
	op_hex		(x,	1);
	create_insn	(x=0X20577);
	op_hex		(x,	1);
	create_insn	(x=0X20579);
	op_hex		(x,	1);
	create_insn	(x=0X205A1);
	op_hex		(x,	1);
	create_insn	(x=0X205A3);
	op_hex		(x,	1);
	create_insn	(x=0X205A5);
	op_hex		(x,	1);
	create_insn	(x=0X205CD);
	op_hex		(x,	1);
	create_insn	(x=0X205CF);
	op_hex		(x,	1);
	create_insn	(x=0X205D1);
	op_hex		(x,	1);
	create_insn	(x=0X205E0);
	op_hex		(x,	1);
	create_insn	(x=0X2063F);
	op_hex		(x,	1);
	create_insn	(x=0X20641);
	op_hex		(x,	1);
	create_insn	(0X20657);
	create_insn	(0X20658);
	create_insn	(0X20662);
	create_insn	(0X20674);
	create_insn	(0X2067C);
	create_insn	(x=0X20681);
	op_hex		(x,	1);
	create_insn	(x=0X20685);
	op_hex		(x,	1);
	create_insn	(x=0X20690);
	op_hex		(x,	1);
	create_insn	(x=0X20692);
	op_hex		(x,	1);
	create_insn	(x=0X206A1);
	op_hex		(x,	1);
	create_insn	(x=0X206A3);
	op_hex		(x,	1);
	create_insn	(x=0X206B2);
	op_hex		(x,	1);
	create_insn	(x=0X206B4);
	op_hex		(x,	1);
	create_insn	(x=0X206CB);
	op_hex		(x,	1);
	create_insn	(x=0X206CF);
	op_hex		(x,	1);
	create_insn	(x=0X206DA);
	op_hex		(x,	1);
	create_insn	(x=0X206DC);
	op_hex		(x,	1);
	create_insn	(x=0X206EB);
	op_hex		(x,	1);
	create_insn	(x=0X206ED);
	op_hex		(x,	1);
	create_insn	(x=0X206FC);
	op_hex		(x,	1);
	create_insn	(x=0X206FE);
	op_hex		(x,	1);
	create_insn	(x=0X20715);
	op_hex		(x,	1);
	create_insn	(x=0X20719);
	op_hex		(x,	1);
	create_insn	(x=0X20724);
	op_hex		(x,	1);
	create_insn	(x=0X20726);
	op_hex		(x,	1);
	create_insn	(x=0X20735);
	op_hex		(x,	1);
	create_insn	(x=0X20737);
	op_hex		(x,	1);
	create_insn	(x=0X20746);
	op_hex		(x,	1);
	create_insn	(x=0X20748);
	op_hex		(x,	1);
	create_insn	(x=0X20763);
	op_hex		(x,	1);
	create_insn	(x=0X20767);
	op_hex		(x,	1);
	create_insn	(x=0X20769);
	op_hex		(x,	1);
	create_insn	(x=0X2076F);
	op_hex		(x,	1);
	create_insn	(x=0X20773);
	op_hex		(x,	1);
	create_insn	(x=0X20775);
	op_hex		(x,	1);
	create_insn	(x=0X2077B);
	op_hex		(x,	1);
	create_insn	(x=0X2077F);
	op_hex		(x,	1);
	create_insn	(x=0X20781);
	op_hex		(x,	1);
	create_insn	(x=0X2079D);
	op_hex		(x,	1);
	create_insn	(x=0X2079F);
	op_hex		(x,	1);
	create_insn	(x=0X207ED);
	op_hex		(x,	1);
	create_insn	(x=0X207EF);
	op_hex		(x,	1);
	create_insn	(0X207F7);
	create_insn	(0X207F8);
	create_insn	(x=0X207FA);
	op_hex		(x,	1);
	create_insn	(x=0X207FD);
	op_hex		(x,	1);
	create_insn	(x=0X207FF);
	op_hex		(x,	1);
	create_insn	(0X20812);
	create_insn	(x=0X2081E);
	op_hex		(x,	1);
	create_insn	(x=0X20828);
	op_hex		(x,	1);
	create_insn	(x=0X20834);
	op_hex		(x,	1);
	create_insn	(x=0X2083E);
	op_hex		(x,	1);
	create_insn	(x=0X2084D);
	op_hex		(x,	1);
	create_insn	(x=0X20857);
	op_hex		(x,	1);
	create_insn	(x=0X2087D);
	op_hex		(x,	1);
	create_insn	(x=0X2087F);
	op_hex		(x,	1);
	create_insn	(x=0X208AE);
	op_hex		(x,	1);
	create_insn	(x=0X208B0);
	op_hex		(x,	1);
	create_insn	(x=0X208DF);
	op_hex		(x,	1);
	create_insn	(x=0X208E1);
	op_hex		(x,	1);
	create_insn	(0X208FA);
	create_insn	(0X208FD);
	create_insn	(x=0X20906);
	op_hex		(x,	1);
	create_insn	(0X20917);
	create_insn	(x=0X2091B);
	op_hex		(x,	1);
	create_insn	(x=0X2091D);
	op_hex		(x,	1);
	set_cmt	(0X20970,	"Iterates through an object's polygon data and calls projection/drawing functions.",	1);
	create_insn	(0X20970);
	set_name	(0X20970,	"DrawObjectPolygons");
	create_insn	(x=0X20972);
	op_hex		(x,	1);
	create_insn	(x=0X20976);
	op_hex		(x,	1);
	create_insn	(x=0X2097C);
	op_hex		(x,	1);
	create_insn	(x=0X2097F);
	op_hex		(x,	1);
	create_insn	(x=0X20981);
	op_hex		(x,	1);
	create_insn	(0X20994);
	create_insn	(x=0X209C8);
	op_hex		(x,	1);
	create_insn	(x=0X209CA);
	op_hex		(x,	1);
	create_insn	(x=0X209F9);
	op_hex		(x,	1);
	create_insn	(x=0X209FB);
	op_hex		(x,	1);
	create_insn	(x=0X20A2A);
	op_hex		(x,	1);
	create_insn	(x=0X20A2C);
	op_hex		(x,	1);
	create_insn	(0X20A46);
	set_cmt	(0X20A58,	"Processes a list of polygons, clipping them against the viewport before drawing.",	1);
	create_insn	(0X20A58);
	set_name	(0X20A58,	"ProcessAndClipPolygons");
	create_insn	(0X20A76);
	create_insn	(x=0X20A7C);
	op_hex		(x,	1);
	create_insn	(x=0X20A7E);
	op_hex		(x,	1);
	create_insn	(x=0X20A84);
	op_hex		(x,	1);
	create_insn	(x=0X20A86);
	op_hex		(x,	1);
	create_insn	(0X20AB8);
	create_insn	(0X20AC0);
	create_insn	(x=0X20AC7);
	op_hex		(x,	1);
	create_insn	(0X20ACE);
	create_insn	(0X20B01);
	create_insn	(0X20B02);
	create_insn	(x=0X20B17);
	op_hex		(x,	1);
	create_insn	(x=0X20B2F);
	op_hex		(x,	1);
	create_insn	(x=0X20B36);
	op_hex		(x,	1);
	create_insn	(x=0X20B38);
	op_hex		(x,	1);
	create_insn	(x=0X20B5A);
	op_hex		(x,	1);
	create_insn	(x=0X20B61);
	op_hex		(x,	1);
	create_insn	(x=0X20B63);
	op_hex		(x,	1);
	create_insn	(x=0X20BA5);
	op_hex		(x,	1);
	create_insn	(0X20BAE);
	create_insn	(x=0X20BB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BBC);
	op_stkvar	(x,	1);
	create_insn	(0X20BC6);
	set_cmt	(0X20BDF,	"Sets up the rotation and transformation matrix for rendering a polygon. Contains 'SetupPolygonForRendering' label.",	1);
	create_insn	(0X20BDF);
	set_name	(0X20BDF,	"SetupObjectMatrix");
	set_name	(0X20C07,	"SetupPolygonForRendering");
	create_insn	(x=0X20C28);
	op_hex		(x,	1);
	create_insn	(x=0X20C2A);
	op_hex		(x,	1);
	create_insn	(x=0X20C34);
	op_hex		(x,	1);
	create_insn	(x=0X20C36);
	op_hex		(x,	1);
	create_insn	(x=0X20C43);
	op_hex		(x,	1);
	create_insn	(x=0X20C45);
	op_hex		(x,	1);
	create_insn	(x=0X20C54);
	op_hex		(x,	1);
	create_insn	(x=0X20C56);
	op_hex		(x,	1);
	create_insn	(x=0X20C60);
	op_hex		(x,	1);
	create_insn	(x=0X20C62);
	op_hex		(x,	1);
	create_insn	(x=0X20C6F);
	op_hex		(x,	1);
	create_insn	(x=0X20C71);
	op_hex		(x,	1);
	create_insn	(x=0X20C81);
	op_hex		(x,	1);
	create_insn	(x=0X20C83);
	op_hex		(x,	1);
	create_insn	(x=0X20C8F);
	op_hex		(x,	1);
	create_insn	(x=0X20C91);
	op_hex		(x,	1);
	create_insn	(x=0X20C9D);
	op_hex		(x,	1);
	create_insn	(x=0X20C9F);
	op_hex		(x,	1);
	create_insn	(x=0X20CB2);
	op_hex		(x,	1);
	create_insn	(x=0X20CB4);
	op_hex		(x,	1);
	create_insn	(x=0X20CC1);
	op_hex		(x,	1);
	create_insn	(x=0X20CC3);
	op_hex		(x,	1);
	create_insn	(x=0X20CD2);
	op_hex		(x,	1);
	create_insn	(x=0X20CD4);
	op_hex		(x,	1);
	create_insn	(x=0X20CE1);
	op_hex		(x,	1);
	create_insn	(x=0X20CE3);
	op_hex		(x,	1);
	create_insn	(x=0X20CF3);
	op_hex		(x,	1);
	create_insn	(x=0X20CF5);
	op_hex		(x,	1);
	create_insn	(0X20CFB);
	create_insn	(x=0X20D44);
	op_hex		(x,	1);
	create_insn	(x=0X20D46);
	op_hex		(x,	1);
	create_insn	(x=0X20D50);
	op_hex		(x,	1);
	create_insn	(x=0X20D52);
	op_hex		(x,	1);
	create_insn	(x=0X20D5F);
	op_hex		(x,	1);
	create_insn	(x=0X20D61);
	op_hex		(x,	1);
	create_insn	(x=0X20D70);
	op_hex		(x,	1);
	create_insn	(x=0X20D72);
	op_hex		(x,	1);
	create_insn	(x=0X20D7C);
	op_hex		(x,	1);
	create_insn	(x=0X20D7E);
	op_hex		(x,	1);
	create_insn	(x=0X20D8B);
	op_hex		(x,	1);
	create_insn	(x=0X20D8D);
	op_hex		(x,	1);
	create_insn	(x=0X20D9D);
	op_hex		(x,	1);
	create_insn	(x=0X20D9F);
	op_hex		(x,	1);
	create_insn	(x=0X20DAD);
	op_hex		(x,	1);
	create_insn	(x=0X20DAF);
	op_hex		(x,	1);
	create_insn	(x=0X20DBD);
	op_hex		(x,	1);
	create_insn	(x=0X20DBF);
	op_hex		(x,	1);
	create_insn	(x=0X20DD0);
	op_hex		(x,	1);
	create_insn	(x=0X20DD2);
	op_hex		(x,	1);
	create_insn	(x=0X20DDF);
	op_hex		(x,	1);
	create_insn	(x=0X20DE1);
	op_hex		(x,	1);
	create_insn	(x=0X20DF0);
	op_hex		(x,	1);
	create_insn	(x=0X20DF2);
	op_hex		(x,	1);
	create_insn	(x=0X20DFF);
	op_hex		(x,	1);
	create_insn	(x=0X20E01);
	op_hex		(x,	1);
	create_insn	(x=0X20E11);
	op_hex		(x,	1);
	create_insn	(x=0X20E13);
	op_hex		(x,	1);
	create_insn	(0X20E19);
	create_insn	(0X20E38);
	create_insn	(x=0X20E3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E43);
	op_stkvar	(x,	1);
	set_cmt	(0X20E4D,	"Performs a 3x3 matrix multiplication.",	1);
	create_insn	(0X20E4D);
	set_name	(0X20E4D,	"MatrixMultiply_3x3");
	create_insn	(x=0X20E51);
	op_hex		(x,	1);
	create_insn	(x=0X20E53);
	op_hex		(x,	1);
	create_insn	(x=0X20E5F);
	op_hex		(x,	1);
	create_insn	(x=0X20E61);
	op_hex		(x,	1);
	create_insn	(x=0X20E6D);
	op_hex		(x,	1);
	create_insn	(x=0X20E6F);
	op_hex		(x,	1);
	create_insn	(x=0X20E7C);
	op_hex		(x,	1);
	create_insn	(x=0X20E7E);
	op_hex		(x,	1);
	create_insn	(x=0X20E8A);
	op_hex		(x,	1);
	set_name	(0X20E8A,	"IsPointOnScreen");
	create_insn	(x=0X20E8C);
	op_hex		(x,	1);
	create_insn	(x=0X20E98);
	op_hex		(x,	1);
	create_insn	(x=0X20E9A);
	op_hex		(x,	1);
	create_insn	(x=0X20EA8);
	op_hex		(x,	1);
	create_insn	(x=0X20EAA);
	op_hex		(x,	1);
	create_insn	(x=0X20EB6);
	op_hex		(x,	1);
	create_insn	(x=0X20EB8);
	op_hex		(x,	1);
	create_insn	(x=0X20EC4);
	op_hex		(x,	1);
	create_insn	(x=0X20EC6);
	op_hex		(x,	1);
	create_insn	(x=0X20ED4);
	op_hex		(x,	1);
	create_insn	(x=0X20ED6);
	op_hex		(x,	1);
	create_insn	(x=0X20EE2);
	op_hex		(x,	1);
	create_insn	(x=0X20EE4);
	op_hex		(x,	1);
	create_insn	(x=0X20EF0);
	op_hex		(x,	1);
	create_insn	(x=0X20EF2);
	op_hex		(x,	1);
	create_insn	(x=0X20F01);
	op_hex		(x,	1);
	create_insn	(x=0X20F03);
	op_hex		(x,	1);
	create_insn	(x=0X20F0F);
	op_hex		(x,	1);
	create_insn	(x=0X20F11);
	op_hex		(x,	1);
	create_insn	(x=0X20F1D);
	op_hex		(x,	1);
	create_insn	(x=0X20F1F);
	op_hex		(x,	1);
	create_insn	(x=0X20F2E);
	op_hex		(x,	1);
	create_insn	(x=0X20F30);
	op_hex		(x,	1);
	create_insn	(x=0X20F3C);
	op_hex		(x,	1);
	create_insn	(x=0X20F3E);
	op_hex		(x,	1);
	create_insn	(x=0X20F4A);
	op_hex		(x,	1);
	create_insn	(x=0X20F4C);
	op_hex		(x,	1);
	create_insn	(x=0X20F5A);
	op_hex		(x,	1);
	create_insn	(x=0X20F5C);
	op_hex		(x,	1);
	create_insn	(x=0X20F68);
	op_hex		(x,	1);
	create_insn	(x=0X20F6A);
	op_hex		(x,	1);
	create_insn	(x=0X20F76);
	op_hex		(x,	1);
	create_insn	(x=0X20F78);
	op_hex		(x,	1);
	create_insn	(x=0X20F87);
	op_hex		(x,	1);
	create_insn	(x=0X20F89);
	op_hex		(x,	1);
	create_insn	(x=0X20F95);
	op_hex		(x,	1);
	create_insn	(x=0X20F97);
	op_hex		(x,	1);
	create_insn	(x=0X20FA3);
	op_hex		(x,	1);
	create_insn	(x=0X20FA5);
	op_hex		(x,	1);
	create_insn	(x=0X20FB4);
	op_hex		(x,	1);
	create_insn	(x=0X20FB6);
	op_hex		(x,	1);
	create_insn	(x=0X20FC2);
	op_hex		(x,	1);
	create_insn	(x=0X20FC4);
	op_hex		(x,	1);
	create_insn	(x=0X20FD0);
	op_hex		(x,	1);
	create_insn	(x=0X20FD2);
	op_hex		(x,	1);
	create_insn	(0X20FDC);
	create_insn	(0X20FEA);
	create_insn	(0X21001);
	create_insn	(x=0X21011);
	op_hex		(x,	1);
	create_insn	(x=0X21013);
	op_hex		(x,	1);
	create_insn	(x=0X2102D);
	op_hex		(x,	1);
	create_insn	(x=0X2105A);
	op_hex		(x,	1);
	create_insn	(0X21075);
	create_insn	(x=0X21079);
	op_hex		(x,	1);
	create_insn	(0X21088);
	create_insn	(x=0X2108C);
	op_hex		(x,	1);
	create_insn	(x=0X21090);
	op_hex		(x,	1);
	create_insn	(x=0X21092);
	op_hex		(x,	1);
	create_insn	(x=0X21096);
	op_hex		(x,	1);
	create_insn	(x=0X210A0);
	op_hex		(x,	1);
	create_insn	(0X210A8);
	create_insn	(0X210CE);
	create_insn	(x=0X210D0);
	op_hex		(x,	1);
	create_insn	(x=0X210D2);
	op_hex		(x,	1);
	create_insn	(x=0X210D6);
	op_hex		(x,	1);
	create_insn	(x=0X210DD);
	op_hex		(x,	1);
	create_insn	(0X210EE);
	create_insn	(x=0X2112F);
	op_hex		(x,	1);
	create_insn	(x=0X21133);
	op_hex		(x,	1);
	create_insn	(x=0X21135);
	op_hex		(x,	1);
	create_insn	(x=0X21139);
	op_hex		(x,	1);
	create_insn	(x=0X21143);
	op_hex		(x,	1);
	create_insn	(0X2116E);
	create_insn	(x=0X211BA);
	op_hex		(x,	1);
	create_insn	(x=0X211DC);
	op_hex		(x,	1);
	create_insn	(x=0X211F3);
	op_hex		(x,	1);
	create_insn	(0X2120A);
	create_insn	(0X21267);
	set_name	(0X21267,	"nullsub_2");
	create_insn	(0X21268);
	create_insn	(x=0X21274);
	op_hex		(x,	1);
	create_insn	(x=0X21280);
	op_hex		(x,	1);
	create_insn	(x=0X2128F);
	op_hex		(x,	1);
	create_insn	(x=0X212B3);
	op_hex		(x,	1);
	create_insn	(x=0X212B5);
	op_hex		(x,	1);
	create_insn	(x=0X212E4);
	op_hex		(x,	1);
	create_insn	(x=0X212E6);
	op_hex		(x,	1);
	create_insn	(x=0X21315);
	op_hex		(x,	1);
	create_insn	(x=0X21317);
	op_hex		(x,	1);
	create_insn	(0X2136D);
	create_insn	(0X21371);
	create_insn	(0X21374);
	create_insn	(x=0X2138A);
	op_hex		(x,	1);
	create_insn	(x=0X2138C);
	op_hex		(x,	1);
	create_insn	(0X2141E);
	create_insn	(0X21422);
	create_insn	(0X21430);
	create_insn	(0X21444);
	create_insn	(x=0X21452);
	op_stkvar	(x,	1);
	create_insn	(x=0X21467);
	op_stkvar	(x,	1);
	create_insn	(x=0X2146A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21478);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X2147C);
	op_hex		(x,	1);
	create_insn	(x=0X21480);
	op_stkvar	(x,	1);
	create_insn	(x=0X21489);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X2148F);
	op_stkvar	(x,	1);
	create_insn	(0X214B5);
	create_insn	(x=0X214E9);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X214ED);
	op_hex		(x,	1);
	create_insn	(x=0X214FA);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X21526);
	create_insn	(0X2152A);
	set_cmt	(0X21536,	"High-level 3D line drawing function with integrated clipping logic.",	1);
	create_insn	(0X21536);
	set_name	(0X21536,	"DrawLine3D_Clipped");
	create_insn	(x=0X21544);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X2154C);
	op_seg		(x,	1);
	create_insn	(0X21558);
	create_insn	(0X2157E);
	create_insn	(0X21590);
	create_insn	(x=0X21591);
	op_hex		(x,	1);
	create_insn	(x=0X21597);
	op_hex		(x,	1);
	create_insn	(x=0X215A4);
	op_hex		(x,	1);
	create_byte	(0X215A8);
	create_insn	(x=0X215A9);
	op_hex		(x,	1);
	create_insn	(0X215AE);
	create_insn	(x=0X215AF);
	op_hex		(x,	1);
	create_insn	(x=0X215B1);
	op_hex		(x,	1);
	create_insn	(x=0X215B5);
	op_hex		(x,	1);
	create_insn	(0X215BC);
	create_insn	(0X215BE);
	create_insn	(0X215EB);
	create_insn	(x=0X2160D);
	op_hex		(x,	1);
	create_insn	(x=0X2161D);
	op_hex		(x,	1);
	create_insn	(x=0X21623);
	op_hex		(x,	1);
	create_insn	(0X216A9);
	create_insn	(0X216AC);
	create_insn	(0X216C2);
	create_insn	(x=0X216C8);
	op_hex		(x,	1);
	create_insn	(x=0X216D0);
	op_hex		(x,	1);
	create_insn	(x=0X216D6);
	op_hex		(x,	1);
	create_insn	(x=0X216DE);
	op_hex		(x,	1);
	create_insn	(0X216E3);
	create_insn	(0X21704);
	create_insn	(0X2171A);
	set_cmt	(0X21720,	"Resets the dirty rectangle coordinates for screen updates.",	1);
	create_insn	(0X21720);
	set_name	(0X21720,	"ClearDirtyRectangle");
	create_insn	(x=0X21728);
	op_seg		(x,	1);
	create_insn	(x=0X21734);
	op_hex		(x,	1);
	set_cmt	(0X21756,	"Expands the dirty rectangle to include the given line segment.",	1);
	create_insn	(x=0X21756);
	op_seg		(x,	1);
	set_name	(0X21756,	"UpdateDirtyRectangle");
	create_insn	(x=0X2175F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X2176B);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X217A5);
	set_cmt	(0X217B4,	"Draws a line segment pixel by pixel (Bresenham-style) and updates the dirty rectangle.",	1);
	create_insn	(0X217B4);
	set_name	(0X217B4,	"DrawLineSegment_Bresenham");
	create_insn	(x=0X21817);
	op_hex		(x,	1);
	create_insn	(x=0X21825);
	op_hex		(x,	1);
	create_insn	(0X21830);
	create_insn	(0X21853);
	create_insn	(0X2185E);
	create_insn	(x=0X21862);
	op_hex		(x,	1);
	create_insn	(x=0X21870);
	op_hex		(x,	1);
	create_insn	(0X2189A);
	create_insn	(0X2189C);
	set_cmt	(0X218A8,	"Handles the setup and execution of line drawing, including clipping.",	1);
	create_insn	(0X218A8);
	set_name	(0X218A8,	"DrawLine_Handler");
	create_insn	(x=0X218B6);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(x=0X218BE);
	op_seg		(x,	1);
	create_insn	(0X218CA);
	create_insn	(0X218DB);
	create_insn	(x=0X218DF);
	op_hex		(x,	1);
	create_insn	(0X218E8);
	create_insn	(0X218EB);
	create_insn	(x=0X218EC);
	op_hex		(x,	1);
	create_insn	(x=0X218F2);
	op_hex		(x,	1);
	create_insn	(x=0X218FF);
	op_hex		(x,	1);
	create_insn	(x=0X21904);
	op_hex		(x,	1);
	create_byte	(0X21908);
	create_insn	(0X21909);
	create_insn	(x=0X2190A);
	op_hex		(x,	1);
	create_insn	(x=0X2190C);
	op_hex		(x,	1);
	create_insn	(x=0X21910);
	op_hex		(x,	1);
	create_byte	(0X21916);
	create_insn	(0X21917);
	create_insn	(x=0X21963);
	op_hex		(x,	1);
	create_insn	(x=0X21973);
	op_hex		(x,	1);
	create_insn	(x=0X21979);
	op_hex		(x,	1);
	create_insn	(0X21A1A);
	create_insn	(0X21A2F);
	create_insn	(0X21A45);
	create_insn	(0X21A58);
	set_name	(0X21A75,	"gfx_jump_10_getCurrentBuffer");
	create_byte	(0X21A79);
	create_insn	(0X21A7A);
	create_insn	(0X21A7E);
	create_insn	(0X21A82);
	set_cmt	(0X21A86,	"Main game loop update, handles graphics refresh, timing, and joystick input processing.",	1);
	create_insn	(0X21A86);
	set_name	(0X21A86,	"GameLoopUpdate");
	create_insn	(x=0X21AD3);
	op_hex		(x,	1);
	create_insn	(0X21AFF);
	set_name	(0X21B06,	"gfx_jump_45_waitForRetrace");
	set_name	(0X21B1F,	"gfx_jump_4c_setPaletteFromFile");
	set_name	(0X21B5B,	"audio_jump_65_stopSound");
	set_name	(0X21B6F,	"audio_jump_69_initAudio");
	create_byte	(0X21B76);
	create_insn	(0X21B77);
	create_insn	(x=0X21BCF);
	op_hex		(x,	1);
	create_insn	(x=0X21C0B);
	op_hex		(x,	1);
	create_insn	(0X21C32);
	create_insn	(0X21C56);
	create_byte	(0X21C80);
	create_insn	(0X21C81);
	create_insn	(x=0X21CB6);
	op_hex		(x,	1);
	create_insn	(x=0X21CB9);
	op_hex		(x,	1);
	create_insn	(x=0X21CC3);
	op_hex		(x,	1);
	create_insn	(x=0X21CC5);
	op_hex		(x,	1);
	create_insn	(x=0X21CC7);
	op_hex		(x,	1);
	create_insn	(x=0X21CC9);
	op_hex		(x,	1);
	create_insn	(x=0X21CCB);
	op_hex		(x,	1);
	create_insn	(x=0X21CCD);
	op_hex		(x,	1);
	create_insn	(x=0X21CE3);
	op_hex		(x,	1);
	create_insn	(x=0X21CE5);
	op_hex		(x,	1);
	create_insn	(x=0X21CE7);
	op_hex		(x,	1);
	create_insn	(x=0X21D03);
	op_hex		(x,	1);
	create_insn	(x=0X21D26);
	op_hex		(x,	1);
	create_insn	(x=0X21D52);
	op_hex		(x,	1);
	create_insn	(x=0X21D8A);
	op_hex		(x,	1);
	create_insn	(x=0X21DA2);
	op_hex		(x,	1);
	create_insn	(0X21DB2);
	create_insn	(0X21DCB);
	create_insn	(0X21E4C);
	create_insn	(x=0X21EF9);
	op_hex		(x,	1);
	create_insn	(x=0X21EFB);
	op_hex		(x,	1);
	create_insn	(x=0X21EFD);
	op_hex		(x,	1);
	create_insn	(x=0X21EFF);
	op_hex		(x,	1);
	create_insn	(x=0X21F01);
	op_hex		(x,	1);
	create_insn	(x=0X21F03);
	op_hex		(x,	1);
	create_insn	(0X21F74);
	create_insn	(0X21F77);
	create_insn	(0X21F7A);
	create_insn	(0X21F7D);
	create_insn	(0X21FD4);
	create_insn	(0X2202D);
	create_insn	(0X22030);
	create_insn	(0X22089);
	create_insn	(0X2208C);
	create_insn	(0X220CD);
	create_insn	(0X220D0);
	create_byte	(0X2213E);
	create_insn	(0X2213F);
	create_insn	(0X22142);
	create_insn	(0X221B1);
	create_insn	(x=0X221DA);
	op_hex		(x,	1);
	create_insn	(x=0X221DC);
	op_hex		(x,	1);
	create_insn	(x=0X221EC);
	op_hex		(x,	1);
	create_insn	(x=0X221EE);
	op_hex		(x,	1);
	create_insn	(x=0X221F4);
	op_hex		(x,	1);
	create_insn	(x=0X22200);
	op_hex		(x,	1);
	create_insn	(x=0X22202);
	op_hex		(x,	1);
	create_insn	(x=0X22212);
	op_hex		(x,	1);
	create_insn	(x=0X22214);
	op_hex		(x,	1);
	create_insn	(x=0X2221A);
	op_hex		(x,	1);
	create_insn	(0X2223F);
	create_insn	(x=0X222DE);
	op_hex		(x,	1);
	create_insn	(x=0X222E0);
	op_hex		(x,	1);
	create_insn	(x=0X222E8);
	op_hex		(x,	1);
	create_insn	(x=0X2230C);
	op_hex		(x,	1);
	create_insn	(x=0X2230E);
	op_hex		(x,	1);
	create_insn	(x=0X22316);
	op_hex		(x,	1);
	create_insn	(x=0X22338);
	op_hex		(x,	1);
	create_insn	(x=0X2233A);
	op_hex		(x,	1);
	create_insn	(x=0X22350);
	op_hex		(x,	1);
	create_insn	(0X22364);
	create_byte	(0X2237E);
	create_insn	(0X2237F);
	create_insn	(x=0X22399);
	op_hex		(x,	1);
	create_insn	(x=0X2239B);
	op_hex		(x,	1);
	create_insn	(x=0X223B1);
	op_hex		(x,	1);
	create_byte	(0X223C4);
	create_insn	(0X223C5);
	create_insn	(0X223E0);
	create_insn	(0X22403);
	set_cmt	(0X22411,	"Initializes game settings based on detected hardware (VGA vs EGA). Corresponds to F-14's NJOYCAL.C.",	1);
	create_insn	(0X22411);
	set_name	(0X22411,	"InitializeGameSettings");
	create_insn	(0X2242F);
	create_insn	(0X22545);
	create_insn	(0X2265B);
	create_insn	(x=0X2266B);
	op_hex		(x,	1);
	create_insn	(0X2267E);
	set_cmt	(0X22691,	"Reads joystick input from port 201h.",	1);
	create_insn	(0X22691);
	set_name	(0X22691,	"ReadJoystick");
	set_cmt	(0X2269D,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	create_insn	(0X226A0);
	set_cmt	(0X226A2,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	create_insn	(0X226A2);
	create_insn	(x=0X226A3);
	op_hex		(x,	1);
	create_insn	(x=0X226A7);
	op_hex		(x,	1);
	create_insn	(x=0X226AC);
	op_hex		(x,	1);
	create_insn	(x=0X226BE);
	op_hex		(x,	1);
	create_byte	(0X226D2);
	create_insn	(0X226D3);
	create_insn	(0X226E8);
	create_insn	(x=0X226F0);
	op_hex		(x,	1);
	create_byte	(0X226F4);
	create_insn	(0X226F5);
	create_insn	(0X22708);
	create_insn	(x=0X2270E);
	op_hex		(x,	1);
	create_insn	(x=0X22713);
	op_hex		(x,	1);
	create_insn	(0X2271A);
	set_name	(0X2271A,	"restoreJoystickData");
	create_insn	(x=0X2271F);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X2272E);
	set_name	(0X2272E,	"copyJoystickData");
	create_insn	(x=0X22737);
	op_plain_offset	(x,	1,	0X328B0);
	op_plain_offset	(x,	129,	0X328B0);
	create_insn	(0X22746);
	set_name	(0X22746,	"setInt9Handler");
	set_cmt	(0X2274C,	"40:17, keyboard flag byte?",	0);
	create_insn	(x=0X2274C);
	op_hex		(x,	1);
	set_cmt	(0X22777,	"int 9, keyboard data ready",	0);
	set_cmt	(0X2277F,	"store original int9 handler address",	0);
	create_insn	(x=0X22788);
	op_plain_offset	(x,	1,	0X22740);
	op_plain_offset	(x,	129,	0X22740);
	set_cmt	(0X22794,	"Restores the original keyboard interrupt (INT 9) handler.",	1);
	set_name	(0X22794,	"RestoreInt9Handler");
	create_insn	(0X22796);
	set_name	(0X22796,	"restoreInt9Handler");
	set_cmt	(0X227B0,	"Custom keyboard interrupt handler to process key presses.",	1);
	create_insn	(0X227B0);
	set_name	(0X227B0,	"CustomInt9Handler");
	create_insn	(x=0X227B6);
	op_seg		(x,	1);
	set_cmt	(0X227D1,	"8042 keyboard controller data register",	0);
	create_insn	(x=0X227D1);
	op_hex		(x,	1);
	create_insn	(x=0X227EB);
	op_hex		(x,	1);
	create_insn	(x=0X227F3);
	op_hex		(x,	1);
	create_insn	(x=0X227F6);
	op_hex		(x,	1);
	create_insn	(x=0X227FE);
	op_hex		(x,	1);
	create_insn	(0X22808);
	create_insn	(x=0X2280A);
	op_hex		(x,	1);
	create_insn	(x=0X2281C);
	op_hex		(x,	1);
	create_insn	(x=0X2284D);
	op_hex		(x,	1);
	create_insn	(x=0X22855);
	op_hex		(x,	1);
	create_insn	(x=0X2285D);
	op_hex		(x,	1);
	create_insn	(x=0X22865);
	op_hex		(x,	1);
	create_insn	(0X22878);
	create_insn	(0X228BE);
	set_cmt	(0X228C4,	"far jump to original handler",	0);
	create_byte	(0X228C9);
	create_byte	(0X228D0);
	make_array	(0X228D0,	0XADD4);
	create_byte	(0X2D6A4);
	make_array	(0X2D6A4,	0X4844);
	create_byte	(0X31EE8);
	make_array	(0X31EE8,	0X9C8);
	create_word	(0X328B2);
	create_strlit	(0X328B8,	0X38);
	set_name	(0X328B8,	"aMsRunTimeLibraryCopyr");
	create_strlit	(0X328F2,	0X9);
	set_name	(0X328F2,	"aRegn_xxx");
	create_strlit	(0X328FB,	0X7);
	set_name	(0X328FB,	"aLb_xxx");
	create_strlit	(0X32902,	0X7);
	set_name	(0X32902,	"aPg_xxx");
	create_strlit	(0X32909,	0X7);
	set_name	(0X32909,	"aVn_xxx");
	create_strlit	(0X32910,	0X7);
	set_name	(0X32910,	"aMe_xxx");
	create_strlit	(0X32917,	0X7);
	set_name	(0X32917,	"aNc_xxx");
	create_strlit	(0X3291E,	0X7);
	set_name	(0X3291E,	"aCe_xxx");
	create_strlit	(0X32925,	0X7);
	set_name	(0X32925,	"aJp_xxx");
	create_strlit	(0X3292C,	0X7);
	set_name	(0X3292C,	"aNa_xxx");
	create_byte	(0X32933);
	create_byte	(0X32934);
	set_name	(0X32934,	"exitCode");
	create_word	(0X32936);
	set_name	(0X32936,	"gfxModeUnset");
	create_word	(0X32938);
	set_name	(0X32938,	"f15DgtlResult");
	create_word	(x=0X3293A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	set_name	(0X3293A,	"regnStr");
	create_word	(x=0X3293C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	set_name	(0X3293C,	"scenarioPlh");
	create_word	(x=0X3293E);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X32940);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X32942);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X32944);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X32946);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X32948);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X3294A);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_strlit	(0X3294C,	0XB);
	set_name	(0X3294C,	"a256pit_pic");
	create_strlit	(0X32957,	0XC);
	set_name	(0X32957,	"aCockpit_pic");
	create_strlit	(0X32964,	0XC);
	set_name	(0X32964,	"aF15dgtl_bin");
	create_word	(0X32970);
	set_name	(0X32970,	"f15dgtlAddr");
	create_word	(0X32972);
	set_name	(0X32972,	"allocSize");
	create_word	(0X3298A);
	create_word	(0X3298C);
	set_name	(0X3298C,	"g_ViewPositionX");
	create_word	(0X3298E);
	set_name	(0X3298E,	"g_ViewPositionY");
	create_byte	(0X329B4);
	set_name	(0X329B4,	"ovlInsaneFlag");
	create_strlit	(0X329B5,	0X1F);
	set_name	(0X329B5,	"aErrorReleasingOverlay");
	create_strlit	(0X329D4,	0XD);
	set_name	(0X329D4,	"aSafeLanding");
	create_strlit	(0X329E1,	0X12);
	set_name	(0X329E1,	"aReadyForTakeof");
	create_strlit	(0X329F3,	0X14);
	set_name	(0X329F3,	"aWeaponsRepleni");
	create_strlit	(0X32A07,	0X1A);
	set_name	(0X32A07,	"aAutomaticLandi");
	MakeStruct	(0X32A22,	"Waypoint");
	make_array	(0X32A22,	0X4);
	set_name	(0X32A22,	"waypoints");
	create_word	(0X32A32);
	set_name	(0X32A32,	"waypointIndex");
	create_word	(0X32A34);
	create_strlit	(0X32A36,	0X5);
	set_name	(0X32A36,	"aNone");
	create_strlit	(0X32A44,	0X5);
	set_name	(0X32A44,	"aSa2");
	create_strlit	(0X32A52,	0X5);
	set_name	(0X32A52,	"aSa5");
	create_strlit	(0X32A60,	0X6);
	set_name	(0X32A60,	"aSa8b");
	create_strlit	(0X32A6E,	0X6);
	set_name	(0X32A6E,	"aSa10");
	create_strlit	(0X32A7C,	0X6);
	set_name	(0X32A7C,	"aSa11");
	create_strlit	(0X32A8A,	0X6);
	set_name	(0X32A8A,	"aSa12");
	create_strlit	(0X32A98,	0X6);
	set_name	(0X32A98,	"aSa13");
	create_strlit	(0X32AA6,	0X7);
	set_name	(0X32AA6,	"aSaN4");
	create_strlit	(0X32AB4,	0X7);
	set_name	(0X32AB4,	"aSaN5");
	create_strlit	(0X32AC2,	0X7);
	set_name	(0X32AC2,	"aSaN6");
	create_strlit	(0X32AD0,	0X7);
	set_name	(0X32AD0,	"aSaN7");
	create_strlit	(0X32ADE,	0X5);
	set_name	(0X32ADE,	"aHawk");
	create_strlit	(0X32AEC,	0X7);
	set_name	(0X32AEC,	"aRapier");
	create_strlit	(0X32AFA,	0X6);
	set_name	(0X32AFA,	"aTiger");
	create_strlit	(0X32B08,	0X7);
	set_name	(0X32B08,	"aSeacat");
	create_strlit	(0X32B16,	0X5);
	set_name	(0X32B16,	"aIl76");
	create_strlit	(0X32B78,	0X7);
	set_name	(0X32B78,	"aMig23");
	create_strlit	(0X32B80,	0X8);
	set_name	(0X32B80,	"aFlogger");
	create_strlit	(0X32B98,	0X7);
	set_name	(0X32B98,	"aMig25");
	create_strlit	(0X32BA0,	0X7);
	set_name	(0X32BA0,	"aFoxbat");
	create_strlit	(0X32BB8,	0X7);
	set_name	(0X32BB8,	"aMig29");
	create_strlit	(0X32BC0,	0X8);
	set_name	(0X32BC0,	"aFulcrum");
	create_strlit	(0X32BD8,	0X4);
	set_name	(0X32BD8,	"aF1");
	create_strlit	(0X32BE0,	0X7);
	set_name	(0X32BE0,	"aMirage");
	create_strlit	(0X32BF8,	0X6);
	set_name	(0X32BF8,	"aSu27");
	create_strlit	(0X32C00,	0X8);
	set_name	(0X32C00,	"aFlanker");
	create_strlit	(0X32C18,	0X6);
	set_name	(0X32C18,	"aIl76_0");
	create_strlit	(0X32C20,	0X9);
	set_name	(0X32C20,	"aMainstay");
	create_strlit	(0X32C38,	0X5);
	set_name	(0X32C38,	"aF4e");
	create_strlit	(0X32C98,	0X6);
	set_name	(0X32C98,	"aAn72");
	MakeStruct	(0X32DD8,	"Sam");
	make_array	(0X32DD8,	0X27);
	set_name	(0X32DD8,	"sams");
	create_word	(0X33096);
	set_name	(0X33096,	"g_missileHits");
	create_word	(0X33098);
	create_word	(0X3309A);
	create_word	(0X3309C);
	create_word	(0X3309E);
	MakeStruct	(0X330A2,	"MissileSpec");
	make_array	(0X330A2,	0X4);
	set_name	(0X330A2,	"missleSpec");
	create_word	(0X330B2);
	set_name	(0X330B2,	"missileSpecIndex");
	create_word	(0X330B4);
	create_word	(0X330B6);
	set_name	(0X330B6,	"g_autopilotAltitude");
	create_word	(0X330B8);
	set_name	(0X330B8,	"g_missionStatus");
	create_word	(0X330BA);
	create_word	(0X330BC);
	create_word	(0X330BE);
	create_word	(0X330C2);
	create_word	(0X330C4);
	set_name	(0X330C4,	"g_frameRateScaling");
	MakeStruct	(0X330C6,	"Missile");
	make_array	(0X330C6,	0X14);
	set_name	(0X330C6,	"missiles");
	create_word	(0X333D2);
	create_word	(0X333D4);
	create_word	(0X333D8);
	create_word	(0X333DA);
	MakeStruct	(0X33402,	"struc_9");
	make_array	(0X33402,	0X8);
	create_word	(0X33442);
	MakeStruct	(0X335C4,	"struc_2");
	make_array	(0X335C4,	0XC);
	create_word	(0X336E4);
	create_word	(0X336E6);
	create_word	(0X336E8);
	create_word	(0X336EA);
	create_word	(0X336EC);
	create_word	(0X336EE);
	create_word	(0X336F0);
	create_word	(0X336F2);
	create_word	(0X336F4);
	create_word	(0X336F6);
	create_word	(0X336F8);
	create_word	(0X336FA);
	create_word	(0X336FC);
	create_word	(0X336FE);
	create_word	(0X33700);
	create_word	(0X33702);
	create_word	(0X33704);
	create_word	(0X33706);
	create_word	(0X33708);
	create_word	(0X3370A);
	create_word	(0X3370C);
	create_word	(0X3370E);
	create_word	(0X33710);
	create_word	(0X33712);
	create_word	(0X33714);
	create_strlit	(0X33716,	0X11);
	set_name	(0X33716,	"aStoresExhauste");
	create_strlit	(0X33727,	0X6);
	set_name	(0X33727,	"aFlare");
	create_strlit	(0X3372D,	0X6);
	set_name	(0X3372D,	"aChaff");
	create_strlit	(0X33733,	0XA);
	set_name	(0X33733,	"aReleased");
	create_strlit	(0X3373D,	0X2);
	create_strlit	(0X3373F,	0X5);
	set_name	(0X3373F,	"aGun");
	set_cmt	(0X33744,	"Known constant string 'L'",	0);
	create_strlit	(0X33744,	0X2);
	create_strlit	(0X33746,	0X2);
	create_strlit	(0X33748,	0X2);
	set_name	(0X33748,	"aS");
	create_word	(0X3374A);
	create_strlit	(0X3374C,	0XB);
	set_name	(0X3374C,	"aOnPatrol");
	create_strlit	(0X33757,	0X11);
	set_name	(0X33757,	"aF15StrikeEagle");
	create_strlit	(0X33768,	0X5);
	set_name	(0X33768,	"aAt");
	create_insn	(0X3376E);
	set_name	(0X3376E,	"gfx_jump_0_alloc");
	create_insn	(0X33773);
	set_name	(0X33773,	"gfx_jump_01");
	create_insn	(0X33778);
	set_name	(0X33778,	"gfx_jump_02");
	create_insn	(0X3377D);
	set_name	(0X3377D,	"gfx_jump_03");
	create_insn	(0X33782);
	set_name	(0X33782,	"gfx_jump_04");
	create_insn	(0X33787);
	set_name	(0X33787,	"gfx_jump_05_drawString");
	create_insn	(0X3378C);
	set_name	(0X3378C,	"gfx_jump_06");
	create_insn	(0X337A5);
	set_name	(0X337A5,	"gfx_jump_0b");
	create_insn	(0X337AA);
	set_name	(0X337AA,	"gfx_jump_0c");
	create_insn	(0X337AF);
	set_name	(0X337AF,	"gfx_jump_0d_setCurBuf");
	create_insn	(0X337B4);
	set_name	(0X337B4,	"gfx_jump_0e_setCurBuf");
	create_insn	(0X337B9);
	set_name	(0X337B9,	"gfx_jump_0f_getBufPtr");
	create_insn	(0X337BE);
	set_name	(0X337BE,	"gfx_jump_10_getCurBuf");
	create_insn	(0X337C8);
	set_name	(0X337C8,	"gfx_jump_12");
	create_insn	(0X337E6);
	set_name	(0X337E6,	"gfx_jump_18");
	create_insn	(0X337EB);
	set_name	(0X337EB,	"gfx_jump_19");
	create_insn	(0X337F0);
	set_name	(0X337F0,	"gfx_jump_1a");
	create_insn	(0X337F5);
	set_name	(0X337F5,	"gfx_jump_1b");
	create_insn	(0X337FA);
	set_name	(0X337FA,	"gfx_jump_1c");
	create_insn	(0X337FF);
	set_name	(0X337FF,	"gfx_jump_1d");
	create_insn	(0X33809);
	set_name	(0X33809,	"gfx_jump_1f");
	create_insn	(0X3380E);
	set_name	(0X3380E,	"gfx_jump_20");
	create_insn	(0X33813);
	set_name	(0X33813,	"gfx_jump_21");
	create_insn	(0X33818);
	set_name	(0X33818,	"gfx_jump_22");
	create_insn	(0X3381D);
	set_name	(0X3381D,	"gfx_jump_23");
	create_insn	(0X33822);
	set_name	(0X33822,	"gfx_jump_24");
	create_insn	(0X33827);
	set_name	(0X33827,	"gfx_jump_25");
	create_insn	(0X33836);
	set_name	(0X33836,	"gfx_jump_28");
	create_insn	(0X3383B);
	set_name	(0X3383B,	"gfx_jump_29_switchColor");
	create_insn	(0X33840);
	set_name	(0X33840,	"gfx_jump_2a");
	create_insn	(0X33845);
	set_name	(0X33845,	"gfx_jump_2b");
	create_insn	(0X3384A);
	set_name	(0X3384A,	"gfx_jump_2c");
	create_insn	(0X3384F);
	set_name	(0X3384F,	"gfx_jump_2d");
	create_insn	(0X33854);
	set_name	(0X33854,	"gfx_jump_2e");
	create_insn	(0X33868);
	set_name	(0X33868,	"gfx_jump_32");
	create_insn	(0X3386D);
	set_name	(0X3386D,	"gfx_jump_33_fillRow");
	create_insn	(0X33872);
	set_name	(0X33872,	"gfx_jump_34_fillRow");
	create_insn	(0X33877);
	set_name	(0X33877,	"gfx_jump_35");
	create_insn	(0X3387C);
	set_name	(0X3387C,	"gfx_jump_36_null");
	create_insn	(0X33881);
	set_name	(0X33881,	"gfx_jump_37_null");
	create_insn	(0X33886);
	set_name	(0X33886,	"gfx_jump_38_getPageBuf");
	create_insn	(0X33890);
	set_name	(0X33890,	"gfx_jump_3a_getRowOffset");
	create_insn	(0X33895);
	set_name	(0X33895,	"gfx_jump_3b_clearBuf");
	create_insn	(0X3389F);
	set_name	(0X3389F,	"gfx_jump_3d_null");
	create_insn	(0X338A4);
	set_name	(0X338A4,	"gfx_jump_3e");
	create_insn	(0X338A9);
	set_name	(0X338A9,	"gfx_jump_3f_modecode");
	create_insn	(0X338B3);
	set_name	(0X338B3,	"gfx_jump_41");
	create_insn	(0X338C2);
	set_name	(0X338C2,	"gfx_jump_44_setDac");
	create_insn	(0X338C7);
	set_name	(0X338C7,	"gfx_jump_45_retrace");
	create_insn	(0X338CC);
	set_name	(0X338CC,	"gfx_jump_46_retrace2");
	create_insn	(0X338D1);
	set_name	(0X338D1,	"gfx_jump_47");
	create_insn	(0X338DB);
	set_name	(0X338DB,	"gfx_jump_49");
	create_insn	(0X338E5);
	set_name	(0X338E5,	"gfx_jump_4b_storeBufPtr");
	create_insn	(0X338EA);
	set_name	(0X338EA,	"gfx_jump_4c");
	create_insn	(0X338F9);
	set_name	(0X338F9,	"gfx_jump_4f");
	create_insn	(0X33908);
	set_name	(0X33908,	"gfx_jump_52");
	create_byte	(0X3390D);
	make_array	(0X3390D,	0X5);
	create_byte	(0X33912);
	make_array	(0X33912,	0X5);
	create_byte	(0X33917);
	make_array	(0X33917,	0X5);
	create_byte	(0X3391C);
	make_array	(0X3391C,	0X5);
	create_byte	(0X33921);
	make_array	(0X33921,	0X5);
	create_byte	(0X33926);
	make_array	(0X33926,	0X5);
	create_byte	(0X3392B);
	make_array	(0X3392B,	0X5);
	create_insn	(0X33935);
	set_name	(0X33935,	"misc_jump_5b_getkey");
	create_insn	(0X3393F);
	set_name	(0X3393F,	"misc_jump_5d_readJoy");
	create_byte	(0X33944);
	make_array	(0X33944,	0X5);
	create_byte	(0X33949);
	make_array	(0X33949,	0X5);
	create_byte	(0X3394E);
	make_array	(0X3394E,	0X5);
	create_byte	(0X33953);
	make_array	(0X33953,	0X5);
	create_byte	(0X33958);
	make_array	(0X33958,	0X5);
	create_byte	(0X3395D);
	make_array	(0X3395D,	0X5);
	create_insn	(0X33962);
	set_name	(0X33962,	"audio_jump_64");
	create_insn	(0X33967);
	set_name	(0X33967,	"audio_jump_65");
	create_insn	(0X3396C);
	set_name	(0X3396C,	"audio_jump_66");
	create_insn	(0X33976);
	set_name	(0X33976,	"audio_jump_68");
	create_insn	(0X3397B);
	set_name	(0X3397B,	"audio_jump_69");
	create_insn	(0X33980);
	set_name	(0X33980,	"audio_jump_6a");
	create_insn	(0X33985);
	set_name	(0X33985,	"audio_jump_6b");
	create_insn	(0X3398F);
	set_name	(0X3398F,	"audio_jump_6d");
	create_word	(0X339B0);
	create_byte	(0X339B2);
	set_cmt	(0X339F4,	"Array of terrain/object data points",	0);
	create_word	(0X339F4);
	create_word	(0X33B74);
	create_word	(0X33B86);
	create_word	(0X33B9C);
	create_word	(0X33BA2);
	create_word	(0X33BAC);
	create_word	(0X33BAE);
	create_word	(0X33BB8);
	set_name	(0X33BB8,	"size3d3");
	create_word	(0X33BBA);
	make_array	(0X33BBA,	0X64);
	set_name	(0X33BBA,	"buf3d3");
	create_word	(0X33C82);
	set_name	(0X33C82,	"size3d3_2");
	create_word	(0X33C84);
	set_name	(0X33C84,	"sign3dt");
	create_word	(0X33C86);
	set_name	(0X33C86,	"sizes3dt");
	create_word	(0X33C88);
	create_word	(0X33C8A);
	create_word	(0X33C8C);
	create_word	(0X33C8E);
	create_word	(0X33C90);
	make_array	(0X33C90,	0XA0);
	set_name	(0X33C90,	"matrix3dt");
	create_word	(0X33DD0);
	create_word	(0X33DD2);
	create_word	(0X33E10);
	set_name	(0X33E10,	"size3d3_4");
	create_word	(0X33E12);
	set_name	(0X33E12,	"size3d3_5");
	create_word	(0X33E14);
	set_name	(0X33E14,	"size3d3_6");
	create_word	(0X33E16);
	set_name	(0X33E16,	"size3d3_3");
	create_word	(0X33E18);
	set_name	(0X33E18,	"sign3dg");
	set_cmt	(0X33E1A,	"40h bytes per scenario?",	0);
	create_word	(0X3401A);
	create_strlit	(0X3401E,	0X5);
	set_name	(0X3401E,	"a_3d3");
	create_strlit	(0X34023,	0X3);
	set_name	(0X34023,	"aRb");
	create_strlit	(0X34026,	0X14);
	set_name	(0X34026,	"aOpenErrorOn_3d3");
	create_strlit	(0X3403A,	0X15);
	set_name	(0X3403A,	"aBadObjFileFormat_");
	create_strlit	(0X3404F,	0X15);
	set_name	(0X3404F,	"aObjectDataTooBig_");
	create_strlit	(0X34064,	0X3);
	set_name	(0X34064,	"aRb_0");
	create_strlit	(0X34067,	0XA);
	set_name	(0X34067,	"aPhoto_3d3");
	create_strlit	(0X34071,	0X19);
	set_name	(0X34071,	"aPleaseInsertF15DiskB");
	create_strlit	(0X3408A,	0X3);
	set_name	(0X3408A,	"aRb_1");
	create_strlit	(0X3408D,	0XA);
	set_name	(0X3408D,	"aPhoto_3d3_0");
	create_strlit	(0X34097,	0X11);
	set_name	(0X34097,	"aObjdataOverflow");
	create_strlit	(0X340A8,	0X5);
	set_name	(0X340A8,	"a_3dt");
	create_strlit	(0X340AD,	0X3);
	set_name	(0X340AD,	"aRb_2");
	create_strlit	(0X340B0,	0X14);
	set_name	(0X340B0,	"aOpenErrorOn_3dt");
	create_strlit	(0X340C4,	0X16);
	set_name	(0X340C4,	"aBadTileFileFormat_");
	create_strlit	(0X340DA,	0X10);
	set_name	(0X340DA,	"aTooManyTiles_");
	create_strlit	(0X340EA,	0X13);
	set_name	(0X340EA,	"aTooMuchTileData");
	create_strlit	(0X340FD,	0X5);
	set_name	(0X340FD,	"a_3dg");
	create_strlit	(0X34102,	0X3);
	set_name	(0X34102,	"aRb_3");
	create_strlit	(0X34105,	0X1C);
	set_name	(0X34105,	"aPleaseInsertScenarioD");
	create_strlit	(0X34123,	0X17);
	set_name	(0X34123,	"aPressAKeyWhenReady");
	create_strlit	(0X3413A,	0X16);
	set_name	(0X3413A,	"aBadGridFileFormat_");
	create_word	(0X34150);
	create_word	(0X34152);
	create_word	(0X34156);
	create_word	(0X34158);
	create_word	(0X3415A);
	create_word	(0X3415C);
	create_word	(0X3415E);
	create_word	(0X34160);
	create_word	(0X34162);
	create_word	(0X34164);
	create_word	(0X34166);
	create_word	(0X34168);
	create_word	(0X3416A);
	create_word	(0X3416C);
	create_byte	(0X3416E);
	create_byte	(0X3416F);
	create_byte	(0X34170);
	create_word	(0X34171);
	create_word	(0X34173);
	create_word	(0X34175);
	create_word	(0X34177);
	create_word	(0X34179);
	create_word	(0X3417B);
	create_word	(0X3417D);
	create_word	(0X3417F);
	create_word	(0X34186);
	create_word	(0X34190);
	create_word	(0X34192);
	create_word	(0X34194);
	create_byte	(0X34196);
	create_byte	(0X34197);
	create_word	(0X34198);
	create_byte	(0X3419A);
	create_byte	(0X3419C);
	create_byte	(0X3419F);
	create_word	(0X341B4);
	create_word	(0X341B6);
	create_word	(0X341B8);
	create_word	(0X341BA);
	create_word	(0X341BC);
	create_dword	(0X3423C);
	create_word	(0X34240);
	set_name	(0X34240,	"g_ObjectPositionX");
	create_word	(0X34242);
	set_name	(0X34242,	"g_ObjectPositionY");
	create_word	(0X34244);
	set_name	(0X34244,	"g_ObjectPositionZ");
	create_word	(0X34246);
	create_word	(0X34248);
	create_word	(0X3424A);
	create_word	(0X3424C);
	create_word	(0X3424E);
	create_word	(0X34250);
	create_word	(0X34252);
	create_word	(0X34254);
	create_word	(0X34256);
	create_byte	(0X34258);
	create_word	(0X34260);
	create_word	(0X34262);
	create_word	(0X34264);
	create_word	(0X34266);
	create_word	(0X34268);
	create_word	(0X3426A);
	set_name	(0X3426A,	"g_SinRoll");
	create_word	(0X3426C);
	set_name	(0X3426C,	"g_CosRoll");
	create_word	(0X3426E);
	set_name	(0X3426E,	"g_SinHead");
	create_word	(0X34270);
	set_name	(0X34270,	"g_CosHead");
	create_word	(0X34272);
	set_name	(0X34272,	"g_SinPitch");
	create_word	(0X34274);
	set_name	(0X34274,	"g_CosPitch");
	create_word	(0X34276);
	set_name	(0X34276,	"g_TransformMatrix_00");
	create_word	(0X34278);
	set_name	(0X34278,	"g_TransformMatrix_01");
	create_word	(0X3427A);
	set_name	(0X3427A,	"g_TransformMatrix_02");
	create_word	(0X3427C);
	set_name	(0X3427C,	"g_TransformMatrix_10");
	create_word	(0X3427E);
	set_name	(0X3427E,	"g_TransformMatrix_11");
	create_word	(0X34280);
	set_name	(0X34280,	"g_TransformMatrix_12");
	create_word	(0X34282);
	set_name	(0X34282,	"g_TransformMatrix_20");
	create_word	(0X34284);
	set_name	(0X34284,	"g_TransformMatrix_21");
	create_word	(0X34286);
	set_name	(0X34286,	"g_TransformMatrix_22");
	create_word	(0X34288);
	create_word	(0X3428A);
	create_word	(0X3428C);
	create_word	(0X3428E);
	create_word	(0X34290);
	create_word	(0X34292);
	create_word	(0X34294);
	create_word	(0X34296);
	create_word	(0X34298);
	create_word	(0X3429A);
	create_word	(0X3429C);
	create_word	(0X3429E);
	create_word	(0X342A0);
	create_word	(0X342A2);
	create_word	(0X342A4);
	create_word	(0X342A6);
	create_word	(0X342A8);
	create_word	(0X342AA);
	create_word	(0X342AC);
	create_word	(0X342AE);
	create_word	(0X342B0);
	create_byte	(0X342B4);
	create_word	(0X342B6);
	create_word	(0X342B8);
	create_word	(0X342BA);
	create_word	(0X342BC);
	create_word	(0X342BE);
	create_word	(0X3449C);
	create_word	(0X3449E);
	create_word	(0X344A0);
	create_word	(0X344A2);
	create_word	(0X34680);
	create_word	(0X34682);
	create_word	(0X34684);
	create_word	(0X34686);
	create_word	(0X34864);
	create_word	(0X34866);
	create_word	(0X34868);
	create_word	(0X3486A);
	create_dword	(0X34A48);
	create_word	(0X34A4C);
	create_word	(0X34A4E);
	create_dword	(0X34C2C);
	create_word	(0X35AF8);
	create_byte	(0X35B3E);
	make_array	(0X35B3E,	0X1040);
	set_name	(0X35B3E,	"flt15_buf2");
	create_word	(0X36B7E);
	create_word	(0X36B80);
	create_word	(0X36B82);
	create_word	(0X36B84);
	create_word	(0X36B86);
	create_byte	(0X36B88);
	create_word	(0X36B89);
	create_word	(0X36B8B);
	create_byte	(0X36BAE);
	create_word	(0X36C10);
	create_word	(0X36C12);
	create_word	(0X36C14);
	create_byte	(0X36C16);
	create_byte	(0X36C17);
	create_byte	(0X36C18);
	create_word	(0X36C19);
	create_word	(0X36C1B);
	create_word	(0X36C1D);
	create_word	(0X36C1F);
	create_word	(0X36C21);
	create_word	(0X36C23);
	create_word	(0X36C25);
	create_word	(0X36C27);
	create_byte	(0X36C31);
	create_byte	(0X36C32);
	create_word	(0X36C33);
	set_cmt	(0X36C66,	"f0/240 bytes of 80 rgb triplets",	0);
	create_byte	(0X36C66);
	make_array	(0X36C66,	0XF0);
	set_name	(0X36C66,	"dacValues1");
	set_name	(0X36D56,	"dacValues");
	create_byte	(0X36D86);
	make_array	(0X36D86,	0X30);
	set_cmt	(0X36F36,	"1e0/480 bytes of 160 rgb triplets",	0);
	create_byte	(0X36F36);
	make_array	(0X36F36,	0X1E0);
	set_name	(0X36F36,	"otherDacValues");
	create_byte	(0X37116);
	make_array	(0X37116,	0X30);
	create_word	(0X37146);
	create_word	(0X37148);
	create_word	(0X37348);
	create_word	(0X3734A);
	create_byte	(0X3754E);
	create_word	(0X3754F);
	create_word	(0X37551);
	create_word	(0X37553);
	create_word	(0X37555);
	set_cmt	(0X37557,	"Width of the 3D rendering viewport (319).",	1);
	create_word	(0X37557);
	set_name	(0X37557,	"g_ViewportWidth");
	set_cmt	(0X37559,	"Height of the 3D rendering viewport (199).",	1);
	create_word	(0X37559);
	set_name	(0X37559,	"g_ViewportHeight");
	create_word	(0X3755D);
	set_name	(0X3755D,	"g_LineX1");
	create_word	(0X3755F);
	set_name	(0X3755F,	"g_LineX2");
	create_word	(0X37561);
	set_name	(0X37561,	"g_LineY1");
	create_word	(0X37563);
	set_name	(0X37563,	"g_LineY2");
	create_word	(0X378D5);
	create_word	(0X378D7);
	set_cmt	(0X378D9,	"Minimum X coordinate of the screen area to redraw.",	1);
	create_word	(0X378D9);
	set_name	(0X378D9,	"g_DirtyRectX1");
	set_cmt	(0X378DB,	"Maximum X coordinate of the screen area to redraw.",	1);
	create_word	(0X378DB);
	set_name	(0X378DB,	"g_DirtyRectX2");
	create_byte	(0X378DE);
	create_word	(0X378DF);
	create_word	(0X378E1);
	create_word	(0X378E3);
	create_word	(0X378E5);
	create_byte	(0X378E8);
	set_name	(0X378E8,	"cbreakHit");
	create_word	(0X378E9);
	set_name	(0X378E9,	"origCBreakSeg");
	create_word	(0X378EB);
	set_name	(0X378EB,	"origCBreakOfs");
	create_byte	(0X378EE);
	create_byte	(0X378EF);
	set_name	(0X378EF,	"timerHandlerInstalled");
	create_word	(0X378F0);
	create_word	(0X378F2);
	create_word	(0X378F4);
	create_word	(0X378F6);
	create_word	(0X378F8);
	create_word	(0X378FA);
	create_byte	(0X378FC);
	create_word	(0X378FD);
	create_word	(0X378FF);
	create_word	(0X37901);
	create_byte	(0X37903);
	create_word	(0X37904);
	create_word	(0X37906);
	create_word	(0X3790A);
	create_byte	(0X3790C);
	create_word	(0X37B26);
	create_word	(0X37B2E);
	create_word	(0X37B30);
	create_word	(0X37B32);
	create_word	(0X37B34);
	create_word	(0X37B36);
	create_word	(0X37B3C);
	create_word	(0X37B44);
	create_word	(0X37B46);
	create_word	(0X37B48);
	make_array	(0X37B4A,	0X2);
	create_word	(0X37B4E);
	create_word	(0X37B50);
	create_word	(0X37B52);
	create_word	(0X37B5A);
	create_word	(0X37B5C);
	create_word	(0X37B5E);
	create_word	(0X37B60);
	create_word	(0X37B64);
	create_word	(0X37B66);
	create_word	(0X37B68);
	create_word	(0X37B70);
	create_word	(0X37B72);
	create_word	(0X37B74);
	create_word	(0X37B7E);
	create_word	(0X37B82);
	create_word	(0X37B84);
	create_word	(0X37B86);
	create_word	(0X37B88);
	create_word	(0X37B8A);
	create_word	(0X37B8C);
	make_array	(0X37B8E,	0X2);
	create_word	(0X37B9C);
	create_word	(0X37B9E);
	create_word	(0X37BA0);
	create_word	(0X37BA2);
	create_word	(0X37BA4);
	create_word	(0X37BA6);
	create_word	(0X37BA8);
	create_word	(0X37BAA);
	create_word	(0X37BBA);
	create_word	(0X37BC0);
	create_word	(0X37BD8);
	create_word	(0X37BDE);
	create_byte	(0X37BF6);
	create_word	(0X37BF7);
	create_byte	(0X37BF9);
	create_word	(0X37BFA);
	create_byte	(0X37BFC);
	create_word	(0X37BFD);
	create_word	(0X37BFF);
	create_word	(0X37C01);
	create_word	(0X37C03);
	create_word	(0X37C05);
	create_word	(0X37C07);
	create_word	(0X37C09);
	create_word	(0X37C0B);
	create_word	(0X37C0D);
	create_word	(0X37C0F);
	create_word	(0X37C11);
	create_byte	(0X37C13);
	create_word	(0X37C14);
	create_word	(0X37C16);
	create_word	(0X37C18);
	create_word	(0X37C1A);
	create_word	(0X37C1C);
	create_word	(0X37C1E);
	create_word	(0X37C20);
	create_word	(0X37C22);
	create_byte	(0X37C24);
	set_name	(0X37C24,	"g_halfSpeedUpdateFlag");
	create_word	(0X37C25);
	create_word	(0X37C27);
	create_word	(0X37C29);
	create_word	(0X37C2B);
	create_byte	(0X37C2D);
	create_byte	(0X37C2E);
	create_byte	(0X37C2F);
	create_word	(0X37C30);
	create_word	(0X37C32);
	create_byte	(0X37C35);
	create_word	(0X37C36);
	create_byte	(0X37C3A);
	create_byte	(0X37EEE);
	create_byte	(0X37EEF);
	create_word	(0X37EF0);
	create_word	(0X37EF2);
	create_word	(0X37F50);
	create_word	(0X37F52);
	create_word	(0X37F54);
	create_word	(0X37F56);
	create_word	(0X37F58);
	create_word	(0X37F5A);
	create_word	(0X37F5C);
	create_word	(0X37F5E);
	create_word	(0X37F60);
	create_word	(0X37F62);
	create_byte	(0X37F64);
	make_array	(0X37F64,	0X14);
	set_name	(0X37F64,	"joyData");
	create_word	(0X37F8C);
	create_word	(0X37F8E);
	create_byte	(0X37F94);
	set_name	(0X37F94,	"noJoy80");
	create_byte	(0X37F95);
	set_name	(0X37F95,	"noJoy80_2");
	create_byte	(0X37F98);
	create_byte	(0X37F99);
	create_byte	(0X37F9A);
	create_word	(0X37F9B);
	create_byte	(0X37F9D);
	create_byte	(0X37F9E);
	create_byte	(0X37F9F);
	create_strlit	(0X37FCA,	0X14);
	set_name	(0X37FCA,	"aLandingGearRaised");
	create_strlit	(0X37FDE,	0XA);
	set_name	(0X37FDE,	"aBrakesOn");
	create_strlit	(0X37FE8,	0X2);
	set_name	(0X37FE8,	"a_");
	create_strlit	(0X37FEA,	0X2);
	set_name	(0X37FEA,	"aG");
	create_byte	(0X37FEC);
	create_word	(0X38070);
	create_word	(0X38072);
	create_word	(0X38074);
	create_word	(0X38076);
	create_word	(0X38078);
	create_word	(0X3807E);
	create_word	(0X38080);
	make_array	(0X38082,	0X2);
	create_word	(0X38084);
	make_array	(0X38086,	0X2);
	create_word	(0X3808C);
	make_array	(0X3808E,	0X2);
	create_word	(0X38090);
	create_word	(0X3809A);
	create_word	(0X3809C);
	make_array	(0X3809E,	0X2);
	create_word	(0X380A0);
	create_word	(0X380A2);
	create_word	(0X380A4);
	create_word	(0X380A6);
	create_word	(0X380AA);
	create_word	(0X380AC);
	create_word	(0X380C8);
	set_name	(0X380C8,	"g_ourHead");
	create_word	(0X380CA);
	set_name	(0X380CA,	"g_ourPitch");
	create_word	(0X380CC);
	set_name	(0X380CC,	"g_ourRoll");
	create_word	(0X380CE);
	set_name	(0X380CE,	"g_viewZ");
	create_word	(0X380D0);
	create_word	(0X380D8);
	create_byte	(0X380DA);
	create_byte	(0X380DD);
	make_array	(0X380DE,	0X2);
	create_word	(0X380E0);
	set_name	(0X380E0,	"g_setThrust");
	create_word	(0X380E2);
	create_strlit	(0X380E4,	0XC);
	set_name	(0X380E4,	"a256left_pic");
	create_strlit	(0X380F0,	0XD);
	set_name	(0X380F0,	"a256right_pic");
	create_strlit	(0X380FD,	0XC);
	set_name	(0X380FD,	"a256rear_pic");
	create_strlit	(0X38109,	0X9);
	set_name	(0X38109,	"aLeft_pic");
	create_strlit	(0X38112,	0XA);
	set_name	(0X38112,	"aRight_pic");
	create_strlit	(0X3811C,	0X9);
	set_name	(0X3811C,	"aRear_pic");
	create_word	(0X38126);
	create_word	(0X38152);
	create_strlit	(0X38154,	0X9);
	set_name	(0X38154,	"aFiring");
	create_word	(0X3815E);
	create_strlit	(0X38160,	0XB);
	set_name	(0X38160,	"aFiredBy");
	create_strlit	(0X3816B,	0X4);
	create_strlit	(0X3816F,	0XC);
	set_name	(0X3816F,	"aTakingOff");
	create_strlit	(0X3817C,	0X9);
	set_name	(0X3817C,	"aMisses");
	create_strlit	(0X38185,	0XF);
	set_name	(0X38185,	"aDestroyedBy");
	create_strlit	(0X38194,	0XF);
	set_name	(0X38194,	"aDestroyedBy_0");
	create_strlit	(0X381A3,	0XF);
	set_name	(0X381A3,	"aGroundImpact");
	create_strlit	(0X381B2,	0X8);
	set_name	(0X381B2,	"aHitBy");
	create_strlit	(0X381BA,	0XC);
	set_name	(0X381BA,	"aIneffective");
	create_strlit	(0X381C6,	0X9);
	set_name	(0X381C6,	"aHitBy_0");
	create_strlit	(0X381D0,	0X2);
	set_name	(0X381D0,	"aA");
	create_strlit	(0X381D6,	0XF);
	set_name	(0X381D6,	"aSecond_Target");
	create_strlit	(0X381E5,	0XF);
	set_name	(0X381E5,	"aPrimaryTarget_0");
	create_strlit	(0X381F4,	0X3);
	set_name	(0X381F4,	"a0");
	create_strlit	(0X381F7,	0X2);
	create_strlit	(0X381F9,	0X7);
	set_name	(0X381F9,	"aFired");
	create_word	(0X38202);
	create_word	(x=0X38334);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(x=0X3834C);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	create_word	(0X3834E);
	create_word	(0X38350);
	create_word	(0X38352);
	create_word	(0X38354);
	create_word	(0X38356);
	create_word	(0X38358);
	create_word	(0X3835A);
	create_word	(0X3835C);
	create_word	(0X3835E);
	create_word	(0X38360);
	create_word	(0X38362);
	create_word	(x=0X38364);
	op_plain_offset	(x,	0,	0X328B0);
	op_plain_offset	(x,	128,	0X328B0);
	make_array	(0X38366,	0X2);
	create_word	(0X3837C);
	make_array	(0X3837E,	0X2);
	create_word	(0X383AC);
	create_word	(0X383AE);
	create_word	(0X383B0);
	create_word	(0X383B2);
	create_word	(0X383B4);
	create_word	(0X383B6);
	create_word	(0X383B8);
	create_word	(0X383BA);
	create_word	(0X383BC);
	create_word	(0X383CC);
	create_word	(0X383CE);
	create_word	(0X383D0);
	create_word	(0X383D2);
	create_word	(0X383D4);
	create_word	(0X383D6);
	create_word	(0X383D8);
	create_word	(0X383DA);
	create_byte	(0X383E4);
	create_byte	(0X383E5);
	create_word	(0X383EA);
	set_name	(0X383EA,	"g_zoomLevel");
	create_word	(0X383EC);
	set_name	(0X383EC,	"radarRange");
	create_word	(0X383EE);
	create_word	(0X383F0);
	create_word	(0X383F2);
	create_word	(0X383F4);
	create_strlit	(0X383F6,	0XE);
	set_name	(0X383F6,	"aStallWarning");
	create_strlit	(0X38404,	0X6);
	set_name	(0X38404,	"aAccel");
	create_strlit	(0X3840A,	0X9);
	set_name	(0X3840A,	"aTraining");
	create_strlit	(0X38413,	0XA);
	set_name	(0X38413,	"aAutopilot");
	create_strlit	(0X3841D,	0X16);
	set_name	(0X3841D,	"aPressAnyKeyToP");
	create_strlit	(0X38433,	0X4);
	set_name	(0X38433,	"aTac");
	create_strlit	(0X38437,	0XA);
	set_name	(0X38437,	"aTrackcam");
	create_strlit	(0X38441,	0X6);
	set_name	(0X38441,	"aAhead");
	create_strlit	(0X38447,	0X5);
	set_name	(0X38447,	"aRear");
	create_strlit	(0X3844C,	0X6);
	set_name	(0X3844C,	"aRight");
	create_strlit	(0X38452,	0X5);
	set_name	(0X38452,	"aLeft");
	create_strlit	(0X38457,	0X4);
	set_name	(0X38457,	"aMap");
	create_word	(0X38460);
	create_strlit	(0X38462,	0X16);
	set_name	(0X38462,	"aDestroyedByGun");
	create_strlit	(0X38478,	0XF);
	set_name	(0X38478,	"aHitByGunfire");
	create_strlit	(0X38487,	0X16);
	set_name	(0X38487,	"aDestroyedByG_0");
	create_strlit	(0X3849D,	0X5);
	set_name	(0X3849D,	"aAt_0");
	create_strlit	(0X384A3,	0XF);
	set_name	(0X384A3,	"aPrimaryTarget");
	create_strlit	(0X384B2,	0X11);
	set_name	(0X384B2,	"aSecondaryTarget");
	create_strlit	(0X384C3,	0XA);
	set_name	(0X384C3,	"aNoTarget");
	create_strlit	(0X384CD,	0XA);
	set_name	(0X384CD,	"aNoTarget_0");
	create_strlit	(0X384D7,	0XD);
	set_name	(0X384D7,	"aMissileLock");
	create_strlit	(0X384E4,	0X7);
	set_name	(0X384E4,	"aRange");
	create_strlit	(0X384ED,	0X4);
	set_name	(0X384ED,	"aKm");
	create_strlit	(0X384F2,	0X5);
	set_name	(0X384F2,	"a_3d3_0");
	create_strlit	(0X384F7,	0X3);
	set_name	(0X384F7,	"aRb_4");
	create_strlit	(0X384FA,	0X14);
	set_name	(0X384FA,	"aOpenErrorOn_3d3_0");
	create_byte	(0X3850E);
	create_byte	(0X3850F);
	create_strlit	(0X38510,	0XA);
	set_name	(0X38510,	"a15flt_xxx");
	create_strlit	(0X3851A,	0X5);
	set_name	(0X3851A,	"aBrg");
	create_strlit	(0X38520,	0X5);
	set_name	(0X38520,	"aLong");
	create_strlit	(0X38525,	0X7);
	set_name	(0X38525,	"aMedium");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_strlit	(0X3852C,	0X6);
	set_name	(0X3852C,	"aShort");
	create_strlit	(0X38532,	0XD);
	set_name	(0X38532,	"aRangeRadar");
	create_strlit	(0X3853F,	0XE);
	set_name	(0X3853F,	"aDetailLevel");
	create_strlit	(0X3854D,	0X11);
	set_name	(0X3854D,	"aKybdSensitivit");
	create_strlit	(0X3855E,	0X12);
	set_name	(0X3855E,	"aMemoryAvailabl");
	create_strlit	(0X38570,	0XF);
	set_name	(0X38570,	"aJiffiesFrame");
	create_strlit	(0X3857F,	0X8);
	set_name	(0X3857F,	"aSounds");
	create_strlit	(0X38587,	0XA);
	set_name	(0X38587,	"aDirector");
	create_strlit	(0X38591,	0X4);
	set_name	(0X38591,	"aOff");
	create_strlit	(0X38595,	0X19);
	set_name	(0X38595,	"aWaypointPrimar");
	create_strlit	(0X385AE,	0X1B);
	set_name	(0X385AE,	"aWaypointSecond");
	create_strlit	(0X385C9,	0X1B);
	set_name	(0X385C9,	"aWaypointFriend");
	create_strlit	(0X385E4,	0XE);
	set_name	(0X385E4,	"aAutopilotOff");
	create_strlit	(0X385F2,	0XD);
	set_name	(0X385F2,	"aAutopilotOn");
	create_word	(0X38600);
	create_word	(0X38602);
	create_word	(0X38604);
	create_word	(0X38606);
	create_word	(0X38608);
	create_word	(0X3860A);
	create_strlit	(0X3860E,	0XF);
	set_name	(0X3860E,	"aNotAvailable");
	create_strlit	(0X3861D,	0X7);
	set_name	(0X3861D,	"aArmed");
	create_byte	(0X3862A);
	create_byte	(0X3862B);
	create_byte	(0X3862C);
	make_array	(0X3862C,	0X200);
	set_name	(0X3862C,	"picBuf");
	create_strlit	(0X3882C,	0X10);
	set_name	(0X3882C,	"aFileNotFound");
	create_strlit	(0X3883C,	0X1B);
	set_name	(0X3883C,	"aNoFileBuffersAvailabl");
	create_strlit	(0X38857,	0XD);
	set_name	(0X38857,	"aOpenError");
	create_strlit	(0X38864,	0X13);
	set_name	(0X38864,	"aFileClosingError");
	create_strlit	(0X38877,	0XB);
	set_name	(0X38877,	"aReadError");
	create_strlit	(0X38882,	0XC);
	set_name	(0X38882,	"aWriteError");
	create_word	(0X3888E);
	create_word	(0X38890);
	make_array	(0X38892,	0X2);
	create_word	(0X38894);
	set_name	(0X38894,	"fileReadPos");
	create_word	(0X38896);
	set_name	(0X38896,	"tmpFileHandle");
	create_byte	(0X38898);
	make_array	(0X38898,	0X140);
	set_name	(0X38898,	"picDecodedRowBuf");
	create_word	(0X389D8);
	create_word	(0X389DA);
	set_name	(0X389DA,	"tmpPageIndex");
	create_word	(0X389DC);
	set_name	(0X389DC,	"rowOffset");
	make_array	(0X389DE,	0X2);
	create_word	(0X389E0);
	create_word	(0X389E2);
	set_name	(0X389E2,	"readFromFilePtr");
	create_word	(0X389E4);
	create_word	(0X389E6);
	create_word	(x=0X389E8);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(0X389EA);
	create_word	(x=0X389EC);
	op_seg		(x,	0);
	create_word	(0X38A3A);
	create_strlit	(0X38A3C,	0XD);
	set_name	(0X38A3C,	"aC_file_info");
	create_dword	(0X38A49);
	create_word	(0X38A55);
	create_word	(0X38A57);
	create_word	(0X38A5B);
	create_word	(0X38A5D);
	create_byte	(0X38A60);
	create_word	(0X38A62);
	create_word	(0X38A78);
	set_name	(0X38A78,	"argc");
	create_word	(0X38A7A);
	set_name	(0X38A7A,	"argv");
	create_word	(0X38A7C);
	create_byte	(0X38A7E);
	create_word	(x=0X38A80);
	op_seg		(x,	0);
	create_byte	(0X38A86);
	create_byte	(0X38A87);
	create_dword	(0X38A88);
	create_word	(0X38A8C);
	create_word	(0X38A92);
	create_word	(0X38A94);
	create_word	(0X38A96);
	create_word	(0X38A98);
	create_word	(0X38BC6);
	create_word	(0X38BC8);
	create_word	(0X38BCA);
	create_word	(0X38BCC);
	make_array	(0X38BCE,	0X2);
	create_word	(0X38BD0);
	create_byte	(0X38BD5);
	create_word	(0X38BD6);
	create_word	(0X38BDA);
	create_word	(0X38BDC);
	make_array	(0X38BDE,	0X2);
	create_byte	(0X38BE0);
	make_array	(0X38BE1,	0X3);
	create_word	(0X38BE6);
	create_dword	(0X38BE8);
	create_dword	(0X38BEC);
	create_byte	(0X38BF0);
	create_word	(x=0X38BF2);
	op_seg		(x,	0);
	create_word	(x=0X38BF4);
	op_seg		(x,	0);
	create_word	(x=0X38BF6);
	op_seg		(x,	0);
	create_strlit	(0X38BF8,	0X9);
	set_name	(0X38BF8,	"aNmsg");
	create_strlit	(0X38C02,	0X1A);
	set_name	(0X38C02,	"aR6000StackOver");
	create_strlit	(0X38C1E,	0X1F);
	set_name	(0X38C1E,	"aR6003IntegerDivideBy0");
	create_strlit	(0X38C3F,	0X2C);
	set_name	(0X38C3F,	"aR6009NotEnoughSpaceFo");
	create_strlit	(0X38C72,	0X10);
	set_name	(0X38C72,	"aRunTimeError");
	create_strlit	(0X38C84,	0X25);
	set_name	(0X38C84,	"aR6002FloatingPointNot");
	create_strlit	(0X38CAB,	0X23);
	set_name	(0X38CAB,	"aR6001NullPointerAssig");
	create_word	(0X38CD2);
	create_dword	(0X38CD4);
	set_name	(0X38CD4,	"farPointer");
	create_word	(0X38CD8);
	create_word	(0X38CDA);
	create_word	(0X38CDC);
	create_word	(0X38CDE);
	create_word	(0X38CE0);
	create_word	(0X38CE2);
	create_word	(0X38CE4);
	create_word	(0X38CE6);
	create_word	(0X38CE8);
	create_word	(0X38CEA);
	create_word	(0X38CEC);
	create_word	(0X38CEE);
	create_word	(0X38CF0);
	create_word	(0X38CF2);
	create_word	(0X38CFA);
	create_word	(0X38CFC);
	create_word	(0X38CFE);
	create_word	(0X38D00);
	create_word	(0X38D02);
	create_word	(0X38D04);
	create_word	(0X38D06);
	create_word	(0X38D08);
	set_name	(0X38D08,	"flt15_word1");
	create_byte	(0X38D0A);
	make_array	(0X38D0A,	0X40);
	set_name	(0X38D0A,	"flt15_buf1");
	create_word	(0X38D4A);
	set_name	(0X38D4A,	"flt15_size");
	create_word	(0X38D4C);
	create_word	(0X38D4E);
	create_word	(0X38D50);
	create_word	(0X38D52);
	create_word	(0X38D54);
	create_word	(0X38D56);
	create_word	(0X38D58);
	create_word	(0X38D5A);
	create_word	(0X38D5C);
	create_word	(0X38D5E);
	create_byte	(0X38D60);
	create_byte	(0X38D61);
	create_byte	(0X38D62);
	create_byte	(0X38D63);
	create_word	(0X38D64);
	create_word	(0X38D66);
	create_word	(0X38D68);
	create_byte	(0X38D6A);
	create_byte	(0X38D6B);
	create_word	(0X38D6C);
	create_byte	(0X38D6E);
	create_word	(0X38F70);
	create_word	(0X38F72);
	create_byte	(0X38F74);
	make_array	(0X38F74,	0X18);
	set_name	(0X38F74,	"strBuf");
	create_byte	(0X38F8C);
	set_name	(0X38F8C,	"g_RawJoyX1");
	create_byte	(0X38F8D);
	set_name	(0X38F8E,	"g_RawJoyY1");
	create_word	(0X38FC4);
	create_word	(0X38FC6);
	create_word	(0X38FC8);
	make_array	(0X38FCA,	0X2);
	create_word	(0X38FCC);
	create_word	(0X38FCE);
	create_word	(0X38FDA);
	set_name	(0X38FDA,	"g_gees");
	create_word	(0X38FDC);
	set_name	(0X38FDC,	"g_difficultyLevel");
	create_word	(0X38FDE);
	create_word	(0X38FE0);
	create_dword	(0X38FE2);
	create_word	(0X38FE6);
	set_name	(0X38FE6,	"fileHandle");
	create_word	(0X38FE8);
	create_word	(0X38FEA);
	create_word	(0X38FEC);
	create_word	(0X38FEE);
	set_name	(0X38FEE,	"g_closestThreatDistance");
	create_dword	(0X38FF0);
	set_name	(0X38FF0,	"gameData");
	create_word	(0X38FF6);
	create_word	(0X38FF8);
	create_word	(0X38FFA);
	create_word	(0X38FFC);
	create_byte	(0X38FFE);
	make_array	(0X38FFE,	0X200);
	set_name	(0X38FFE,	"buf4_3dg");
	set_cmt	(0X391FE,	"planeFlags",	1);
	create_word	(0X391FE);
	set_name	(0X391FE,	"g_playerPlaneFlags");
	create_word	(0X39200);
	create_byte	(0X39202);
	make_array	(0X39202,	0X200);
	set_name	(0X39202,	"buf3_3dg");
	create_word	(0X39402);
	create_word	(0X39604);
	create_word	(0X39606);
	create_byte	(0X39608);
	make_array	(0X39608,	0X200);
	set_name	(0X39608,	"buf2_3dg");
	create_word	(0X39808);
	create_byte	(0X3985A);
	make_array	(0X3985A,	0X100);
	set_name	(0X3985A,	"buf1_3dg");
	create_byte	(0X3995A);
	create_byte	(0X3995B);
	create_word	(0X3995C);
	set_name	(0X3995E,	"buf1_3dt");
	set_name	(0X39960,	"buf2_3dt");
	set_name	(0X39962,	"buf3_3dt");
	create_byte	(0X39964);
	set_name	(0X39964,	"val_3dt");
	create_word	(0X3A8FE);
	create_byte	(0X3A900);
	make_array	(0X3A900,	0X40);
	create_word	(0X3A940);
	make_array	(0X3A942,	0X2);
	create_word	(0X3A944);
	set_name	(0X3A944,	"g_velocity");
	create_word	(0X3A946);
	MakeStruct	(0X3A95A,	"struc_1");
	make_array	(0X3A95A,	0X10);
	create_word	(0X3AA5A);
	set_name	(0X3AA5A,	"g_knots");
	create_word	(0X3AA5C);
	set_cmt	(0X3AA5E,	"Array of object properties/structures",	0);
	MakeStruct	(0X3AA5E,	"struc_4");
	make_array	(0X3AA5E,	0X4A);
	set_name	(0X3AA5E,	"g_planes");
	create_word	(0X3AF0C);
	create_byte	(0X3AF0E);
	make_array	(0X3AF0E,	0X96);
	set_name	(0X3AF0E,	"buf3d3_1");
	create_word	(0X3AFA4);
	create_word	(0X3AFA6);
	set_name	(0X3AFA6,	"g_thrust");
	create_word	(0X3AFA8);
	create_word	(0X3AFAA);
	create_byte	(0X3AFAC);
	make_array	(0X3AFAC,	0X100);
	create_word	(0X3B0AC);
	create_byte	(0X3B0AE);
	make_array	(0X3B0AE,	0X96);
	set_name	(0X3B0AE,	"buf3d3_2");
	create_word	(0X3B144);
	create_word	(0X3B146);
	create_word	(0X3B148);
	set_name	(0X3B148,	"g_playerTargetIndex");
	create_word	(0X3B14A);
	create_word	(0X3B14C);
	create_word	(0X3B158);
	create_word	(0X3B15A);
	create_word	(0X3B15E);
	create_byte	(0X3B168);
	make_array	(0X3B168,	0X96);
	set_name	(0X3B168,	"buf3d3_3");
	create_dword	(0X3B1FE);
	create_word	(0X3B204);
	create_word	(0X3B206);
	set_cmt	(0X3B208,	"Structure for a single game object/plane",	0);
	MakeStruct	(0X3B208,	"struc_3");
	create_word	(0X3B22C);
	create_word	(0X3B22E);
	create_word	(0X3B230);
	create_word	(0X3B232);
	create_word	(0X3B234);
	create_word	(0X3B236);
	create_byte	(0X3B23E);
	create_word	(0X3B240);
	create_word	(0X3B4D2);
	create_dword	(0X3B4D4);
	create_word	(0X3B4D8);
	create_word	(0X3B4DA);
	create_word	(0X3B4DC);
	create_word	(0X3B4DE);
	create_word	(0X3B4E0);
	create_byte	(0X3B4E2);
	set_name	(0X3B4E2,	"hercFlag");
	create_word	(0X3B4E4);
	create_byte	(0X3B4E6);
	create_byte	(0X3B4E7);
	create_byte	(0X3B4E8);
	create_byte	(0X3B4E9);
	create_word	(0X3B4EA);
	create_byte	(0X3B4EC);
	create_word	(0X3B5D6);
	create_dword	(0X3B7DA);
	set_name	(0X3B7DA,	"g_ViewX");
	create_word	(0X3B7DE);
	create_word	(0X3B7E0);
	create_word	(0X3B7E2);
	create_word	(0X3B7E4);
	create_word	(0X3B7E6);
	create_word	(0X3B7E8);
	create_word	(0X3B7EA);
	create_word	(0X3B7EC);
	create_byte	(0X3B7EE);
	create_byte	(0X3B7EF);
	create_byte	(0X3B7F0);
	create_byte	(0X3B7F1);
	make_array	(0X3B7F2,	0X6);
	create_dword	(0X3B7F8);
	set_name	(0X3B7F8,	"g_ViewY");
	create_byte	(0X3B7FC);
	make_array	(0X3B7FC,	0X640);
	create_word	(0X3BE3C);
	create_byte	(0X3BE3E);
	make_array	(0X3BE3E,	0X40);
	create_word	(0X3BE7E);
	create_byte	(0X3BE80);
	make_array	(0X3BE80,	0X10);
	create_word	(0X3BE90);
	set_name	(0X3BE90,	"keyValue");
	create_word	(0X3BE92);
	create_word	(0X3BE94);
	create_word	(0X3BE96);
	create_word	(0X3BE98);
	make_array	(0X3BE9A,	0X2);
	create_word	(0X3BE9C);
	create_word	(0X3BEBC);
	create_word	(0X3BEBE);
	create_word	(0X3BEC0);
	set_name	(0X3BEC0,	"g_viewX_");
	create_word	(0X3BEC2);
	create_byte	(0X3BEC4);
	make_array	(0X3BEC5,	0X3);
	create_word	(0X3BEC8);
	create_word	(0X3BECA);
	set_name	(0X3BECA,	"sign3d3");
	create_word	(0X3BECC);
	create_word	(0X3BECE);
	create_word	(0X3BED0);
	set_name	(0X3BED0,	"g_viewY_");
	create_word	(0X3BED2);
	create_word	(0X3BED4);
	create_word	(0X3BED6);
	create_byte	(0X3BED8);
	make_array	(0X3BED8,	0X64);
	create_word	(0X3BF3C);
	create_word	(0X3BF3E);
	create_byte	(0X3BF40);
	make_array	(0X3BF40,	0X50);
	set_name	(0X3BF40,	"tempString");
	create_word	(0X3BF90);
	set_name	(0X3BF90,	"g_gunHits");
	create_byte	(0X3BF92);
	set_name	(0X3BF92,	"regs");
	create_byte	(0X3BF93);
	create_word	(0X3BFA0);
	create_word	(0X3BFA2);
	create_byte	(0X3BFA4);
	make_array	(0X3BFA4,	0X64);
	create_word	(0X3C008);
	create_word	(0X3C00A);
	create_word	(0X3C00C);
	create_word	(0X3C00E);
	create_word	(0X3C010);
	set_name	(0X3C010,	"flagFarToNear");
	create_word	(0X3C012);
	set_name	(0X3C012,	"keyScancode");
	create_word	(0X3C014);
	create_word	(0X3C016);
	create_word	(0X3C018);
	create_word	(0X3C01A);
	create_dword	(0X3C01C);
	create_word	(0X3C020);
	make_array	(0X3C022,	0X2);
	create_dword	(0X3C024);
	create_word	(0X3C028);
	create_byte	(0X3C02A);
	create_word	(0X3C02C);
	create_word	(0X3C02E);
	create_word	(0X3C03A);
	create_word	(0X3C03E);
	create_word	(0X3C040);
	create_word	(0X3C042);
	create_word	(0X3C044);
	create_word	(0X3C046);
	create_word	(0X3C048);
	create_byte	(0X3C04A);
	make_array	(0X3C04A,	0X50);
	set_name	(0X3C04A,	"string_3C04A");
	create_word	(0X3C09A);
	create_word	(0X3C09C);
	create_word	(0X3C09E);
	create_word	(0X3C0A0);
	create_word	(0X3C0A2);
	make_array	(0X3C0A2,	0X64);
	create_word	(0X3C16A);
	set_name	(0X3C16A,	"g_closestThreatIndex");
	create_word	(0X3C16C);
	create_byte	(0X3C16E);
	make_array	(0X3C16E,	0X2EE);
	create_word	(0X3C45C);
	set_name	(0X3C45C,	"g_currentWeaponType");
	create_word	(0X3C45E);
	create_word	(0X3C460);
	make_array	(0X3C460,	0XA0);
	set_name	(0X3C460,	"matrix3dt_2");
	create_byte	(0X3C5A0);
	create_byte	(0X3C5A1);
	create_word	(0X3C5A2);
	create_word	(0X3C5A4);
	create_word	(0X3C5A6);
	create_word	(0X3C5A8);
	create_word	(0X3C5AA);
	create_word	(0X3C5AC);
	create_word	(0X3C5AE);
	create_word	(0X3C5B0);
	create_word	(0X3C5B2);
	create_word	(0X3C5B4);
	create_word	(0X3C5B6);
	create_word	(0X3C69C);
	create_word	(0X3C69E);
	create_byte	(0X3C6A0);
	create_word	(0X3C6A2);
	create_word	(0X3C6A4);
	create_dword	(0X3C6A6);
	set_name	(0X3C6A6,	"commData");
	create_word	(0X3C6AA);
	create_word	(0X3C6AC);
	create_word	(0X3C6AE);
	make_array	(0X3C6B0,	0X200);
	create_byte	(0X3C8B0);
	create_word	(0X3C8B2);
	create_word	(0X3C8B4);
	set_name	(0X3C8B4,	"gfxBufPtr");
	create_word	(0X3C8B6);
	create_word	(0X3C8B8);
	create_word	(0X3C8BA);
	create_word	(0X3C8BC);
	create_word	(0X3C8BE);
	create_word	(0X3C8C0);
	create_word	(0X3C8C2);
	create_word	(0X3C8C4);
	set_name	(0X3C8C4,	"size3d3_7");
	create_byte	(0X3C8C6);
	create_byte	(0X3C8D0);
	make_array	(0X3C8D0,	0X800);
}

static Functions_0(void) {

	add_func    (0X10010,0X10147);
	set_func_flags(0X10010,0x410);
	SetType(0X10010, "int __cdecl main(int argc, const char **argv, const char **envp);");
	set_frame_size(0X10010, 0X6, 2, 0);
	define_local_var(0X10010, 0X10147, "[bp+0X4]", "argc");
	define_local_var(0X10010, 0X10147, "[bp+0X6]", "argv");
	define_local_var(0X10010, 0X10147, "[bp+0XA]", "envp");
	set_name(0X100D6, "else_100D6", SN_LOCAL);
	add_func    (0X10147,0X10211);
	set_func_flags(0X10147,0x410);
	SetType(0X10147, "void __cdecl drawCockpit();");
	set_frame_size(0X10147, 0, 2, 0);
	add_func    (0X10211,0X10294);
	set_func_flags(0X10211,0x410);
	set_frame_size(0X10211, 0, 2, 0);
	add_func    (0X10294,0X10297);
	set_func_flags(0X10294,0x4400);
	set_frame_size(0X10294, 0X2, 0, 0);
	add_func    (0X10297,0X1029A);
	set_func_flags(0X10297,0x4400);
	set_frame_size(0X10297, 0X2, 0, 0);
	add_func    (0X1029A,0X102E1);
	set_func_flags(0X1029A,0x410);
	SetType(0X1029A, "void __cdecl gfxInit();");
	set_frame_size(0X1029A, 0X2, 2, 0);
	add_func    (0X102E2,0X10334);
	set_func_flags(0X102E2,0x480);
	set_frame_size(0X102E2, 0, 0, 0);
	add_func    (0X10334,0X10673);
	set_func_flags(0X10334,0x410);
	set_frame_size(0X10334, 0XAA, 2, 0);
	add_func    (0X10688,0X106E1);
	set_func_flags(0X10688,0x4010);
	set_frame_size(0X10688, 0X4, 2, 0);
	set_name(0X106C0, "writeSlots", SN_LOCAL);
	add_func    (0X10720,0X114E8);
	set_func_flags(0X10720,0x4410);
	set_frame_size(0X10720, 0X10, 2, 0);
	add_func    (0X114E8,0X114FC);
	set_func_flags(0X114E8,0x4410);
	set_frame_size(0X114E8, 0X10, 2, 0);
	add_func    (0X114FC,0X11636);
	set_func_flags(0X114FC,0x4410);
	set_frame_size(0X114FC, 0X8, 2, 0);
	add_func    (0X11636,0X11676);
	set_func_flags(0X11636,0x4410);
	set_frame_size(0X11636, 0X4, 2, 0);
	add_func    (0X11676,0X11841);
	set_func_flags(0X11676,0x4410);
	set_frame_size(0X11676, 0XE, 2, 0);
	add_func    (0X11841,0X118D5);
	set_func_flags(0X11841,0x4410);
	set_frame_size(0X11841, 0X8, 2, 0);
	add_func    (0X118D5,0X118F6);
	set_func_flags(0X118D5,0x4410);
	set_frame_size(0X118D5, 0, 2, 0);
	add_func    (0X118F6,0X11971);
	set_func_flags(0X118F6,0x4410);
	set_frame_size(0X118F6, 0XA, 2, 0);
	add_func    (0X11971,0X119A3);
	set_func_flags(0X11971,0x4410);
	set_frame_size(0X11971, 0X2, 2, 0);
	add_func    (0X119A3,0X11A18);
	set_func_flags(0X119A3,0x4410);
	set_frame_size(0X119A3, 0X8, 2, 0);
	add_func    (0X11A18,0X11A88);
	set_func_flags(0X11A18,0x4410);
	set_frame_size(0X11A18, 0X4, 2, 0);
	add_func    (0X11A88,0X11B37);
	set_func_flags(0X11A88,0x4410);
	set_frame_size(0X11A88, 0X2, 2, 0);
	add_func    (0X11B37,0X11BC3);
	set_func_flags(0X11B37,0x4410);
	set_frame_size(0X11B37, 0, 2, 0);
	add_func    (0X11BC3,0X11BFD);
	set_func_flags(0X11BC3,0x4410);
	set_frame_size(0X11BC3, 0, 2, 0);
	add_func    (0X11BFD,0X11C21);
	set_func_flags(0X11BFD,0x4410);
	set_frame_size(0X11BFD, 0, 2, 0);
	add_func    (0X11C21,0X11D10);
	set_func_flags(0X11C21,0x4410);
	set_frame_size(0X11C21, 0X2, 2, 0);
	add_func    (0X11D10,0X11D6E);
	set_func_flags(0X11D10,0x4410);
	set_frame_size(0X11D10, 0X2, 2, 0);
	add_func    (0X11D6E,0X11E0E);
	set_func_flags(0X11D6E,0x4410);
	set_frame_size(0X11D6E, 0, 2, 0);
	add_func    (0X11E0E,0X11F3E);
	set_func_flags(0X11E0E,0x4410);
	set_frame_size(0X11E0E, 0X6, 2, 0);
	set_name(0X11E33, "next_11E33", SN_LOCAL);
	set_name(0X11E36, "loop_11E36", SN_LOCAL);
	set_name(0X11E5F, "continue_11E5F", SN_LOCAL);
	set_name(0X11E61, "break_11E61", SN_LOCAL);
	set_name(0X11EBA, "else_11EBA", SN_LOCAL);
	set_name(0X11EFC, "endif_11EFC", SN_LOCAL);
	add_func    (0X11F3E,0X12049);
	set_func_flags(0X11F3E,0x4410);
	set_frame_size(0X11F3E, 0X8, 2, 0);
	add_func    (0X12049,0X1206D);
	set_func_flags(0X12049,0x4410);
	set_frame_size(0X12049, 0X4, 2, 0);
	add_func    (0X1206D,0X1215C);
	set_func_flags(0X1206D,0x4410);
	set_frame_size(0X1206D, 0, 2, 0);
	add_func    (0X1215C,0X121A9);
	set_func_flags(0X1215C,0x4410);
	set_frame_size(0X1215C, 0X4, 2, 0);
	define_local_var(0X1215C, 0X121A9, "[bp-0X4]", "nearOff");
	define_local_var(0X1215C, 0X121A9, "[bp-0X2]", "nearSeg");
	define_local_var(0X1215C, 0X121A9, "[bp+0X4]", "argOff");
	define_local_var(0X1215C, 0X121A9, "[bp+0X6]", "count");
	set_name(0X12187, "else_12187", SN_LOCAL);
	add_func    (0X121A9,0X121C5);
	set_func_flags(0X121A9,0x4410);
	set_frame_size(0X121A9, 0, 2, 0);
	add_func    (0X121C6,0X121CA);
	set_func_flags(0X121C6,0x400);
	set_frame_size(0X121C6, 0, 0, 0);
	add_func    (0X121CA,0X12277);
	set_func_flags(0X121CA,0x410);
	set_frame_size(0X121CA, 0X2, 2, 0);
	add_func    (0X12278,0X1229A);
	set_func_flags(0X12278,0x4410);
	set_frame_size(0X12278, 0X2, 2, 0);
	add_func    (0X1229A,0X122B8);
	set_func_flags(0X1229A,0x4410);
	set_frame_size(0X1229A, 0, 2, 0);
	add_func    (0X122B8,0X126B4);
	set_func_flags(0X122B8,0x4410);
	set_frame_size(0X122B8, 0X1E, 2, 0);
	add_func    (0X126B4,0X1273E);
	set_func_flags(0X126B4,0x4410);
	set_frame_size(0X126B4, 0, 2, 0);
	add_func    (0X1273E,0X12873);
	set_func_flags(0X1273E,0x4410);
	set_func_cmt(0X1273E,	"similar to sub_13a61 in start.exe, perhaps different flags", 0);
	set_frame_size(0X1273E, 0X2, 2, 0);
	add_func    (0X12874,0X12898);
	set_func_flags(0X12874,0x410);
	set_frame_size(0X12874, 0, 2, 0);
	add_func    (0X12898,0X12C82);
	set_func_flags(0X12898,0x410);
	SetType(0X12898, "void __cdecl load3D3(char *);");
	set_frame_size(0X12898, 0X1A, 2, 0);
	set_name(0X12994, "next_12994", SN_LOCAL);
	set_name(0X1299F, "loop_1299F", SN_LOCAL);
	set_name(0X129E1, "break_129E1", SN_LOCAL);
	set_name(0X129FE, "cond_129FE", SN_LOCAL);
	set_name(0X12AC5, "loop_12AC5", SN_LOCAL);
	set_name(0X12B1A, "break_12B1A", SN_LOCAL);
	set_name(0X12B26, "next_12B26", SN_LOCAL);
	set_name(0X12B29, "cond_12B29", SN_LOCAL);
	set_name(0X12B32, "loop_12B32", SN_LOCAL);
	set_name(0X12BC6, "next_12BC6", SN_LOCAL);
	set_name(0X12BC9, "loop_12BC9", SN_LOCAL);
	set_name(0X12BE1, "loop_12BE1", SN_LOCAL);
	set_name(0X12C05, "break_12C05", SN_LOCAL);
	set_name(0X12C3C, "break_12C3C", SN_LOCAL);
	set_name(0X12C60, "continue_12C60", SN_LOCAL);
	set_name(0X12C63, "break_12C63", SN_LOCAL);
	set_name(0X12C7D, "out_12C7D", SN_LOCAL);
	add_func    (0X12C82,0X12E54);
	set_func_flags(0X12C82,0x4410);
	SetType(0X12C82, "void __cdecl load3DT(char *);");
	set_frame_size(0X12C82, 0XC, 2, 0);
	set_name(0X12CB7, "openOk_12CB7", SN_LOCAL);
	set_name(0X12D09, "next_12D09", SN_LOCAL);
	set_name(0X12D0C, "cond_12D0C", SN_LOCAL);
	set_name(0X12D4F, "break_12D4F", SN_LOCAL);
	set_name(0X12D5B, "next_12D5B", SN_LOCAL);
	set_name(0X12D5E, "cond_12D5E", SN_LOCAL);
	set_name(0X12D67, "loop_12D67", SN_LOCAL);
	set_name(0X12D6E, "innerNext_12D6E", SN_LOCAL);
	set_name(0X12D71, "innerCond_12D71", SN_LOCAL);
	set_name(0X12D82, "innerLoop_12D82", SN_LOCAL);
	set_name(0X12D9E, "nextInner2_12D9E", SN_LOCAL);
	set_name(0X12DA1, "condInner2_12DA1", SN_LOCAL);
	set_name(0X12DB9, "innerBody2_12DB9", SN_LOCAL);
	set_name(0X12E3F, "continueInner_12E3F", SN_LOCAL);
	set_name(0X12E42, "continueOuter_12E42", SN_LOCAL);
	set_name(0X12E4F, "out_12E4F", SN_LOCAL);
	add_func    (0X12E54,0X12F8C);
	set_func_flags(0X12E54,0x410);
	set_frame_size(0X12E54, 0X6, 2, 0);
	set_name(0X12E68, "loop_12E68", SN_LOCAL);
	set_name(0X12EB5, "break_12EB5", SN_LOCAL);
	set_name(0X12EEF, "signOk_12EEF", SN_LOCAL);
	add_func    (0X12F8C,0X12FAF);
	set_func_flags(0X12F8C,0x4410);
	SetType(0X12F8C, "int __cdecl printError(char *);");
	set_frame_size(0X12F8C, 0, 2, 0);
	add_func    (0X12FAF,0X12FDA);
	set_func_flags(0X12FAF,0x4410);
	SetType(0X12FAF, "int __cdecl strcpyFromDot(char *arg_0, char *arg_2);");
	set_frame_size(0X12FAF, 0X2, 2, 0);
	set_name(0X12FB5, "loop_12FB5", SN_LOCAL);
	set_name(0X12FCA, "break_12FCA", SN_LOCAL);
	add_func    (0X12FDA,0X13224);
	set_func_flags(0X12FDA,0x4410);
	set_frame_size(0X12FDA, 0X28, 2, 0);
	add_func    (0X13224,0X13265);
	set_func_flags(0X13224,0x4410);
	set_frame_size(0X13224, 0, 2, 0);
	add_func    (0X13266,0X132B9);
	set_func_flags(0X13266,0x4410);
	set_frame_size(0X13266, 0X2, 2, 0);
	add_func    (0X132BA,0X1345E);
	set_func_flags(0X132BA,0x4410);
	set_frame_size(0X132BA, 0X1E, 2, 0);
	add_func    (0X1345E,0X134AB);
	set_func_flags(0X1345E,0x410);
	set_frame_size(0X1345E, 0X4, 2, 0);
	add_func    (0X134AC,0X13638);
	set_func_flags(0X134AC,0x4410);
	set_frame_size(0X134AC, 0X18, 2, 0);
	add_func    (0X13638,0X13693);
	set_func_flags(0X13638,0x4410);
	set_frame_size(0X13638, 0, 2, 0);
	add_func    (0X13694,0X136D1);
	set_func_flags(0X13694,0x4410);
	set_frame_size(0X13694, 0, 2, 0);
	add_func    (0X136D2,0X1374A);
	set_func_flags(0X136D2,0x4410);
	set_frame_size(0X136D2, 0, 2, 0);
	add_func    (0X1374A,0X1378E);
	set_func_flags(0X1374A,0x410);
	set_frame_size(0X1374A, 0, 2, 0);
	add_func    (0X1378E,0X13816);
	set_func_flags(0X1378E,0x4410);
	set_frame_size(0X1378E, 0X6, 2, 0);
	add_func    (0X13816,0X13921);
	set_func_flags(0X13816,0x4410);
	set_frame_size(0X13816, 0XC, 2, 0);
	add_func    (0X13922,0X13932);
	set_func_flags(0X13922,0x4410);
	set_frame_size(0X13922, 0, 2, 0);
	add_func    (0X13932,0X139A9);
	set_func_flags(0X13932,0x410);
	set_frame_size(0X13932, 0, 2, 0);
	add_func    (0X139AA,0X139BF);
	set_func_flags(0X139AA,0x400);
	set_frame_size(0X139AA, 0, 0, 0);
	add_func    (0X139C0,0X13A6C);
	set_func_flags(0X139C0,0x410);
	set_frame_size(0X139C0, 0X4, 2, 0);
	add_func    (0X13A6C,0X13A8F);
	set_func_flags(0X13A6C,0x4410);
	set_frame_size(0X13A6C, 0, 2, 0);
	add_func    (0X13A90,0X13AA7);
	set_func_flags(0X13A90,0x4410);
	set_frame_size(0X13A90, 0, 2, 0);
	add_func    (0X13AEE,0X13B2F);
	set_func_flags(0X13AEE,0x4400);
	add_func    (0X13B2F,0X13B45);
	set_func_flags(0X13B2F,0x4400);
	add_func    (0X13B86,0X13B96);
	set_func_flags(0X13B86,0x4400);
	add_func    (0X13B96,0X13BA2);
	set_func_flags(0X13B96,0x4400);
	add_func    (0X13BA2,0X13BC1);
	set_func_flags(0X13BA2,0x4400);
	add_func    (0X13BC1,0X13BC5);
	set_func_flags(0X13BC1,0x4402);
	add_func    (0X13BC5,0X13BC9);
	set_func_flags(0X13BC5,0x4402);
	add_func    (0X13BC9,0X13BCD);
	set_func_flags(0X13BC9,0x400);
	add_func    (0X13BCD,0X13BEC);
	set_func_flags(0X13BCD,0x4400);
	add_func    (0X13BEC,0X13C0F);
	set_func_flags(0X13BEC,0x4400);
	set_frame_size(0X13BEC, 0X4, 0, 0);
	add_func    (0X13C0F,0X13C20);
	set_func_flags(0X13C0F,0x4400);
	add_func    (0X13C20,0X13C2C);
	set_func_flags(0X13C20,0x4400);
	add_func    (0X13C2C,0X13C3B);
	set_func_flags(0X13C2C,0x402);
	add_func    (0X13C3B,0X13C47);
	set_func_flags(0X13C3B,0x400);
	set_frame_size(0X13C3B, 0X6, 0, 0);
	add_func    (0X13C47,0X13C77);
	set_func_flags(0X13C47,0x400);
	set_frame_size(0X13C47, 0, 0, 0);
	add_func    (0X13C78,0X13CB6);
	set_func_flags(0X13C78,0x4400);
	add_func    (0X13CB6,0X13CD7);
	set_func_flags(0X13CB6,0x4400);
	add_func    (0X13D6B,0X13DF2);
	set_func_flags(0X13D6B,0x4400);
	add_func    (0X13DF2,0X13E87);
	set_func_flags(0X13DF2,0x4000);
	set_func_cmt(0X13DF2,	"identical to sub_119d4 from start.exe", 0);
	add_func    (0X13E87,0X13EDC);
	set_func_flags(0X13E87,0x4400);
	set_func_cmt(0X13E87,	"identical to sub_11a69 in start.exe", 0);
	add_func    (0X13EDC,0X13EE3);
	set_func_flags(0X13EDC,0x4400);
	add_func    (0X13EE3,0X13F02);
	set_func_flags(0X13EE3,0x400);
	set_frame_size(0X13EE3, 0, 0, 0);
	add_func    (0X13F72,0X151F9);
	set_func_flags(0X13F72,0x410);
	set_frame_size(0X13F72, 0X42, 2, 0);
	set_name(0X1403A, "keyMinus_1403A", SN_LOCAL);
	set_name(0X14057, "keyEqual_14057", SN_LOCAL);
	set_name(0X14086, "keyA_14086", SN_LOCAL);
	set_name(0X14097, "keyShiftEqual_14097", SN_LOCAL);
	set_name(0X140A7, "keyShiftMinus_140A7", SN_LOCAL);
	set_name(0X140C0, "keyB_140C0", SN_LOCAL);
	set_name(0X140F1, "keyAltJ_140F1", SN_LOCAL);
	set_name(0X14106, "keyAltQ_14106", SN_LOCAL);
	set_name(0X14118, "keyAltB_14118", SN_LOCAL);
	set_name(0X141E4, "keyAltP_141E4", SN_LOCAL);
	set_name(0X141EB, "switch_141EB", SN_LOCAL);
	set_name(0X1423E, "switchBreak_1423E", SN_LOCAL);
	add_func    (0X151F9,0X15237);
	set_func_flags(0X151F9,0x4410);
	set_frame_size(0X151F9, 0X4, 2, 0);
	add_func    (0X15237,0X15411);
	set_func_flags(0X15237,0x4410);
	set_frame_size(0X15237, 0X2, 2, 0);
	add_func    (0X15411,0X1543B);
	set_func_flags(0X15411,0x4410);
	set_frame_size(0X15411, 0, 2, 0);
	add_func    (0X1543B,0X154B7);
	set_func_flags(0X1543B,0x4410);
	set_frame_size(0X1543B, 0XE, 2, 0);
	add_func    (0X154B7,0X15540);
	set_func_flags(0X154B7,0x4410);
	set_frame_size(0X154B7, 0XA, 2, 0);
	add_func    (0X15540,0X15557);
	set_func_flags(0X15540,0x4410);
	set_frame_size(0X15540, 0, 2, 0);
	add_func    (0X15557,0X155AB);
	set_func_flags(0X15557,0x4410);
	set_frame_size(0X15557, 0X4, 2, 0);
	add_func    (0X155AB,0X15FDB);
	set_func_flags(0X155AB,0x410);
	set_frame_size(0X155AB, 0X10, 2, 0);
	set_name(0X15616, "case44_15616", SN_LOCAL);
	set_name(0X1562B, "case41_1562B", SN_LOCAL);
	set_name(0X15647, "case43_15647", SN_LOCAL);
	set_name(0X15661, "case42_15661", SN_LOCAL);
	set_name(0X1567B, "case84_1567B", SN_LOCAL);
	set_name(0X156D4, "case85_156D4", SN_LOCAL);
	set_name(0X15765, "case87_15765", SN_LOCAL);
	set_name(0X157D5, "case88_89_8b_157D5", SN_LOCAL);
	set_name(0X157F6, "else_157F6", SN_LOCAL);
	set_name(0X15806, "endif_15806", SN_LOCAL);
	set_name(0X15808, "else_15808", SN_LOCAL);
	set_name(0X15815, "endif_15815", SN_LOCAL);
	set_name(0X15877, "else_15877", SN_LOCAL);
	set_name(0X158A2, "else_158A2", SN_LOCAL);
	set_name(0X158D9, "endif_158D9", SN_LOCAL);
	set_name(0X158DB, "else_158DB", SN_LOCAL);
	set_name(0X15943, "endif_15943", SN_LOCAL);
	set_name(0X15AF5, "else_15AF5", SN_LOCAL);
	set_name(0X15B8C, "break_15B8C", SN_LOCAL);
	set_name(0X15B8F, "case8c_15B8F", SN_LOCAL);
	set_name(0X15BE0, "switch_15BE0", SN_LOCAL);
	set_name(0X15C13, "caseMore84_15C13", SN_LOCAL);
	set_name(0X15C23, "caseTable_15C23", SN_LOCAL);
	set_name(0X15C33, "switchBreak_15C33", SN_LOCAL);
	set_name(0X15C4A, "cond_15C4A", SN_LOCAL);
	set_name(0X15C63, "else_15C63", SN_LOCAL);
	set_name(0X15C7E, "else_15C7E", SN_LOCAL);
	set_name(0X15C96, "endif_15C96", SN_LOCAL);
	set_name(0X15CC3, "cond_15CC3", SN_LOCAL);
	set_name(0X15D96, "endif_15D96", SN_LOCAL);
	add_func    (0X15FDB,0X1606C);
	set_func_flags(0X15FDB,0x4410);
	set_frame_size(0X15FDB, 0, 2, 0);
	add_func    (0X1606C,0X160D3);
	set_func_flags(0X1606C,0x4410);
	set_frame_size(0X1606C, 0, 2, 0);
	add_func    (0X160D3,0X1613B);
	set_func_flags(0X160D3,0x4410);
	set_frame_size(0X160D3, 0, 2, 0);
	add_func    (0X1613B,0X16172);
	set_func_flags(0X1613B,0x410);
	set_frame_size(0X1613B, 0X2, 2, 0);
	add_func    (0X16172,0X16346);
	set_func_flags(0X16172,0x4410);
	set_frame_size(0X16172, 0X10, 2, 0);
	add_func    (0X16346,0X1660D);
	set_func_flags(0X16346,0x4410);
	set_frame_size(0X16346, 0X2E, 2, 0);
	add_func    (0X1660E,0X166BE);
	set_func_flags(0X1660E,0x4410);
	set_frame_size(0X1660E, 0X10, 2, 0);
	add_func    (0X166BE,0X16741);
	set_func_flags(0X166BE,0x4410);
	set_frame_size(0X166BE, 0X4, 2, 0);
	add_func    (0X16742,0X167B4);
	set_func_flags(0X16742,0x4410);
	set_frame_size(0X16742, 0X8, 2, 0);
	add_func    (0X167B4,0X17594);
	set_func_flags(0X167B4,0x4410);
	set_frame_size(0X167B4, 0X44, 2, 0);
	add_func    (0X17594,0X17839);
	set_func_flags(0X17594,0x4410);
	set_frame_size(0X17594, 0X24, 2, 0);
	add_func    (0X1783A,0X179ED);
	set_func_flags(0X1783A,0x4410);
	set_frame_size(0X1783A, 0X6, 2, 0);
	add_func    (0X179EE,0X185BE);
	set_func_flags(0X179EE,0x4410);
	set_frame_size(0X179EE, 0X3A, 2, 0);
	add_func    (0X185BE,0X186F8);
	set_func_flags(0X185BE,0x4410);
	set_frame_size(0X185BE, 0XA, 2, 0);
	add_func    (0X186F8,0X187E9);
	set_func_flags(0X186F8,0x410);
	set_frame_size(0X186F8, 0X4, 2, 0);
	add_func    (0X187EA,0X189A9);
	set_func_flags(0X187EA,0x410);
	set_frame_size(0X187EA, 0X8, 2, 0);
	add_func    (0X189AA,0X18A44);
	set_func_flags(0X189AA,0x4410);
	set_frame_size(0X189AA, 0X2, 2, 0);
	add_func    (0X18A44,0X18AA5);
	set_func_flags(0X18A44,0x4410);
	set_frame_size(0X18A44, 0X2, 2, 0);
	add_func    (0X18AA6,0X18DF4);
	set_func_flags(0X18AA6,0x4410);
	set_frame_size(0X18AA6, 0XC, 2, 0);
	add_func    (0X18DF4,0X18E37);
	set_func_flags(0X18DF4,0x4410);
	set_frame_size(0X18DF4, 0, 2, 0);
	add_func    (0X18E38,0X18E50);
	set_func_flags(0X18E38,0x4410);
	set_frame_size(0X18E38, 0, 2, 0);
	add_func    (0X18E50,0X19485);
	set_func_flags(0X18E50,0x410);
	set_frame_size(0X18E50, 0X1E, 2, 0);
	set_name(0X18E96, "cond_18E96", SN_LOCAL);
	set_name(0X19240, "next_19240", SN_LOCAL);
	set_name(0X19244, "cond_19244", SN_LOCAL);
	set_name(0X1929F, "break_1929F", SN_LOCAL);
	set_name(0X193CF, "endif_193CF", SN_LOCAL);
	set_name(0X193E4, "check3370e_193E4", SN_LOCAL);
	set_name(0X193EB, "cond_193EB", SN_LOCAL);
	set_name(0X1943F, "endif_1943F", SN_LOCAL);
	add_func    (0X194D0,0X1957A);
	set_func_flags(0X194D0,0x4410);
	set_frame_size(0X194D0, 0X14, 2, 0);
	add_func    (0X1957A,0X19595);
	set_func_flags(0X1957A,0x4410);
	set_frame_size(0X1957A, 0X2, 2, 0);
	add_func    (0X19595,0X195C9);
	set_func_flags(0X19595,0x4410);
	set_frame_size(0X19595, 0, 2, 0);
	add_func    (0X195C9,0X19875);
	set_func_flags(0X195C9,0x4410);
	set_frame_size(0X195C9, 0X12, 2, 0);
	add_func    (0X19875,0X198B4);
	set_func_flags(0X19875,0x4410);
	set_frame_size(0X19875, 0, 2, 0);
	add_func    (0X198B4,0X198FA);
	set_func_flags(0X198B4,0x4410);
	set_frame_size(0X198B4, 0, 2, 0);
	add_func    (0X198FA,0X19915);
	set_func_flags(0X198FA,0x4410);
	set_frame_size(0X198FA, 0, 2, 0);
	add_func    (0X19915,0X1993A);
	set_func_flags(0X19915,0x4410);
	set_frame_size(0X19915, 0, 2, 0);
	add_func    (0X1993A,0X199EC);
	set_func_flags(0X1993A,0x4410);
	set_frame_size(0X1993A, 0X4, 2, 0);
	add_func    (0X199EC,0X19A4D);
	set_func_flags(0X199EC,0x4410);
	set_frame_size(0X199EC, 0X2, 2, 0);
	add_func    (0X19A4D,0X19ADB);
	set_func_flags(0X19A4D,0x4410);
	set_frame_size(0X19A4D, 0X6, 2, 0);
	add_func    (0X19ADB,0X19B98);
	set_func_flags(0X19ADB,0x4410);
	set_frame_size(0X19ADB, 0XE, 2, 0);
	add_func    (0X19B98,0X19BE1);
	set_func_flags(0X19B98,0x410);
	set_frame_size(0X19B98, 0, 2, 0);
	add_func    (0X19BE1,0X19C0C);
	set_func_flags(0X19BE1,0x410);
	set_frame_size(0X19BE1, 0, 2, 0);
	add_func    (0X19C0C,0X19C84);
	set_func_flags(0X19C0C,0x410);
	set_frame_size(0X19C0C, 0X4, 2, 0);
	add_func    (0X19C84,0X19D86);
	set_func_flags(0X19C84,0x410);
	set_frame_size(0X19C84, 0X4, 2, 0);
	add_func    (0X19D86,0X19DB0);
	set_func_flags(0X19D86,0x410);
	set_frame_size(0X19D86, 0, 2, 0);
	add_func    (0X19DB0,0X19E44);
	set_func_flags(0X19DB0,0x410);
	set_frame_size(0X19DB0, 0, 2, 0);
	add_func    (0X19E44,0X19E5D);
	set_func_flags(0X19E44,0x4410);
	SetType(0X19E44, "void __cdecl sub_19E44(int);");
	set_frame_size(0X19E44, 0, 2, 0);
	add_func    (0X19E5D,0X19E94);
	set_func_flags(0X19E5D,0x4410);
	SetType(0X19E5D, "void __cdecl DrawHUDElement(int, int, int, int);");
	set_frame_size(0X19E5D, 0, 2, 0);
	add_func    (0X19E94,0X19EB6);
	set_func_flags(0X19E94,0x410);
	set_frame_size(0X19E94, 0, 2, 0);
	add_func    (0X19EB6,0X19F47);
	set_func_flags(0X19EB6,0x4410);
	set_frame_size(0X19EB6, 0X2, 2, 0);
	add_func    (0X19FAD,0X19FCC);
	set_func_flags(0X19FAD,0x4410);
	SetType(0X19FAD, "int __cdecl DisplayMessageTop(int, char *);");
	set_frame_size(0X19FAD, 0, 2, 0);
	add_func    (0X19FCC,0X1A030);
	set_func_flags(0X19FCC,0x4410);
	set_frame_size(0X19FCC, 0, 2, 0);
	add_func    (0X1A030,0X1A0CB);
	set_func_flags(0X1A030,0x4410);
	SetType(0X1A030, "int __cdecl DisplayMessageBottom(int, char *);");
	set_frame_size(0X1A030, 0X6, 2, 0);
	add_func    (0X1A0CB,0X1A0FE);
	set_func_flags(0X1A0CB,0x4410);
	SetType(0X1A0CB, "int __cdecl drawSomeStrings(char *, int, int, int);");
	set_frame_size(0X1A0CB, 0, 2, 0);
	add_func    (0X1A0FE,0X1A13A);
	set_func_flags(0X1A0FE,0x410);
	set_frame_size(0X1A0FE, 0, 2, 0);
	add_func    (0X1A13A,0X1A183);
	set_func_flags(0X1A13A,0x4410);
	SetType(0X1A13A, "int __cdecl drawString(int *, char *, int, int, int);");
	set_frame_size(0X1A13A, 0, 2, 0);
	add_func    (0X1A183,0X1A1B1);
	set_func_flags(0X1A183,0x410);
	set_frame_size(0X1A183, 0X14, 2, 0);
	add_func    (0X1A1B1,0X1A1E4);
	set_func_flags(0X1A1B1,0x4410);
	set_frame_size(0X1A1B1, 0, 2, 0);
	add_func    (0X1A1E4,0X1A204);
	set_func_flags(0X1A1E4,0x4410);
	set_frame_size(0X1A1E4, 0, 2, 0);
	add_func    (0X1A204,0X1A224);
	set_func_flags(0X1A204,0x4410);
	set_frame_size(0X1A204, 0, 2, 0);
	add_func    (0X1A224,0X1A25B);
	set_func_flags(0X1A224,0x4410);
	set_frame_size(0X1A224, 0X2, 2, 0);
	add_func    (0X1A25C,0X1A73F);
	set_func_flags(0X1A25C,0x410);
	set_frame_size(0X1A25C, 0X18, 2, 0);
	add_func    (0X1A740,0X1A7C4);
	set_func_flags(0X1A740,0x410);
	set_frame_size(0X1A740, 0X2, 2, 0);
	add_func    (0X1A7C4,0X1A871);
	set_func_flags(0X1A7C4,0x4410);
	set_frame_size(0X1A7C4, 0X8, 2, 0);
	add_func    (0X1A872,0X1A8C8);
	set_func_flags(0X1A872,0x410);
	set_frame_size(0X1A872, 0, 2, 0);
	add_func    (0X1A8C8,0X1A934);
	set_func_flags(0X1A8C8,0x410);
	set_frame_size(0X1A8C8, 0, 2, 0);
	add_func    (0X1A934,0X1A962);
	set_func_flags(0X1A934,0x400);
	set_frame_size(0X1A934, 0, 0, 0);
	add_func    (0X1A962,0X1A9BC);
	set_func_flags(0X1A962,0x400);
	set_frame_size(0X1A962, 0, 0, 0);
	add_func    (0X1A9BC,0X1A9F8);
	set_func_flags(0X1A9BC,0x400);
	set_frame_size(0X1A9BC, 0, 0, 0);
	add_func    (0X1A9F8,0X1B147);
	set_func_flags(0X1A9F8,0x4410);
	set_frame_size(0X1A9F8, 0X36, 2, 0);
	add_func    (0X1B147,0X1C1B9);
	set_func_flags(0X1B147,0x4410);
	set_frame_size(0X1B147, 0X38, 2, 0);
	add_func    (0X1C1B9,0X1C2F8);
	set_func_flags(0X1C1B9,0x4410);
	set_frame_size(0X1C1B9, 0XC, 2, 0);
	add_func    (0X1C2F8,0X1C371);
	set_func_flags(0X1C2F8,0x4410);
	set_frame_size(0X1C2F8, 0X4, 2, 0);
	add_func    (0X1C371,0X1C40B);
	set_func_flags(0X1C371,0x4410);
	SetType(0X1C371, "int __cdecl sub_1C371(char *, int);");
	set_frame_size(0X1C371, 0, 2, 0);
	add_func    (0X1C40B,0X1C488);
	set_func_flags(0X1C40B,0x4410);
	set_frame_size(0X1C40B, 0XA, 2, 0);
	add_func    (0X1C488,0X1C661);
	set_func_flags(0X1C488,0x4410);
	set_frame_size(0X1C488, 0X12, 2, 0);
	add_func    (0X1C661,0X1C6BE);
	set_func_flags(0X1C661,0x4410);
	set_frame_size(0X1C661, 0X4, 2, 0);
	add_func    (0X1C6BE,0X1C7A2);
	set_func_flags(0X1C6BE,0x4410);
	set_frame_size(0X1C6BE, 0X4, 2, 0);
	add_func    (0X1C7A2,0X1C7C6);
	set_func_flags(0X1C7A2,0x4410);
	set_frame_size(0X1C7A2, 0X2, 2, 0);
	add_func    (0X1C7C6,0X1C7EA);
	set_func_flags(0X1C7C6,0x4410);
	set_frame_size(0X1C7C6, 0X2, 2, 0);
	add_func    (0X1C7EA,0X1C82D);
	set_func_flags(0X1C7EA,0x4410);
	set_frame_size(0X1C7EA, 0X4, 2, 0);
	add_func    (0X1C82D,0X1C864);
	set_func_flags(0X1C82D,0x4410);
	set_frame_size(0X1C82D, 0, 2, 0);
	add_func    (0X1C864,0X1C8A4);
	set_func_flags(0X1C864,0x4410);
	set_frame_size(0X1C864, 0, 2, 0);
	add_func    (0X1C8A4,0X1C8DE);
	set_func_flags(0X1C8A4,0x4410);
	set_frame_size(0X1C8A4, 0X2, 2, 0);
	add_func    (0X1C8DE,0X1C9D1);
	set_func_flags(0X1C8DE,0x4410);
	set_frame_size(0X1C8DE, 0X10, 2, 0);
	set_name(0X1C980, "again_1C980", SN_LOCAL);
	set_name(0X1C9C0, "cond_1C9C0", SN_LOCAL);
	add_func    (0X1C9D2,0X1CB42);
	set_func_flags(0X1C9D2,0x4410);
	set_frame_size(0X1C9D2, 0X10, 2, 0);
	add_func    (0X1CB42,0X1CF31);
	set_func_flags(0X1CB42,0x4410);
	set_frame_size(0X1CB42, 0X20, 2, 0);
	add_func    (0X1CF32,0X1CF64);
	set_func_flags(0X1CF32,0x4410);
	set_frame_size(0X1CF32, 0, 2, 0);
	add_func    (0X1CF64,0X1CF8E);
	set_func_flags(0X1CF64,0x4410);
	set_frame_size(0X1CF64, 0, 2, 0);
	add_func    (0X1CF8E,0X1CFA6);
	set_func_flags(0X1CF8E,0x4410);
	set_frame_size(0X1CF8E, 0, 2, 0);
	add_func    (0X1CFA6,0X1D008);
	set_func_flags(0X1CFA6,0x4410);
	set_frame_size(0X1CFA6, 0X4, 2, 0);
	add_func    (0X1D008,0X1D178);
	set_func_flags(0X1D008,0x4410);
	set_frame_size(0X1D008, 0X10, 2, 0);
	add_func    (0X1D178,0X1D190);
	set_func_flags(0X1D178,0x4410);
	SetType(0X1D178, "int __cdecl sinX(int, int);");
	set_frame_size(0X1D178, 0, 2, 0);
	add_func    (0X1D190,0X1D1A5);
	set_func_flags(0X1D190,0x4410);
	set_frame_size(0X1D190, 0, 2, 0);
	add_func    (0X1D1C8,0X1D1E7);
	set_func_flags(0X1D1C8,0x4410);
	set_frame_size(0X1D1C8, 0, 2, 0);
	add_func    (0X1D1E8,0X1D200);
	set_func_flags(0X1D1E8,0x4400);
	add_func    (0X1D200,0X1D21E);
	set_func_flags(0X1D200,0x4410);
	set_frame_size(0X1D200, 0, 2, 0);
	add_func    (0X1D21E,0X1D25F);
	set_func_flags(0X1D21E,0x4410);
	set_frame_size(0X1D21E, 0X2, 2, 0);
	add_func    (0X1D260,0X1D9DB);
	set_func_flags(0X1D260,0x4410);
	set_frame_size(0X1D260, 0X12, 2, 0);
	set_name(0X1D27E, "keyAltY_1D27E", SN_LOCAL);
	set_name(0X1D284, "keyR_1D284", SN_LOCAL);
	set_name(0X1D2F7, "keyZ_1D2F7", SN_LOCAL);
	set_name(0X1D2FD, "keyX_1D2FD", SN_LOCAL);
	set_name(0X1D303, "keyF_1D303", SN_LOCAL);
	set_name(0X1D310, "keyC_1D310", SN_LOCAL);
	set_name(0X1D31D, "keyL_1D31D", SN_LOCAL);
	set_name(0X1D34C, "keyAltD_1D34C", SN_LOCAL);
	set_name(0X1D3A2, "keyAltK_1D3A2", SN_LOCAL);
	set_name(0X1D3EC, "keyAltM_1D3EC", SN_LOCAL);
	set_name(0X1D424, "keyAltF_1D424", SN_LOCAL);
	set_name(0X1D45C, "keyAltA_1D45C", SN_LOCAL);
	set_name(0X1D480, "keyAltV_1D480", SN_LOCAL);
	set_name(0X1D4CC, "keyAltN_1D4CC", SN_LOCAL);
	set_name(0X1D4DE, "keyAltT_1D4DE", SN_LOCAL);
	set_name(0X1D4F7, "keyS_1D4F7", SN_LOCAL);
	set_name(0X1D516, "keyM_1D516", SN_LOCAL);
	set_name(0X1D530, "keyG_1D530", SN_LOCAL);
	set_name(0X1D54F, "keyD_1D54F", SN_LOCAL);
	set_name(0X1D5AF, "keyW_1D5AF", SN_LOCAL);
	set_name(0X1D605, "keyP_1D605", SN_LOCAL);
	set_name(0X1D639, "keyT_1D639", SN_LOCAL);
	set_name(0X1D641, "keyBkspc_1D641", SN_LOCAL);
	set_name(0X1D64A, "keyEnter_1D64A", SN_LOCAL);
	set_name(0X1D653, "keySpace_1D653", SN_LOCAL);
	set_name(0X1D65C, "keyF1_1D65C", SN_LOCAL);
	set_name(0X1D665, "keyF2_1D665", SN_LOCAL);
	set_name(0X1D66E, "keyF3_1D66E", SN_LOCAL);
	set_name(0X1D677, "keyF4_1D677", SN_LOCAL);
	set_name(0X1D680, "keyF5_1D680", SN_LOCAL);
	set_name(0X1D689, "keyF6_1D689", SN_LOCAL);
	set_name(0X1D692, "keyF7_1D692", SN_LOCAL);
	set_name(0X1D69B, "keyF8_1D69B", SN_LOCAL);
	set_name(0X1D6A4, "keyF9_1D6A4", SN_LOCAL);
	set_name(0X1D6AD, "keyF10_1D6AD", SN_LOCAL);
	set_name(0X1D6B6, "keyEsc_1D6B6", SN_LOCAL);
	add_func    (0X1D9DB,0X1DA35);
	set_func_flags(0X1D9DB,0x4410);
	set_frame_size(0X1D9DB, 0, 2, 0);
	add_func    (0X1DA35,0X1DA5F);
	set_func_flags(0X1DA35,0x410);
	set_frame_size(0X1DA35, 0, 2, 0);
	add_func    (0X1DA5F,0X1DA8D);
	set_func_flags(0X1DA5F,0x4410);
	set_frame_size(0X1DA5F, 0, 2, 0);
	add_func    (0X1DA8D,0X1DAAE);
	set_func_flags(0X1DA8D,0x410);
	set_frame_size(0X1DA8D, 0, 2, 0);
	add_func    (0X1DAAE,0X1DB2B);
	set_func_flags(0X1DAAE,0x4410);
	set_frame_size(0X1DAAE, 0, 2, 0);
	add_func    (0X1DB2B,0X1DB9C);
	set_func_flags(0X1DB2B,0x4410);
	set_frame_size(0X1DB2B, 0X2, 2, 0);
	add_func    (0X1DB9C,0X1DBB7);
	set_func_flags(0X1DB9C,0x4410);
	set_frame_size(0X1DB9C, 0, 2, 0);
	add_func    (0X1DBE0,0X1DC00);
	set_func_flags(0X1DBE0,0x4410);
	set_frame_size(0X1DBE0, 0, 2, 0);
	add_func    (0X1DD4C,0X1DD5D);
	set_func_flags(0X1DD4C,0x4410);
	SetType(0X1DD4C, "int __cdecl openFileWrapper(char *, int);");
	set_frame_size(0X1DD4C, 0, 2, 0);
	define_local_var(0X1DD4C, 0X1DD5D, "[bp+0X4]", "path");
	define_local_var(0X1DD4C, 0X1DD5D, "[bp+0X6]", "mode");
	add_func    (0X1DD5E,0X1DD6F);
	set_func_flags(0X1DD5E,0x4410);
	set_frame_size(0X1DD5E, 0, 2, 0);
	add_func    (0X1DD70,0X1DD7E);
	set_func_flags(0X1DD70,0x4410);
	set_frame_size(0X1DD70, 0, 2, 0);
	add_func    (0X1DD7E,0X1DD92);
	set_func_flags(0X1DD7E,0x4410);
	set_frame_size(0X1DD7E, 0, 2, 0);
	add_func    (0X1DD92,0X1DDA9);
	set_func_flags(0X1DD92,0x4410);
	set_frame_size(0X1DD92, 0, 2, 0);
	add_func    (0X1DDAA,0X1DDC4);
	set_func_flags(0X1DDAA,0x4410);
	set_frame_size(0X1DDAA, 0, 2, 0);
	add_func    (0X1DDC4,0X1DE1B);
	set_func_flags(0X1DDC4,0x4410);
	SetType(0X1DDC4, "int __cdecl openFile(char *, int);");
	set_frame_size(0X1DDC4, 0X4, 2, 0);
	define_local_var(0X1DDC4, 0X1DE1B, "[bp+0X4]", "path");
	define_local_var(0X1DDC4, 0X1DE1B, "[bp+0X6]", "mode");
	add_func    (0X1DE1B,0X1DE72);
	set_func_flags(0X1DE1B,0x4410);
	set_frame_size(0X1DE1B, 0X4, 2, 0);
	add_func    (0X1DE72,0X1DE93);
	set_func_flags(0X1DE72,0x4010);
	set_frame_size(0X1DE72, 0X4, 2, 0);
	add_func    (0X1DE94,0X1DEBF);
	set_func_flags(0X1DE94,0x4410);
	set_frame_size(0X1DE94, 0X4, 2, 0);
	add_func    (0X1DEBF,0X1DEED);
	set_func_flags(0X1DEBF,0x4010);
	set_frame_size(0X1DEBF, 0X4, 2, 0);
	add_func    (0X1DF16,0X1DF37);
	set_func_flags(0X1DF16,0x4000);
	add_func    (0X1DF4F,0X1DFBC);
	set_func_flags(0X1DF4F,0x4410);
	set_frame_size(0X1DF4F, 0X4, 2, 0);
	add_func    (0X1DFBC,0X1DFF5);
	set_func_flags(0X1DFBC,0x5410);
	set_frame_size(0X1DFBC, 0X6, 2, 0);
	add_func    (0X1E0AA,0X1E11C);
	set_func_flags(0X1E0AA,0x410);
	set_func_cmt(0X1E0AA,	"not exactly identical to start.exe", 0);
	set_frame_size(0X1E0AA, 0X4, 2, 0);
	add_func    (0X1E11C,0X1E1F8);
	set_func_flags(0X1E11C,0x410);
	set_frame_size(0X1E11C, 0X4, 2, 0);
	add_func    (0X1E1F8,0X1E260);
	set_func_flags(0X1E1F8,0x410);
	set_frame_size(0X1E1F8, 0X4, 2, 0);
	add_func    (0X1E260,0X1E261);
	set_func_flags(0X1E260,0x4400);
	add_func    (0X1E262,0X1E28C);
	set_func_flags(0X1E262,0x4400);
	add_func    (0X1E28C,0X1E2D3);
	set_func_flags(0X1E28C,0x400);
	add_func    (0X1E2D3,0X1E309);
	set_func_flags(0X1E2D3,0x4400);
	add_func    (0X1E309,0X1E382);
	set_func_flags(0X1E309,0x4400);
	add_func    (0X1E382,0X1E431);
	set_func_flags(0X1E382,0x400);
	add_func    (0X1E432,0X1E4E4);
	set_func_flags(0X1E432,0x405);
	add_func    (0X1E4E4,0X1E5A8);
	set_func_flags(0X1E4E4,0x4404);
	add_func    (0X1E5A8,0X1E5BF);
	set_func_flags(0X1E5A8,0x4415);
	SetType(0X1E5A8, "void __cdecl exit(int);");
	set_frame_size(0X1E5A8, 0, 2, 0);
	add_func    (0X1E5BF,0X1E604);
	set_func_flags(0X1E5BF,0x4415);
	SetType(0X1E5BF, "void __cdecl _exit(int);");
	set_frame_size(0X1E5BF, 0, 2, 0);
	add_func    (0X1E604,0X1E631);
	set_func_flags(0X1E604,0x4404);
	add_func    (0X1E631,0X1E640);
	set_func_flags(0X1E631,0x4404);
	add_func    (0X1E640,0X1E653);
	set_func_flags(0X1E640,0x4404);
	add_func    (0X1E654,0X1E66A);
	set_func_flags(0X1E654,0x404);
	add_func    (0X1E66A,0X1E724);
	set_func_flags(0X1E66A,0x4414);
	SetType(0X1E66A, "int __cdecl fclose(FILE *);");
	set_frame_size(0X1E66A, 0X14, 2, 0);
	add_func    (0X1E724,0X1E74B);
	set_func_flags(0X1E724,0x4414);
	SetType(0X1E724, "FILE *__cdecl fopen(const char *, const char *);");
	set_frame_size(0X1E724, 0X4, 2, 0);
	add_func    (0X1E74C,0X1E932);
	set_func_flags(0X1E74C,0x4414);
	SetType(0X1E74C, "size_t __cdecl fread(void *, size_t, size_t, FILE *);");
	set_frame_size(0X1E74C, 0XE, 2, 0);
	add_func    (0X1E932,0X1E9AC);
	set_func_flags(0X1E932,0x4414);
	SetType(0X1E932, "__int32 __cdecl lseek(int, __int32, int);");
	set_frame_size(0X1E932, 0X4, 2, 0);
	add_func    (0X1E9AC,0X1E9EB);
	set_func_flags(0X1E9AC,0x4414);
	SetType(0X1E9AC, "char *__cdecl strcat(char *, const char *);");
	set_frame_size(0X1E9AC, 0, 2, 0);
	add_func    (0X1E9EC,0X1EA1E);
	set_func_flags(0X1E9EC,0x4414);
	SetType(0X1E9EC, "char *__cdecl strcpy(char *, const char *);");
	set_frame_size(0X1E9EC, 0, 2, 0);
	add_func    (0X1EA1E,0X1EA39);
	set_func_flags(0X1EA1E,0x4414);
	SetType(0X1EA1E, "size_t __cdecl strlen(const char *);");
	set_frame_size(0X1EA1E, 0, 2, 0);
	add_func    (0X1EA3A,0X1EA55);
	set_func_flags(0X1EA3A,0x4414);
	SetType(0X1EA3A, "char *__cdecl itoa(int, char *, int);");
	set_frame_size(0X1EA3A, 0X4, 2, 0);
	add_func    (0X1EA56,0X1EA66);
	set_func_flags(0X1EA56,0x4404);
	SetType(0X1EA56, "int kbhit(void);");
	add_func    (0X1EA66,0X1EA6A);
	set_func_flags(0X1EA66,0x4404);
	SetType(0X1EA66, "int getche(void);");
	add_func    (0X1EA6A,0X1EA81);
	set_func_flags(0X1EA6A,0x4404);
	SetType(0X1EA6A, "int getch(void);");
	add_func    (0X1EA82,0X1EB00);
	set_func_flags(0X1EA82,0x4414);
	SetType(0X1EA82, "int __cdecl int86(int, union REGS *, union REGS *);");
	set_frame_size(0X1EA82, 0XE, 2, 0);
	add_func    (0X1EB00,0X1EB1E);
	set_func_flags(0X1EB00,0x4414);
	SetType(0X1EB00, "void __cdecl movedata(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);");
	set_frame_size(0X1EB00, 0X4, 2, 0);
	add_func    (0X1EB1E,0X1EB33);
	set_func_flags(0X1EB1E,0x4414);
	SetType(0X1EB1E, "void __cdecl segread(struct SREGS *);");
	set_frame_size(0X1EB1E, 0, 2, 0);
	add_func    (0X1EB34,0X1EB42);
	set_func_flags(0X1EB34,0x4414);
	SetType(0X1EB34, "int __cdecl outp(unsigned int, int);");
	set_frame_size(0X1EB34, 0, 2, 0);
	add_func    (0X1EB42,0X1EB64);
	set_func_flags(0X1EB42,0x4414);
	SetType(0X1EB42, "char *__cdecl strupr(char *);");
	set_frame_size(0X1EB42, 0, 2, 0);
	add_func    (0X1EB64,0X1EB90);
	set_func_flags(0X1EB64,0x4414);
	SetType(0X1EB64, "void *__cdecl memcpy(void *, const void *, size_t);");
	set_frame_size(0X1EB64, 0, 2, 0);
	add_func    (0X1EB90,0X1EBA5);
	set_func_flags(0X1EB90,0x4414);
	SetType(0X1EB90, "int __cdecl abs(int);");
	set_frame_size(0X1EB90, 0, 2, 0);
	add_func    (0X1EBA6,0X1EBC7);
	set_func_flags(0X1EBA6,0x4414);
	SetType(0X1EBA6, "__int32 __cdecl labs(__int32);");
	set_frame_size(0X1EBA6, 0, 2, 0);
	add_func    (0X1EBC8,0X1EBD9);
	set_func_flags(0X1EBC8,0x4414);
	SetType(0X1EBC8, "void __cdecl srand(unsigned int);");
	set_frame_size(0X1EBC8, 0, 2, 0);
	add_func    (0X1EBDA,0X1EC00);
	set_func_flags(0X1EBDA,0x4404);
	SetType(0X1EBDA, "int rand(void);");
	add_func    (0X1EC00,0X1EC14);
	set_func_flags(0X1EC00,0x4414);
	SetType(0X1EC00, "unsigned int __cdecl _bios_keybrd(unsigned int);");
	set_frame_size(0X1EC00, 0, 2, 0);
	add_func    (0X1EC14,0X1ECB0);
	set_func_flags(0X1EC14,0x4414);
	SetType(0X1EC14, "__int32 __stdcall _aNldiv(__int32, __int32);");
	set_frame_size(0X1EC14, 0X6, 2, 0X8);
	add_func    (0X1ECB0,0X1ECE4);
	set_func_flags(0X1ECB0,0x4414);
	SetType(0X1ECB0, "__int32 __stdcall _aNlmul(__int32, __int32);");
	set_frame_size(0X1ECB0, 0, 2, 0X8);
	add_func    (0X1ECE4,0X1ED03);
	set_func_flags(0X1ECE4,0x4414);
	set_func_cmt(0X1ECE4,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X1ECE4, 0, 2, 0X4);
	add_func    (0X1ED04,0X1ED23);
	set_func_flags(0X1ED04,0x4414);
	set_func_cmt(0X1ED04,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X1ED04, 0, 2, 0X4);
	add_func    (0X1ED24,0X1ED85);
	set_func_flags(0X1ED24,0x4414);
	set_frame_size(0X1ED24, 0X4, 2, 0X8);
	add_func    (0X1ED86,0X1EDA6);
	set_func_flags(0X1ED86,0x4414);
	set_frame_size(0X1ED86, 0, 2, 0);
	add_func    (0X1EDAC,0X1EDCE);
	set_func_flags(0X1EDAC,0x4404);
	set_frame_size(0X1EDAC, 0X2, 0, 0);
	add_func    (0X1EDCE,0X1EDF9);
	set_func_flags(0X1EDCE,0x4414);
	set_frame_size(0X1EDCE, 0X4, 2, 0X2);
	add_func    (0X1EDF9,0X1EE22);
	set_func_flags(0X1EDF9,0x4414);
	set_frame_size(0X1EDF9, 0X2, 2, 0X2);
	add_func    (0X1EE42,0X1EE48);
	set_func_flags(0X1EE42,0x4404);
	add_func    (0X1EE48,0X1EE76);
	set_func_flags(0X1EE48,0x4000);
	add_func    (0X1EE76,0X1EF36);
	set_func_flags(0X1EE76,0x4414);
	SetType(0X1EE76, "int __cdecl _filbuf(FILE *);");
	set_frame_size(0X1EE76, 0X4, 2, 0);
	add_func    (0X1EF36,0X1EF63);
	set_func_flags(0X1EF36,0x4414);
	set_frame_size(0X1EF36, 0X2, 2, 0);
	add_func    (0X1EF64,0X1F05C);
	set_func_flags(0X1EF64,0x4414);
	SetType(0X1EF64, "int __cdecl _openfile(char *, int);");
	set_frame_size(0X1EF64, 0XE, 2, 0);
	add_func    (0X1F05C,0X1F0CA);
	set_func_flags(0X1F05C,0x4414);
	SetType(0X1F05C, "int __cdecl fflush(FILE *);");
	set_frame_size(0X1F05C, 0X8, 2, 0);
	add_func    (0X1F0CA,0X1F104);
	set_func_flags(0X1F0CA,0x4414);
	set_frame_size(0X1F0CA, 0X4, 2, 0);
	add_func    (0X1F104,0X1F124);
	set_func_flags(0X1F104,0x4414);
	SetType(0X1F104, "int __cdecl close(int);");
	set_frame_size(0X1F104, 0, 2, 0);
	add_func    (0X1F124,0X1F201);
	set_func_flags(0X1F124,0x4414);
	SetType(0X1F124, "int __cdecl read(int, void *, unsigned int);");
	set_frame_size(0X1F124, 0X2, 2, 0);
	add_func    (0X1F262,0X1F26F);
	set_func_flags(0X1F262,0x4414);
	SetType(0X1F262, "int __cdecl remove(const char *);");
	set_frame_size(0X1F262, 0, 2, 0);
	add_func    (0X1F270,0X1F27B);
	set_func_flags(0X1F270,0x4404);
	add_func    (0X1F27C,0X1F287);
	set_func_flags(0X1F27C,0x4404);
	add_func    (0X1F288,0X1F2F4);
	set_func_flags(0X1F288,0x4414);
	set_frame_size(0X1F288, 0X4, 2, 0);
	add_func    (0X1F2F4,0X1F487);
	set_func_flags(0X1F2F4,0x4414);
	SetType(0X1F2F4, "int open(const char *, int, ...);");
	set_frame_size(0X1F2F4, 0X4, 2, 0);
	add_func    (0X1F487,0X1F498);
	set_func_flags(0X1F487,0x4404);
	add_func    (0X1F498,0X1F53E);
	set_func_flags(0X1F498,0x4414);
	SetType(0X1F498, "int __cdecl write(int, const void *, unsigned int);");
	set_frame_size(0X1F498, 0X8, 2, 0);
	add_func    (0X1F53E,0X1F58C);
	set_func_flags(0X1F53E,0x4404);
	set_frame_size(0X1F53E, 0X4, 0, 0);
	add_func    (0X1F5C0,0X1F5D2);
	set_func_flags(0X1F5C0,0x4414);
	set_func_cmt(0X1F5C0,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X1F5C0, 0, 2, 0);
	add_func    (0X1F5D2,0X1F618);
	set_func_flags(0X1F5D2,0x4414);
	set_func_cmt(0X1F5D2,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X1F5D2, 0X4, 2, 0);
	add_func    (0X1F618,0X1F64A);
	set_func_flags(0X1F618,0x4414);
	SetType(0X1F618, "int flushall(void);");
	set_frame_size(0X1F618, 0X8, 2, 0);
	add_func    (0X1F64A,0X1F65C);
	set_func_flags(0X1F64A,0x4404);
	SetType(0X1F64A, "size_t stackavail(void);");
	add_func    (0X1F65F,0X1F742);
	set_func_flags(0X1F65F,0x4404);
	add_func    (0X1F742,0X1F77C);
	set_func_flags(0X1F742,0x4404);
	add_func    (0X1F77C,0X1F79E);
	set_func_flags(0X1F77C,0x4404);
	add_func    (0X1F79E,0X1F7BD);
	set_func_flags(0X1F79E,0x4404);
	set_frame_size(0X1F79E, 0X2, 0, 0);
	add_func    (0X1F7BE,0X1F82C);
	set_func_flags(0X1F7BE,0x4414);
	set_frame_size(0X1F7BE, 0X4, 2, 0);
	add_func    (0X1F82C,0X1F882);
	set_func_flags(0X1F82C,0x4404);
	add_func    (0X1F882,0X1F8E5);
	set_func_flags(0X1F882,0x412);
	set_frame_size(0X1F882, 0, 2, 0);
	add_func    (0X1F8F8,0X1F97B);
	set_func_flags(0X1F8F8,0x4400);
	add_func    (0X1F993,0X1F9B7);
	set_func_flags(0X1F993,0x4400);
	add_func    (0X1F9B7,0X1F9CC);
	set_func_flags(0X1F9B7,0x4400);
	add_func    (0X1F9DD,0X1FABF);
	set_func_flags(0X1F9DD,0x4400);
	add_func    (0X1FABF,0X1FB1D);
	set_func_flags(0X1FABF,0x4400);
	add_func    (0X1FB1D,0X1FB52);
	set_func_flags(0X1FB1D,0x4400);
	add_func    (0X1FB52,0X1FB88);
	set_func_flags(0X1FB52,0x4400);
	add_func    (0X1FB88,0X1FBB4);
	set_func_flags(0X1FB88,0x4400);
	add_func    (0X1FBB4,0X1FC03);
	set_func_flags(0X1FBB4,0x4400);
	add_func    (0X1FC03,0X1FC3A);
	set_func_flags(0X1FC03,0x4400);
	add_func    (0X1FC3A,0X1FC8E);
	set_func_flags(0X1FC3A,0x4400);
	add_func    (0X1FC8E,0X1FD04);
	set_func_flags(0X1FC8E,0x4400);
	add_func    (0X1FD04,0X1FD72);
	set_func_flags(0X1FD04,0x4400);
	add_func    (0X1FD72,0X1FDAD);
	set_func_flags(0X1FD72,0x4400);
	add_func    (0X1FDAD,0X1FDD0);
	set_func_flags(0X1FDAD,0x4400);
	add_func    (0X1FE5C,0X1FEEC);
	set_func_flags(0X1FE5C,0x4400);
	add_func    (0X1FEEC,0X1FEFE);
	set_func_flags(0X1FEEC,0x412);
	set_frame_size(0X1FEEC, 0X4, 2, 0);
	add_func    (0X1FEFE,0X20104);
	set_func_flags(0X1FEFE,0x400);
	set_frame_size(0X1FEFE, 0, 0, 0);
	add_func    (0X20104,0X20188);
	set_func_flags(0X20104,0x4412);
	set_frame_size(0X20104, 0X4, 2, 0);
	add_func    (0X20188,0X20289);
	set_func_flags(0X20188,0x4400);
	set_frame_size(0X20188, 0X2, 0, 0);
	add_func    (0X20289,0X202B2);
	set_func_flags(0X20289,0x4400);
	add_func    (0X202B6,0X202C7);
	set_func_flags(0X202B6,0x4400);
	add_func    (0X202C7,0X202DA);
	set_func_flags(0X202C7,0x4412);
	set_frame_size(0X202C7, 0X2, 2, 0);
	add_func    (0X202DA,0X202E8);
	set_func_flags(0X202DA,0x4402);
	set_frame_size(0X202DA, 0X2, 0, 0);
	add_func    (0X202F6,0X20300);
	set_func_flags(0X202F6,0x4402);
	set_frame_size(0X202F6, 0X6, 0, 0);
	add_func    (0X20300,0X203E0);
	set_func_flags(0X20300,0x4400);
	add_func    (0X203E0,0X2043C);
	set_func_flags(0X203E0,0x4400);
	add_func    (0X2044A,0X20467);
	set_func_flags(0X2044A,0x4402);
	set_frame_size(0X2044A, 0X6, 0, 0);
	add_func    (0X20467,0X20534);
	set_func_flags(0X20467,0x4400);
	add_func    (0X20534,0X20657);
	set_func_flags(0X20534,0x4400);
	add_func    (0X20658,0X20662);
	set_func_flags(0X20658,0x4402);
	set_frame_size(0X20658, 0X6, 0, 0);
	add_func    (0X20674,0X207F8);
	set_func_flags(0X20674,0x4400);
	add_func    (0X20970,0X20A45);
	set_func_flags(0X20970,0x4400);
	add_func    (0X20A46,0X20A58);
	set_func_flags(0X20A46,0x4402);
	set_frame_size(0X20A46, 0X6, 0, 0);
	add_func    (0X20A58,0X20B02);
	set_func_flags(0X20A58,0x4400);
	add_func    (0X20B02,0X20BAD);
	set_func_flags(0X20B02,0x4400);
	add_func    (0X20BAE,0X20BC6);
	set_func_flags(0X20BAE,0x4412);
	set_frame_size(0X20BAE, 0X4, 2, 0);
	add_func    (0X20BDF,0X20CFB);
	set_func_flags(0X20BDF,0x4400);
	add_func    (0X20CFB,0X20E19);
	set_func_flags(0X20CFB,0x4400);
	add_func    (0X20E19,0X20E38);
	set_func_flags(0X20E19,0x4400);
	add_func    (0X20E38,0X20E4D);
	set_func_flags(0X20E38,0x4412);
	set_frame_size(0X20E38, 0X4, 2, 0);
	add_func    (0X20E4D,0X20FDC);
	set_func_flags(0X20E4D,0x4400);
	add_func    (0X20FDC,0X20FEA);
	set_func_flags(0X20FDC,0x4402);
	set_frame_size(0X20FDC, 0X6, 0, 0);
	add_func    (0X20FEA,0X21075);
	set_func_flags(0X20FEA,0x4400);
	add_func    (0X21075,0X211B8);
	set_func_flags(0X21075,0x4400);
	add_func    (0X211BA,0X2120A);
	set_func_flags(0X211BA,0x4400);
	add_func    (0X21267,0X21268);
	set_func_flags(0X21267,0x4400);
	add_func    (0X21422,0X21443);
	set_func_flags(0X21422,0x4400);
	add_func    (0X21444,0X214B5);
	set_func_flags(0X21444,0x412);
	set_frame_size(0X21444, 0X6, 2, 0);
	add_func    (0X21526,0X2152A);
	set_func_flags(0X21526,0x4402);
	add_func    (0X2152A,0X21536);
	set_func_flags(0X2152A,0x4402);
	set_frame_size(0X2152A, 0X6, 0, 0);
	add_func    (0X21536,0X216C2);
	set_func_flags(0X21536,0x4400);
	add_func    (0X216C2,0X216E3);
	set_func_flags(0X216C2,0x4400);
	add_func    (0X21704,0X2171A);
	set_func_flags(0X21704,0x402);
	set_frame_size(0X21704, 0X6, 0, 0);
	add_func    (0X2171A,0X21720);
	set_func_flags(0X2171A,0x4402);
	set_frame_size(0X2171A, 0X2, 0, 0);
	add_func    (0X21720,0X21756);
	set_func_flags(0X21720,0x4400);
	add_func    (0X21756,0X217A5);
	set_func_flags(0X21756,0x4400);
	add_func    (0X217B4,0X2189B);
	set_func_flags(0X217B4,0x4400);
	add_func    (0X2189C,0X218A8);
	set_func_flags(0X2189C,0x4402);
	set_frame_size(0X2189C, 0X8, 0, 0);
	add_func    (0X218A8,0X21A58);
	set_func_flags(0X218A8,0x4400);
	add_func    (0X21A7A,0X21A7E);
	set_func_flags(0X21A7A,0x4402);
	add_func    (0X21A7E,0X21A82);
	set_func_flags(0X21A7E,0x402);
	SetType(0X21A7E, "void __cdecl __far sub_21A7E();");
	set_frame_size(0X21A7E, 0, 0, 0);
	add_func    (0X21A82,0X21A86);
	set_func_flags(0X21A82,0x482);
	set_frame_size(0X21A82, 0, 0, 0);
	add_func    (0X21A86,0X22411);
	set_func_flags(0X21A86,0x400);
	set_frame_size(0X21A86, 0, 0, 0);
	add_func    (0X22411,0X2265B);
	set_func_flags(0X22411,0x400);
	SetType(0X22411, "void __cdecl InitializeGameSettings();");
	set_frame_size(0X22411, 0, 0, 0);
	add_func    (0X2265B,0X2266B);
	set_func_flags(0X2265B,0x4402);
	add_func    (0X2266B,0X2267E);
	set_func_flags(0X2266B,0x4400);
	add_func    (0X2267E,0X22691);
	set_func_flags(0X2267E,0x4402);
	add_func    (0X22691,0X226BE);
	set_func_flags(0X22691,0x4400);
	set_frame_size(0X22691, 0X2, 0, 0);
	add_func    (0X226BE,0X2271A);
	set_func_flags(0X226BE,0x4400);
	add_func    (0X2271A,0X2272E);
	set_func_flags(0X2271A,0x4402);
	set_frame_size(0X2271A, 0X4, 0, 0);
	add_func    (0X2272E,0X22746);
	set_func_flags(0X2272E,0x4402);
	set_frame_size(0X2272E, 0X4, 0, 0);
	add_func    (0X22746,0X22796);
	set_func_flags(0X22746,0x4402);
	add_func    (0X22796,0X227B0);
	set_func_flags(0X22796,0x4402);
	add_func    (0X227B0,0X228C9);
	set_func_flags(0X227B0,0x401);
	add_func    (0X3376E,0X33773);
	set_func_flags(0X3376E,0x400);
	set_frame_size(0X3376E, 0, 0, 0);
	add_func    (0X33773,0X33778);
	set_func_flags(0X33773,0x400);
	set_frame_size(0X33773, 0, 0, 0);
	add_func    (0X33778,0X3377D);
	set_func_flags(0X33778,0x400);
	set_frame_size(0X33778, 0, 0, 0);
	add_func    (0X3377D,0X33782);
	set_func_flags(0X3377D,0x400);
	set_frame_size(0X3377D, 0, 0, 0);
	add_func    (0X33782,0X33787);
	set_func_flags(0X33782,0x400);
	set_frame_size(0X33782, 0, 0, 0);
	add_func    (0X33787,0X3378C);
	set_func_flags(0X33787,0x400);
	set_frame_size(0X33787, 0, 0, 0);
	add_func    (0X3378C,0X33791);
	set_func_flags(0X3378C,0x400);
	set_frame_size(0X3378C, 0, 0, 0);
	add_func    (0X337A5,0X337AA);
	set_func_flags(0X337A5,0x400);
	set_frame_size(0X337A5, 0, 0, 0);
	add_func    (0X337AA,0X337AF);
	set_func_flags(0X337AA,0x400);
	set_frame_size(0X337AA, 0, 0, 0);
	add_func    (0X337AF,0X337B4);
	set_func_flags(0X337AF,0x400);
	set_frame_size(0X337AF, 0, 0, 0);
	add_func    (0X337B4,0X337B9);
	set_func_flags(0X337B4,0x400);
	set_frame_size(0X337B4, 0, 0, 0);
	add_func    (0X337B9,0X337BE);
	set_func_flags(0X337B9,0x400);
	set_frame_size(0X337B9, 0, 0, 0);
	add_func    (0X337BE,0X337C3);
	set_func_flags(0X337BE,0x400);
	set_frame_size(0X337BE, 0, 0, 0);
	add_func    (0X337C8,0X337CD);
	set_func_flags(0X337C8,0x400);
	set_frame_size(0X337C8, 0, 0, 0);
	add_func    (0X337E6,0X337EB);
	set_func_flags(0X337E6,0x400);
	set_frame_size(0X337E6, 0, 0, 0);
	add_func    (0X337EB,0X337F0);
	set_func_flags(0X337EB,0x400);
	set_frame_size(0X337EB, 0, 0, 0);
	add_func    (0X337F0,0X337F5);
	set_func_flags(0X337F0,0x400);
	set_frame_size(0X337F0, 0, 0, 0);
	add_func    (0X337F5,0X337FA);
	set_func_flags(0X337F5,0x400);
	set_frame_size(0X337F5, 0, 0, 0);
	add_func    (0X337FA,0X337FF);
	set_func_flags(0X337FA,0x400);
	set_frame_size(0X337FA, 0, 0, 0);
	add_func    (0X337FF,0X33804);
	set_func_flags(0X337FF,0x400);
	set_frame_size(0X337FF, 0, 0, 0);
	add_func    (0X33809,0X3380E);
	set_func_flags(0X33809,0x400);
	set_frame_size(0X33809, 0, 0, 0);
	add_func    (0X3380E,0X33813);
	set_func_flags(0X3380E,0x400);
	set_frame_size(0X3380E, 0, 0, 0);
	add_func    (0X33813,0X33818);
	set_func_flags(0X33813,0x400);
	set_frame_size(0X33813, 0, 0, 0);
	add_func    (0X33818,0X3381D);
	set_func_flags(0X33818,0x400);
	set_frame_size(0X33818, 0, 0, 0);
	add_func    (0X3381D,0X33822);
	set_func_flags(0X3381D,0x400);
	set_frame_size(0X3381D, 0, 0, 0);
	add_func    (0X33822,0X33827);
	set_func_flags(0X33822,0x400);
	set_frame_size(0X33822, 0, 0, 0);
	add_func    (0X33827,0X3382C);
	set_func_flags(0X33827,0x400);
	set_frame_size(0X33827, 0, 0, 0);
	add_func    (0X33836,0X3383B);
	set_func_flags(0X33836,0x400);
	set_frame_size(0X33836, 0, 0, 0);
	add_func    (0X3383B,0X33840);
	set_func_flags(0X3383B,0x400);
	set_frame_size(0X3383B, 0, 0, 0);
	add_func    (0X33840,0X33845);
	set_func_flags(0X33840,0x400);
	set_frame_size(0X33840, 0, 0, 0);
	add_func    (0X33845,0X3384A);
	set_func_flags(0X33845,0x400);
	set_frame_size(0X33845, 0, 0, 0);
	add_func    (0X3384A,0X3384F);
	set_func_flags(0X3384A,0x400);
	set_frame_size(0X3384A, 0, 0, 0);
	add_func    (0X3384F,0X33854);
	set_func_flags(0X3384F,0x400);
	set_frame_size(0X3384F, 0, 0, 0);
	add_func    (0X33854,0X33859);
	set_func_flags(0X33854,0x400);
	set_frame_size(0X33854, 0, 0, 0);
	add_func    (0X33868,0X3386D);
	set_func_flags(0X33868,0x400);
	set_frame_size(0X33868, 0, 0, 0);
	add_func    (0X3386D,0X33872);
	set_func_flags(0X3386D,0x400);
	set_frame_size(0X3386D, 0, 0, 0);
	add_func    (0X33872,0X33877);
	set_func_flags(0X33872,0x400);
	set_frame_size(0X33872, 0, 0, 0);
	add_func    (0X33877,0X3387C);
	set_func_flags(0X33877,0x400);
	set_frame_size(0X33877, 0, 0, 0);
	add_func    (0X3387C,0X33881);
	set_func_flags(0X3387C,0x400);
	set_frame_size(0X3387C, 0, 0, 0);
	add_func    (0X33881,0X33886);
	set_func_flags(0X33881,0x400);
	set_frame_size(0X33881, 0, 0, 0);
	add_func    (0X33886,0X3388B);
	set_func_flags(0X33886,0x400);
	set_frame_size(0X33886, 0, 0, 0);
	add_func    (0X33890,0X33895);
	set_func_flags(0X33890,0x400);
	set_frame_size(0X33890, 0, 0, 0);
	add_func    (0X33895,0X3389A);
	set_func_flags(0X33895,0x400);
	set_frame_size(0X33895, 0, 0, 0);
	add_func    (0X3389F,0X338A4);
	set_func_flags(0X3389F,0x400);
	set_frame_size(0X3389F, 0, 0, 0);
	add_func    (0X338A4,0X338A9);
	set_func_flags(0X338A4,0x400);
	set_frame_size(0X338A4, 0, 0, 0);
	add_func    (0X338A9,0X338AE);
	set_func_flags(0X338A9,0x400);
	set_frame_size(0X338A9, 0, 0, 0);
	add_func    (0X338B3,0X338B8);
	set_func_flags(0X338B3,0x400);
	set_frame_size(0X338B3, 0, 0, 0);
	add_func    (0X338C2,0X338C7);
	set_func_flags(0X338C2,0x400);
	set_frame_size(0X338C2, 0, 0, 0);
	add_func    (0X338C7,0X338CC);
	set_func_flags(0X338C7,0x400);
	set_frame_size(0X338C7, 0, 0, 0);
	add_func    (0X338CC,0X338D1);
	set_func_flags(0X338CC,0x400);
	set_frame_size(0X338CC, 0, 0, 0);
	add_func    (0X338D1,0X338D6);
	set_func_flags(0X338D1,0x400);
	set_frame_size(0X338D1, 0, 0, 0);
	add_func    (0X338DB,0X338E0);
	set_func_flags(0X338DB,0x400);
	set_frame_size(0X338DB, 0, 0, 0);
	add_func    (0X338E5,0X338EA);
	set_func_flags(0X338E5,0x400);
	set_frame_size(0X338E5, 0, 0, 0);
	add_func    (0X338EA,0X338EF);
	set_func_flags(0X338EA,0x400);
	set_frame_size(0X338EA, 0, 0, 0);
	add_func    (0X338F9,0X338FE);
	set_func_flags(0X338F9,0x400);
	set_frame_size(0X338F9, 0, 0, 0);
	add_func    (0X33908,0X3390D);
	set_func_flags(0X33908,0x400);
	set_frame_size(0X33908, 0, 0, 0);
	add_func    (0X33935,0X3393A);
	set_func_flags(0X33935,0x400);
	set_frame_size(0X33935, 0, 0, 0);
	add_func    (0X3393F,0X33944);
	set_func_flags(0X3393F,0x400);
	set_frame_size(0X3393F, 0, 0, 0);
	add_func    (0X33962,0X33967);
	set_func_flags(0X33962,0x400);
	set_frame_size(0X33962, 0, 0, 0);
	add_func    (0X33967,0X3396C);
	set_func_flags(0X33967,0x400);
	set_frame_size(0X33967, 0, 0, 0);
	add_func    (0X3396C,0X33971);
	set_func_flags(0X3396C,0x400);
	set_frame_size(0X3396C, 0, 0, 0);
	add_func    (0X33976,0X3397B);
	set_func_flags(0X33976,0x400);
	set_frame_size(0X33976, 0, 0, 0);
	add_func    (0X3397B,0X33980);
	set_func_flags(0X3397B,0x400);
	set_frame_size(0X3397B, 0, 0, 0);
	add_func    (0X33980,0X33985);
	set_func_flags(0X33980,0x400);
	set_frame_size(0X33980, 0, 0, 0);
	add_func    (0X33985,0X3398A);
	set_func_flags(0X33985,0x400);
	set_frame_size(0X33985, 0, 0, 0);
	add_func    (0X3398F,0X33994);
	set_func_flags(0X3398F,0x400);
	set_frame_size(0X3398F, 0, 0, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X10000,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10023,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1003F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1004D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1005B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10069,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10083,"es",0XFFFFFFFF,3);
	split_sreg_range(0X100B1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X100C1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X100E6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X100FC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10154,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10175,"es",0X228D,3);
	split_sreg_range(0X10224,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1023B,"es",0,3);
	split_sreg_range(0X10250,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10266,"es",0XFFFFFFFF,3);
	split_sreg_range(0X102D1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10304,"es",0,3);
	split_sreg_range(0X106A2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X106DB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X106FB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10715,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10779,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10795,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1079E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10849,"es",0XFFFFFFFF,3);
	split_sreg_range(0X108DC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X108ED,"es",0XFFFFFFFF,3);
	split_sreg_range(0X108FB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10952,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10A18,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10B0F,"es",0,3);
	split_sreg_range(0X10D00,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10FF3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X112AB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11324,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1192B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X119DD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X119E8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B52,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B6A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B74,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B7F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B8A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B95,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11BA0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11BAB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11E65,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12F6F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13052,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13449,"es",0XFFFFFFFF,3);
	split_sreg_range(0X136FC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1370E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13779,"es",0XFFFFFFFF,3);
	split_sreg_range(0X137AA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X137E8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13821,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1384F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X138E0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13ABC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13AE5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13AF2,"es",0X328B,3);
	split_sreg_range(0X13C43,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13D83,"es",0,3);
	split_sreg_range(0X13E8D,"es",0,3);
	split_sreg_range(0X13F9C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1427C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14728,"es",0XFFFFFFFF,3);
	split_sreg_range(0X147CE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14C9B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14E83,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1508B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X15E7F,"es",0X228D,3);
	split_sreg_range(0X15E96,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16280,"es",0XFFFFFFFF,3);
	split_sreg_range(0X165D8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X177C5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18EEF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X190A1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19673,"es",0XFFFFFFFF,3);
	split_sreg_range(0X196C1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19DBE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1CE15,"es",0X228D,3);
	split_sreg_range(0X1D236,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D4EF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D720,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DE15,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DE6C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DE8D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DEB9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DEE7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DEF5,"es",0X328B,3);
	split_sreg_range(0X1DF14,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DF49,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DF7A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E116,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E134,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E17E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E1A8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E1F2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E210,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E25A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E265,"es",0X328B,3);
	split_sreg_range(0X1E28B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E497,"es",0X328B,3);
	split_sreg_range(0X1E50E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E53C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E545,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E565,"es",0X328B,3);
	split_sreg_range(0X1E9B7,"es",0X328B,3);
	split_sreg_range(0X1E9FC,"es",0X328B,3);
	split_sreg_range(0X1EA27,"es",0X328B,3);
	split_sreg_range(0X1EB0F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1EB6F,"es",0X328B,3);
	split_sreg_range(0X1EDD5,"es",0X328B,3);
	split_sreg_range(0X1F211,"es",0X328B,3);
	split_sreg_range(0X1F4CC,"es",0X328B,3);
	split_sreg_range(0X1F509,"es",0X328B,3);
	split_sreg_range(0X1F5E1,"es",0X328B,3);
	split_sreg_range(0X1F60F,"es",0X328B,3);
	split_sreg_range(0X1F826,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F84C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F86E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F882,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F8E3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F998,"es",0,3);
	split_sreg_range(0X1F9B6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F9BC,"es",0,3);
	split_sreg_range(0X1F9CB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F9D9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FDE0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FE1A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FE4F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2011E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202B6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202DF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202EF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2030C,"es",0X328B,3);
	split_sreg_range(0X2042F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20443,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2045C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20669,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20787,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2078D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20797,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207AD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207B3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207BD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207CF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207D5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207DF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20A4D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20AF6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20B8A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20B99,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20BAC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20FE3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21126,"es",0XFFFFFFFF,3);
	split_sreg_range(0X211A4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X211F2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21209,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21364,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21415,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2144C,"es",0X328B,3);
	split_sreg_range(0X214BD,"es",0X328B,3);
	split_sreg_range(0X21532,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2153A,"es",0,3);
	split_sreg_range(0X21555,"es",0X328B,3);
	split_sreg_range(0X2155C,"es",0,3);
	split_sreg_range(0X21568,"es",0X328B,3);
	split_sreg_range(0X21582,"es",0,3);
	split_sreg_range(0X2158E,"es",0X328B,3);
	split_sreg_range(0X2172D,"es",0X328B,3);
	split_sreg_range(0X2175B,"es",0X328B,3);
	split_sreg_range(0X218A7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X218AC,"es",0,3);
	split_sreg_range(0X218C7,"es",0X328B,3);
	split_sreg_range(0X218CE,"es",0,3);
	split_sreg_range(0X218DA,"es",0X328B,3);
	split_sreg_range(0X21A20,"es",0,3);
	split_sreg_range(0X21A2C,"es",0X328B,3);
	split_sreg_range(0X21A49,"es",0,3);
	split_sreg_range(0X21A55,"es",0X328B,3);
	split_sreg_range(0X21A79,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22725,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2272B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2273C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22742,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22746,"es",0XFFFFFFFF,3);
	split_sreg_range(0X227C0,"es",0X40,3);
	split_sreg_range(0X228C1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X228D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X328B0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3C8D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X1E432,"ss",0X3C8D,3);
	split_sreg_range(0X1E451,"ss",0X328B,3);
	split_sreg_range(0X1F882,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X21A79,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X22746,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X228D0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X328B0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3C8D0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"ds",0X328B,3);
	split_sreg_range(0X10325,"ds",0X328B,3);
	split_sreg_range(0X1032D,"ds",0X328B,3);
	split_sreg_range(0X106DA,"ds",0X328B,3);
	split_sreg_range(0X10714,"ds",0X328B,3);
	split_sreg_range(0X13C05,"ds",0X1000,3);
	split_sreg_range(0X13C0B,"ds",0X328B,3);
	split_sreg_range(0X13C19,"ds",0X328B,3);
	split_sreg_range(0X13C1F,"ds",0X328B,3);
	split_sreg_range(0X13C25,"ds",0,3);
	split_sreg_range(0X13C2B,"ds",0X328B,3);
	split_sreg_range(0X13C33,"ds",0X328B,3);
	split_sreg_range(0X13C3A,"ds",0X328B,3);
	split_sreg_range(0X13CAD,"ds",0X328B,3);
	split_sreg_range(0X13CB0,"ds",0X328B,3);
	split_sreg_range(0X13CCE,"ds",0X328B,3);
	split_sreg_range(0X13CD1,"ds",0X328B,3);
	split_sreg_range(0X1DDD4,"ds",0X328B,3);
	split_sreg_range(0X1DE2B,"ds",0X328B,3);
	split_sreg_range(0X1DEA1,"ds",0X328B,3);
	split_sreg_range(0X1DECE,"ds",0X328B,3);
	split_sreg_range(0X1DEDA,"ds",0X328B,3);
	split_sreg_range(0X1DEFA,"ds",0X328B,3);
	split_sreg_range(0X1DF15,"ds",0X328B,3);
	split_sreg_range(0X1DF1E,"ds",0X328B,3);
	split_sreg_range(0X1DF36,"ds",0X328B,3);
	split_sreg_range(0X1DF5E,"ds",0X328B,3);
	split_sreg_range(0X1DF6D,"ds",0X328B,3);
	split_sreg_range(0X1E432,"ds",0XFF0,3);
	split_sreg_range(0X1E45A,"ds",0X328B,3);
	split_sreg_range(0X1E4A6,"ds",0X328B,3);
	split_sreg_range(0X1E4AB,"ds",0X328B,3);
	split_sreg_range(0X1E4CB,"ds",0X328B,3);
	split_sreg_range(0X1E4FA,"ds",0X1000,3);
	split_sreg_range(0X1E504,"ds",0X328B,3);
	split_sreg_range(0X1E517,"ds",0X328B,3);
	split_sreg_range(0X1E524,"ds",0X328B,3);
	split_sreg_range(0X1E52C,"ds",0X328B,3);
	split_sreg_range(0X1E538,"ds",0X328B,3);
	split_sreg_range(0X1E566,"ds",0X328B,3);
	split_sreg_range(0X1E579,"ds",0X328B,3);
	split_sreg_range(0X1E616,"ds",0X328B,3);
	split_sreg_range(0X1E61C,"ds",0X328B,3);
	split_sreg_range(0X1E62B,"ds",0X328B,3);
	split_sreg_range(0X1E630,"ds",0X328B,3);
	split_sreg_range(0X1EB09,"ds",0X328B,3);
	split_sreg_range(0X1EB18,"ds",0X328B,3);
	split_sreg_range(0X1F6F0,"ds",0X328B,3);
	split_sreg_range(0X1F706,"ds",0,3);
	split_sreg_range(0X1F7AC,"ds",0X328B,3);
	split_sreg_range(0X1F7B6,"ds",0X328B,3);
	split_sreg_range(0X1F882,"ds",0X328B,3);
	split_sreg_range(0X1F8E2,"ds",0X328B,3);
	split_sreg_range(0X21A79,"ds",0X328B,3);
	split_sreg_range(0X22737,"ds",0X328B,3);
	split_sreg_range(0X22743,"ds",0X328B,3);
	split_sreg_range(0X22746,"ds",0X328B,3);
	split_sreg_range(0X2274C,"ds",0X40,3);
	split_sreg_range(0X22777,"ds",0,3);
	split_sreg_range(0X22795,"ds",0X328B,3);
	split_sreg_range(0X2279B,"ds",0,3);
	split_sreg_range(0X227AF,"ds",0X328B,3);
	split_sreg_range(0X227BB,"ds",0X328B,3);
	split_sreg_range(0X228C2,"ds",0X328B,3);
	split_sreg_range(0X228D0,"ds",0X328B,3);
	split_sreg_range(0X328B0,"ds",0X328B,3);
	split_sreg_range(0X3C8D0,"ds",0X328B,3);
	split_sreg_range(0X10000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X1F882,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X21A79,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X22746,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X228D0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X328B0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3C8D0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X1F882,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X21A79,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X22746,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X228D0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X328B0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3C8D0,"gs",0XFFFFFFFF,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
        end_type_updating(UTP_STRUCT);
}

// End of file.
